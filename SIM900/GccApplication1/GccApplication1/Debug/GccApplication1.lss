
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001b34  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000348  00800060  00001b34  00001bc8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000044d  008003a8  008003a8  00001f10  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001f10  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000120  00000000  00000000  00001f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002a7c  00000000  00000000  0000208c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000037e  00000000  00000000  00004b08  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000081c  00000000  00000000  00004e86  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000648  00000000  00000000  000056a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000459  00000000  00000000  00005cec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000017d3  00000000  00000000  00006145  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000110  00000000  00000000  00007918  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 27 07 	jmp	0xe4e	; 0xe4e <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 8c 00 	jmp	0x118	; 0x118 <__vector_13>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	13 e0       	ldi	r17, 0x03	; 3
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e3       	ldi	r30, 0x34	; 52
      68:	fb e1       	ldi	r31, 0x1B	; 27
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a8 3a       	cpi	r26, 0xA8	; 168
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	27 e0       	ldi	r18, 0x07	; 7
      78:	a8 ea       	ldi	r26, 0xA8	; 168
      7a:	b3 e0       	ldi	r27, 0x03	; 3
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a5 3f       	cpi	r26, 0xF5	; 245
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 8b 08 	call	0x1116	; 0x1116 <main>
      8a:	0c 94 98 0d 	jmp	0x1b30	; 0x1b30 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <read_adc>:
	pinChange(D3,0);
	
	if(a & 16)
	pinChange(D4,1);
	else
	pinChange(D4,0);
      92:	80 64       	ori	r24, 0x40	; 64
      94:	87 b9       	out	0x07, r24	; 7
      96:	83 e0       	ldi	r24, 0x03	; 3
      98:	8a 95       	dec	r24

	if(a & 32)
      9a:	f1 f7       	brne	.-4      	; 0x98 <read_adc+0x6>
      9c:	00 00       	nop
	pinChange(D5,1);
      9e:	36 9a       	sbi	0x06, 6	; 6
      a0:	34 9b       	sbis	0x06, 4	; 6
      a2:	fe cf       	rjmp	.-4      	; 0xa0 <read_adc+0xe>
      a4:	34 9a       	sbi	0x06, 4	; 6
      a6:	84 b1       	in	r24, 0x04	; 4
      a8:	95 b1       	in	r25, 0x05	; 5
      aa:	08 95       	ret

000000ac <UART_ON>:
	else
	pinChange(D5,0);
      ac:	cf 92       	push	r12
      ae:	df 92       	push	r13
      b0:	ef 92       	push	r14
      b2:	ff 92       	push	r15
      b4:	cf 93       	push	r28
      b6:	df 93       	push	r29
	
	if(a & 64)
      b8:	ec 01       	movw	r28, r24
      ba:	70 e0       	ldi	r23, 0x00	; 0
	pinChange(D6,1);
      bc:	80 e0       	ldi	r24, 0x00	; 0
      be:	90 e0       	ldi	r25, 0x00	; 0
      c0:	0e 94 b7 09 	call	0x136e	; 0x136e <__floatsisf>
      c4:	6b 01       	movw	r12, r22
      c6:	7c 01       	movw	r14, r24
      c8:	be 01       	movw	r22, r28
	else
	pinChange(D6,0);
      ca:	80 e0       	ldi	r24, 0x00	; 0
      cc:	90 e0       	ldi	r25, 0x00	; 0
      ce:	0e 94 b5 09 	call	0x136a	; 0x136a <__floatunsisf>
      d2:	2d eb       	ldi	r18, 0xBD	; 189
      d4:	37 e3       	ldi	r19, 0x37	; 55
	
	if(a & 128)
      d6:	46 e8       	ldi	r20, 0x86	; 134
      d8:	58 e3       	ldi	r21, 0x38	; 56
	pinChange(D7,1);
      da:	0e 94 43 0a 	call	0x1486	; 0x1486 <__mulsf3>
      de:	9b 01       	movw	r18, r22
      e0:	ac 01       	movw	r20, r24
      e2:	c7 01       	movw	r24, r14
      e4:	b6 01       	movw	r22, r12
      e6:	0e 94 21 09 	call	0x1242	; 0x1242 <__divsf3>
	else
	pinChange(D7,0);
      ea:	0e 94 89 09 	call	0x1312	; 0x1312 <__fixunssfsi>
      ee:	61 50       	subi	r22, 0x01	; 1
      f0:	69 b9       	out	0x09, r22	; 9
      f2:	10 bc       	out	0x20, r1	; 32
}
      f4:	8a b1       	in	r24, 0x0a	; 10
      f6:	88 69       	ori	r24, 0x98	; 152
	unsigned char x;
	x=fosc/(0.000064*boud);
	x-=1;
	UBRRL=x;
	UBRRH=x>>8;
	UCSRB |=(1 << TXEN) | (1 << RXEN) | (1 << RXC);
      f8:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= (1 << URSEL) | (1 << UCSZ0) | (1 << UCSZ1) ;
      fa:	80 b5       	in	r24, 0x20	; 32
      fc:	86 68       	ori	r24, 0x86	; 134
      fe:	80 bd       	out	0x20, r24	; 32
	
	sei();
     100:	78 94       	sei
}
     102:	df 91       	pop	r29
     104:	cf 91       	pop	r28
     106:	ff 90       	pop	r15
     108:	ef 90       	pop	r14
     10a:	df 90       	pop	r13
     10c:	cf 90       	pop	r12
     10e:	08 95       	ret

00000110 <Tx_putc>:


void Tx_putc(char send)
{
	while ((UCSRA & (1 << UDRE)) == 0);
     110:	5d 9b       	sbis	0x0b, 5	; 11
     112:	fe cf       	rjmp	.-4      	; 0x110 <Tx_putc>
	UDR = send;
     114:	8c b9       	out	0x0c, r24	; 12
     116:	08 95       	ret

00000118 <__vector_13>:
}

ISR(USART_RXC_vect)
{
     118:	1f 92       	push	r1
     11a:	0f 92       	push	r0
     11c:	0f b6       	in	r0, 0x3f	; 63
     11e:	0f 92       	push	r0
     120:	11 24       	eor	r1, r1
     122:	2f 93       	push	r18
     124:	8f 93       	push	r24
     126:	9f 93       	push	r25
     128:	ef 93       	push	r30
     12a:	ff 93       	push	r31
	Recieve = UDR;
     12c:	2c b1       	in	r18, 0x0c	; 12
     12e:	20 93 5b 06 	sts	0x065B, r18
	Temp[i] = Recieve;
     132:	80 91 a8 03 	lds	r24, 0x03A8
     136:	90 91 a9 03 	lds	r25, 0x03A9
     13a:	fc 01       	movw	r30, r24
     13c:	e0 53       	subi	r30, 0x30	; 48
     13e:	fb 4f       	sbci	r31, 0xFB	; 251
     140:	20 83       	st	Z, r18
	i++;
     142:	01 96       	adiw	r24, 0x01	; 1
     144:	90 93 a9 03 	sts	0x03A9, r25
     148:	80 93 a8 03 	sts	0x03A8, r24
}
     14c:	ff 91       	pop	r31
     14e:	ef 91       	pop	r30
     150:	9f 91       	pop	r25
     152:	8f 91       	pop	r24
     154:	2f 91       	pop	r18
     156:	0f 90       	pop	r0
     158:	0f be       	out	0x3f, r0	; 63
     15a:	0f 90       	pop	r0
     15c:	1f 90       	pop	r1
     15e:	18 95       	reti

00000160 <Tx_puts>:

void Tx_puts(unsigned char name[])
{
     160:	dc 01       	movw	r26, r24
	unsigned char z=0;
	for(z=0;z<strlen(name);z++)
     162:	20 e0       	ldi	r18, 0x00	; 0
     164:	08 c0       	rjmp	.+16     	; 0x176 <Tx_puts+0x16>
	{
		while ((UCSRA & (1 << UDRE)) == 0);
     166:	5d 9b       	sbis	0x0b, 5	; 11
     168:	fe cf       	rjmp	.-4      	; 0x166 <Tx_puts+0x6>
		UDR=name[z];
     16a:	fd 01       	movw	r30, r26
     16c:	e8 0f       	add	r30, r24
     16e:	f9 1f       	adc	r31, r25
     170:	80 81       	ld	r24, Z
     172:	8c b9       	out	0x0c, r24	; 12
}

void Tx_puts(unsigned char name[])
{
	unsigned char z=0;
	for(z=0;z<strlen(name);z++)
     174:	2f 5f       	subi	r18, 0xFF	; 255
     176:	82 2f       	mov	r24, r18
     178:	90 e0       	ldi	r25, 0x00	; 0
     17a:	fd 01       	movw	r30, r26
     17c:	01 90       	ld	r0, Z+
     17e:	00 20       	and	r0, r0
     180:	e9 f7       	brne	.-6      	; 0x17c <Tx_puts+0x1c>
     182:	31 97       	sbiw	r30, 0x01	; 1
     184:	ea 1b       	sub	r30, r26
     186:	fb 0b       	sbc	r31, r27
     188:	8e 17       	cp	r24, r30
     18a:	9f 07       	cpc	r25, r31
     18c:	60 f3       	brcs	.-40     	; 0x166 <Tx_puts+0x6>
	{
		while ((UCSRA & (1 << UDRE)) == 0);
		UDR=name[z];
	}
	return;
}
     18e:	08 95       	ret

00000190 <pinChange>:

#include<util/delay.h>

void pinChange(int a, int b)
{
	if(b == 0)
     190:	67 2b       	or	r22, r23
     192:	09 f0       	breq	.+2      	; 0x196 <pinChange+0x6>
     194:	9f c0       	rjmp	.+318    	; 0x2d4 <pinChange+0x144>
	{
		if(a == eS_PORTA0)
     196:	00 97       	sbiw	r24, 0x00	; 0
     198:	11 f4       	brne	.+4      	; 0x19e <pinChange+0xe>
		  PORTA &= ~(1<<PA0);
     19a:	d8 98       	cbi	0x1b, 0	; 27
     19c:	08 95       	ret
		else if(a == eS_PORTA1)
     19e:	81 30       	cpi	r24, 0x01	; 1
     1a0:	91 05       	cpc	r25, r1
     1a2:	11 f4       	brne	.+4      	; 0x1a8 <pinChange+0x18>
		  PORTA &= ~(1<<PA1); 
     1a4:	d9 98       	cbi	0x1b, 1	; 27
     1a6:	08 95       	ret
		else if(a == eS_PORTA2)
     1a8:	82 30       	cpi	r24, 0x02	; 2
     1aa:	91 05       	cpc	r25, r1
     1ac:	11 f4       	brne	.+4      	; 0x1b2 <pinChange+0x22>
		  PORTA &= ~(1<<PA2);
     1ae:	da 98       	cbi	0x1b, 2	; 27
     1b0:	08 95       	ret
		else if(a == eS_PORTA3)
     1b2:	83 30       	cpi	r24, 0x03	; 3
     1b4:	91 05       	cpc	r25, r1
     1b6:	11 f4       	brne	.+4      	; 0x1bc <pinChange+0x2c>
		  PORTA &= ~(1<<PA3); 
     1b8:	db 98       	cbi	0x1b, 3	; 27
     1ba:	08 95       	ret
		else if(a == eS_PORTA4)
     1bc:	84 30       	cpi	r24, 0x04	; 4
     1be:	91 05       	cpc	r25, r1
     1c0:	11 f4       	brne	.+4      	; 0x1c6 <pinChange+0x36>
		  PORTA &= ~(1<<PA4); 
     1c2:	dc 98       	cbi	0x1b, 4	; 27
     1c4:	08 95       	ret
		else if(a == eS_PORTA5)
     1c6:	85 30       	cpi	r24, 0x05	; 5
     1c8:	91 05       	cpc	r25, r1
     1ca:	11 f4       	brne	.+4      	; 0x1d0 <pinChange+0x40>
		  PORTA &= ~(1<<PA5); 
     1cc:	dd 98       	cbi	0x1b, 5	; 27
     1ce:	08 95       	ret
		else if(a == eS_PORTA6)
     1d0:	86 30       	cpi	r24, 0x06	; 6
     1d2:	91 05       	cpc	r25, r1
     1d4:	11 f4       	brne	.+4      	; 0x1da <pinChange+0x4a>
		  PORTA &= ~(1<<PA6);  
     1d6:	de 98       	cbi	0x1b, 6	; 27
     1d8:	08 95       	ret
		else if(a == eS_PORTA7)
     1da:	87 30       	cpi	r24, 0x07	; 7
     1dc:	91 05       	cpc	r25, r1
     1de:	11 f4       	brne	.+4      	; 0x1e4 <pinChange+0x54>
		  PORTA &= ~(1<<PA7);
     1e0:	df 98       	cbi	0x1b, 7	; 27
     1e2:	08 95       	ret
		else if(a == eS_PORTB0)
     1e4:	8a 30       	cpi	r24, 0x0A	; 10
     1e6:	91 05       	cpc	r25, r1
     1e8:	11 f4       	brne	.+4      	; 0x1ee <pinChange+0x5e>
		  PORTB &= ~(1<<PB0);  
     1ea:	c0 98       	cbi	0x18, 0	; 24
     1ec:	08 95       	ret
		else if(a == eS_PORTB1)
     1ee:	8b 30       	cpi	r24, 0x0B	; 11
     1f0:	91 05       	cpc	r25, r1
     1f2:	11 f4       	brne	.+4      	; 0x1f8 <pinChange+0x68>
		  PORTB &= ~(1<<PB1);
     1f4:	c1 98       	cbi	0x18, 1	; 24
     1f6:	08 95       	ret
		else if(a == eS_PORTB2)
     1f8:	8c 30       	cpi	r24, 0x0C	; 12
     1fa:	91 05       	cpc	r25, r1
     1fc:	11 f4       	brne	.+4      	; 0x202 <pinChange+0x72>
		  PORTB &= ~(1<<PB2);  
     1fe:	c2 98       	cbi	0x18, 2	; 24
     200:	08 95       	ret
		else if(a == eS_PORTB3)
     202:	8d 30       	cpi	r24, 0x0D	; 13
     204:	91 05       	cpc	r25, r1
     206:	11 f4       	brne	.+4      	; 0x20c <pinChange+0x7c>
		  PORTB &= ~(1<<PB3);  
     208:	c3 98       	cbi	0x18, 3	; 24
     20a:	08 95       	ret
		else if(a == eS_PORTB4)
     20c:	8e 30       	cpi	r24, 0x0E	; 14
     20e:	91 05       	cpc	r25, r1
     210:	11 f4       	brne	.+4      	; 0x216 <pinChange+0x86>
		  PORTB &= ~(1<<PB4);  
     212:	c4 98       	cbi	0x18, 4	; 24
     214:	08 95       	ret
		else if(a == eS_PORTB5)
     216:	8f 30       	cpi	r24, 0x0F	; 15
     218:	91 05       	cpc	r25, r1
     21a:	11 f4       	brne	.+4      	; 0x220 <pinChange+0x90>
		  PORTB &= ~(1<<PB5);  
     21c:	c5 98       	cbi	0x18, 5	; 24
     21e:	08 95       	ret
		else if(a == eS_PORTB6)
     220:	80 31       	cpi	r24, 0x10	; 16
     222:	91 05       	cpc	r25, r1
     224:	11 f4       	brne	.+4      	; 0x22a <pinChange+0x9a>
		  PORTB &= ~(1<<PB6);  
     226:	c6 98       	cbi	0x18, 6	; 24
     228:	08 95       	ret
		else if(a == eS_PORTB7)
     22a:	81 31       	cpi	r24, 0x11	; 17
     22c:	91 05       	cpc	r25, r1
     22e:	11 f4       	brne	.+4      	; 0x234 <pinChange+0xa4>
		  PORTB &= ~(1<<PB7);
     230:	c7 98       	cbi	0x18, 7	; 24
     232:	08 95       	ret
		else if(a == eS_PORTC0)
     234:	84 31       	cpi	r24, 0x14	; 20
     236:	91 05       	cpc	r25, r1
     238:	11 f4       	brne	.+4      	; 0x23e <pinChange+0xae>
		  PORTC &= ~(1<<PC0);   
     23a:	a8 98       	cbi	0x15, 0	; 21
     23c:	08 95       	ret
		else if(a == eS_PORTC1)
     23e:	85 31       	cpi	r24, 0x15	; 21
     240:	91 05       	cpc	r25, r1
     242:	11 f4       	brne	.+4      	; 0x248 <pinChange+0xb8>
		  PORTC &= ~(1<<PC1); 
     244:	a9 98       	cbi	0x15, 1	; 21
     246:	08 95       	ret
		else if(a == eS_PORTC2)
     248:	86 31       	cpi	r24, 0x16	; 22
     24a:	91 05       	cpc	r25, r1
     24c:	11 f4       	brne	.+4      	; 0x252 <pinChange+0xc2>
		  PORTC &= ~(1<<PC2);
     24e:	aa 98       	cbi	0x15, 2	; 21
     250:	08 95       	ret
		else if(a == eS_PORTC3)
     252:	87 31       	cpi	r24, 0x17	; 23
     254:	91 05       	cpc	r25, r1
     256:	11 f4       	brne	.+4      	; 0x25c <pinChange+0xcc>
		  PORTC &= ~(1<<PC3);   
     258:	ab 98       	cbi	0x15, 3	; 21
     25a:	08 95       	ret
		else if(a == eS_PORTC4)
     25c:	88 31       	cpi	r24, 0x18	; 24
     25e:	91 05       	cpc	r25, r1
     260:	11 f4       	brne	.+4      	; 0x266 <pinChange+0xd6>
		  PORTC &= ~(1<<PC4);  
     262:	ac 98       	cbi	0x15, 4	; 21
     264:	08 95       	ret
		else if(a == eS_PORTC5)
     266:	89 31       	cpi	r24, 0x19	; 25
     268:	91 05       	cpc	r25, r1
     26a:	11 f4       	brne	.+4      	; 0x270 <pinChange+0xe0>
		  PORTC &= ~(1<<PC5);  
     26c:	ad 98       	cbi	0x15, 5	; 21
     26e:	08 95       	ret
        else if(a == eS_PORTC6)
     270:	8a 31       	cpi	r24, 0x1A	; 26
     272:	91 05       	cpc	r25, r1
     274:	11 f4       	brne	.+4      	; 0x27a <pinChange+0xea>
          PORTC &= ~(1<<PC6);		
     276:	ae 98       	cbi	0x15, 6	; 21
     278:	08 95       	ret
		else if(a == eS_PORTC7)
     27a:	8b 31       	cpi	r24, 0x1B	; 27
     27c:	91 05       	cpc	r25, r1
     27e:	11 f4       	brne	.+4      	; 0x284 <pinChange+0xf4>
		  PORTC &= ~(1<<PC7);
     280:	af 98       	cbi	0x15, 7	; 21
     282:	08 95       	ret
		else if(a == eS_PORTD0)
     284:	8e 31       	cpi	r24, 0x1E	; 30
     286:	91 05       	cpc	r25, r1
     288:	11 f4       	brne	.+4      	; 0x28e <pinChange+0xfe>
		  PORTD &= ~(1<<PD0);
     28a:	90 98       	cbi	0x12, 0	; 18
     28c:	08 95       	ret
		else if(a == eS_PORTD1)
     28e:	8f 31       	cpi	r24, 0x1F	; 31
     290:	91 05       	cpc	r25, r1
     292:	11 f4       	brne	.+4      	; 0x298 <pinChange+0x108>
		  PORTD &= ~(1<<PD1);  
     294:	91 98       	cbi	0x12, 1	; 18
     296:	08 95       	ret
		else if(a == eS_PORTD2)
     298:	80 32       	cpi	r24, 0x20	; 32
     29a:	91 05       	cpc	r25, r1
     29c:	11 f4       	brne	.+4      	; 0x2a2 <pinChange+0x112>
		  PORTD &= ~(1<<PD2);
     29e:	92 98       	cbi	0x12, 2	; 18
     2a0:	08 95       	ret
		else if(a == eS_PORTD3)
     2a2:	81 32       	cpi	r24, 0x21	; 33
     2a4:	91 05       	cpc	r25, r1
     2a6:	11 f4       	brne	.+4      	; 0x2ac <pinChange+0x11c>
		  PORTD &= ~(1<<PD3);
     2a8:	93 98       	cbi	0x12, 3	; 18
     2aa:	08 95       	ret
		else if(a == eS_PORTD4)
     2ac:	82 32       	cpi	r24, 0x22	; 34
     2ae:	91 05       	cpc	r25, r1
     2b0:	11 f4       	brne	.+4      	; 0x2b6 <pinChange+0x126>
		  PORTD &= ~(1<<PD4);
     2b2:	94 98       	cbi	0x12, 4	; 18
     2b4:	08 95       	ret
		else if(a == eS_PORTD5)
     2b6:	83 32       	cpi	r24, 0x23	; 35
     2b8:	91 05       	cpc	r25, r1
     2ba:	11 f4       	brne	.+4      	; 0x2c0 <pinChange+0x130>
		  PORTD &= ~(1<<PD5);
     2bc:	95 98       	cbi	0x12, 5	; 18
     2be:	08 95       	ret
		else if(a == eS_PORTD6)
     2c0:	84 32       	cpi	r24, 0x24	; 36
     2c2:	91 05       	cpc	r25, r1
     2c4:	11 f4       	brne	.+4      	; 0x2ca <pinChange+0x13a>
		  PORTD &= ~(1<<PD6);   
     2c6:	96 98       	cbi	0x12, 6	; 18
     2c8:	08 95       	ret
		else if(a == eS_PORTD7)
     2ca:	85 97       	sbiw	r24, 0x25	; 37
     2cc:	09 f0       	breq	.+2      	; 0x2d0 <pinChange+0x140>
     2ce:	9f c0       	rjmp	.+318    	; 0x40e <pinChange+0x27e>
		  PORTD &= ~(1<<PD7);           
     2d0:	97 98       	cbi	0x12, 7	; 18
     2d2:	08 95       	ret
	}
	else
	{
		if(a == eS_PORTA0)
     2d4:	00 97       	sbiw	r24, 0x00	; 0
     2d6:	11 f4       	brne	.+4      	; 0x2dc <pinChange+0x14c>
		  PORTA |= (1<<PA0);
     2d8:	d8 9a       	sbi	0x1b, 0	; 27
     2da:	08 95       	ret
		else if(a == eS_PORTA1)
     2dc:	81 30       	cpi	r24, 0x01	; 1
     2de:	91 05       	cpc	r25, r1
     2e0:	11 f4       	brne	.+4      	; 0x2e6 <pinChange+0x156>
		  PORTA |= (1<<PA1);
     2e2:	d9 9a       	sbi	0x1b, 1	; 27
     2e4:	08 95       	ret
		else if(a == eS_PORTA2)
     2e6:	82 30       	cpi	r24, 0x02	; 2
     2e8:	91 05       	cpc	r25, r1
     2ea:	11 f4       	brne	.+4      	; 0x2f0 <pinChange+0x160>
		  PORTA |= (1<<PA2);
     2ec:	da 9a       	sbi	0x1b, 2	; 27
     2ee:	08 95       	ret
		else if(a == eS_PORTA3)
     2f0:	83 30       	cpi	r24, 0x03	; 3
     2f2:	91 05       	cpc	r25, r1
     2f4:	11 f4       	brne	.+4      	; 0x2fa <pinChange+0x16a>
		  PORTA |= (1<<PA3);
     2f6:	db 9a       	sbi	0x1b, 3	; 27
     2f8:	08 95       	ret
		else if(a == eS_PORTA4)
     2fa:	84 30       	cpi	r24, 0x04	; 4
     2fc:	91 05       	cpc	r25, r1
     2fe:	11 f4       	brne	.+4      	; 0x304 <pinChange+0x174>
		  PORTA |= (1<<PA4);
     300:	dc 9a       	sbi	0x1b, 4	; 27
     302:	08 95       	ret
		else if(a == eS_PORTA5)
     304:	85 30       	cpi	r24, 0x05	; 5
     306:	91 05       	cpc	r25, r1
     308:	11 f4       	brne	.+4      	; 0x30e <pinChange+0x17e>
		  PORTA |= (1<<PA5);
     30a:	dd 9a       	sbi	0x1b, 5	; 27
     30c:	08 95       	ret
		else if(a == eS_PORTA6)
     30e:	86 30       	cpi	r24, 0x06	; 6
     310:	91 05       	cpc	r25, r1
     312:	11 f4       	brne	.+4      	; 0x318 <pinChange+0x188>
		  PORTA |= (1<<PA6);
     314:	de 9a       	sbi	0x1b, 6	; 27
     316:	08 95       	ret
		else if(a == eS_PORTA7)
     318:	87 30       	cpi	r24, 0x07	; 7
     31a:	91 05       	cpc	r25, r1
     31c:	11 f4       	brne	.+4      	; 0x322 <pinChange+0x192>
		  PORTA |= (1<<PA7);
     31e:	df 9a       	sbi	0x1b, 7	; 27
     320:	08 95       	ret
		else if(a == eS_PORTB0)
     322:	8a 30       	cpi	r24, 0x0A	; 10
     324:	91 05       	cpc	r25, r1
     326:	11 f4       	brne	.+4      	; 0x32c <pinChange+0x19c>
	  	  PORTB |= (1<<PB0);
     328:	c0 9a       	sbi	0x18, 0	; 24
     32a:	08 95       	ret
		else if(a == eS_PORTB1)
     32c:	8b 30       	cpi	r24, 0x0B	; 11
     32e:	91 05       	cpc	r25, r1
     330:	11 f4       	brne	.+4      	; 0x336 <pinChange+0x1a6>
		  PORTB |= (1<<PB1);
     332:	c1 9a       	sbi	0x18, 1	; 24
     334:	08 95       	ret
		else if(a == eS_PORTB2)
     336:	8c 30       	cpi	r24, 0x0C	; 12
     338:	91 05       	cpc	r25, r1
     33a:	11 f4       	brne	.+4      	; 0x340 <pinChange+0x1b0>
		  PORTB |= (1<<PB2);
     33c:	c2 9a       	sbi	0x18, 2	; 24
     33e:	08 95       	ret
		else if(a == eS_PORTB3)
     340:	8d 30       	cpi	r24, 0x0D	; 13
     342:	91 05       	cpc	r25, r1
     344:	11 f4       	brne	.+4      	; 0x34a <pinChange+0x1ba>
		  PORTB |= (1<<PB3);
     346:	c3 9a       	sbi	0x18, 3	; 24
     348:	08 95       	ret
		else if(a == eS_PORTB4)
     34a:	8e 30       	cpi	r24, 0x0E	; 14
     34c:	91 05       	cpc	r25, r1
     34e:	11 f4       	brne	.+4      	; 0x354 <pinChange+0x1c4>
		  PORTB |= (1<<PB4);
     350:	c4 9a       	sbi	0x18, 4	; 24
     352:	08 95       	ret
		else if(a == eS_PORTB5)
     354:	8f 30       	cpi	r24, 0x0F	; 15
     356:	91 05       	cpc	r25, r1
     358:	11 f4       	brne	.+4      	; 0x35e <pinChange+0x1ce>
		  PORTB |= (1<<PB5);
     35a:	c5 9a       	sbi	0x18, 5	; 24
     35c:	08 95       	ret
		else if(a == eS_PORTB6)
     35e:	80 31       	cpi	r24, 0x10	; 16
     360:	91 05       	cpc	r25, r1
     362:	11 f4       	brne	.+4      	; 0x368 <pinChange+0x1d8>
		  PORTB |= (1<<PB6);
     364:	c6 9a       	sbi	0x18, 6	; 24
     366:	08 95       	ret
		else if(a == eS_PORTB7)
     368:	81 31       	cpi	r24, 0x11	; 17
     36a:	91 05       	cpc	r25, r1
     36c:	11 f4       	brne	.+4      	; 0x372 <pinChange+0x1e2>
		  PORTB |= (1<<PB7);
     36e:	c7 9a       	sbi	0x18, 7	; 24
     370:	08 95       	ret
		else if(a == eS_PORTC0)
     372:	84 31       	cpi	r24, 0x14	; 20
     374:	91 05       	cpc	r25, r1
     376:	11 f4       	brne	.+4      	; 0x37c <pinChange+0x1ec>
		  PORTC |= (1<<PC0);
     378:	a8 9a       	sbi	0x15, 0	; 21
     37a:	08 95       	ret
		else if(a == eS_PORTC1)
     37c:	85 31       	cpi	r24, 0x15	; 21
     37e:	91 05       	cpc	r25, r1
     380:	11 f4       	brne	.+4      	; 0x386 <pinChange+0x1f6>
		  PORTC |= (1<<PC1);
     382:	a9 9a       	sbi	0x15, 1	; 21
     384:	08 95       	ret
		else if(a == eS_PORTC2)
     386:	86 31       	cpi	r24, 0x16	; 22
     388:	91 05       	cpc	r25, r1
     38a:	11 f4       	brne	.+4      	; 0x390 <pinChange+0x200>
	  	  PORTC |= (1<<PC2);
     38c:	aa 9a       	sbi	0x15, 2	; 21
     38e:	08 95       	ret
		else if(a == eS_PORTC3)
     390:	87 31       	cpi	r24, 0x17	; 23
     392:	91 05       	cpc	r25, r1
     394:	11 f4       	brne	.+4      	; 0x39a <pinChange+0x20a>
		  PORTC |= (1<<PC3);
     396:	ab 9a       	sbi	0x15, 3	; 21
     398:	08 95       	ret
		else if(a == eS_PORTC4)
     39a:	88 31       	cpi	r24, 0x18	; 24
     39c:	91 05       	cpc	r25, r1
     39e:	11 f4       	brne	.+4      	; 0x3a4 <pinChange+0x214>
		  PORTC |= (1<<PC4);
     3a0:	ac 9a       	sbi	0x15, 4	; 21
     3a2:	08 95       	ret
		else if(a == eS_PORTC5)
     3a4:	89 31       	cpi	r24, 0x19	; 25
     3a6:	91 05       	cpc	r25, r1
     3a8:	11 f4       	brne	.+4      	; 0x3ae <pinChange+0x21e>
		  PORTC |= (1<<PC5);
     3aa:	ad 9a       	sbi	0x15, 5	; 21
     3ac:	08 95       	ret
		else if(a == eS_PORTC6)
     3ae:	8a 31       	cpi	r24, 0x1A	; 26
     3b0:	91 05       	cpc	r25, r1
     3b2:	11 f4       	brne	.+4      	; 0x3b8 <pinChange+0x228>
		  PORTC |= (1<<PC6);  
     3b4:	ae 9a       	sbi	0x15, 6	; 21
     3b6:	08 95       	ret
		else if(a == eS_PORTC7)
     3b8:	8b 31       	cpi	r24, 0x1B	; 27
     3ba:	91 05       	cpc	r25, r1
     3bc:	11 f4       	brne	.+4      	; 0x3c2 <pinChange+0x232>
		  PORTC |= (1<<PC7);
     3be:	af 9a       	sbi	0x15, 7	; 21
     3c0:	08 95       	ret
		else if(a == eS_PORTD0)
     3c2:	8e 31       	cpi	r24, 0x1E	; 30
     3c4:	91 05       	cpc	r25, r1
     3c6:	11 f4       	brne	.+4      	; 0x3cc <pinChange+0x23c>
		  PORTD |= (1<<PD0);
     3c8:	90 9a       	sbi	0x12, 0	; 18
     3ca:	08 95       	ret
		else if(a == eS_PORTD1)
     3cc:	8f 31       	cpi	r24, 0x1F	; 31
     3ce:	91 05       	cpc	r25, r1
     3d0:	11 f4       	brne	.+4      	; 0x3d6 <pinChange+0x246>
		  PORTD |= (1<<PD1);
     3d2:	91 9a       	sbi	0x12, 1	; 18
     3d4:	08 95       	ret
		else if(a == eS_PORTD2)
     3d6:	80 32       	cpi	r24, 0x20	; 32
     3d8:	91 05       	cpc	r25, r1
     3da:	11 f4       	brne	.+4      	; 0x3e0 <pinChange+0x250>
		  PORTD |= (1<<PD2);
     3dc:	92 9a       	sbi	0x12, 2	; 18
     3de:	08 95       	ret
		else if(a == eS_PORTD3)
     3e0:	81 32       	cpi	r24, 0x21	; 33
     3e2:	91 05       	cpc	r25, r1
     3e4:	11 f4       	brne	.+4      	; 0x3ea <pinChange+0x25a>
		  PORTD |= (1<<PD3);
     3e6:	93 9a       	sbi	0x12, 3	; 18
     3e8:	08 95       	ret
		else if(a == eS_PORTD4)
     3ea:	82 32       	cpi	r24, 0x22	; 34
     3ec:	91 05       	cpc	r25, r1
     3ee:	11 f4       	brne	.+4      	; 0x3f4 <pinChange+0x264>
		  PORTD |= (1<<PD4);
     3f0:	94 9a       	sbi	0x12, 4	; 18
     3f2:	08 95       	ret
		else if(a == eS_PORTD5)
     3f4:	83 32       	cpi	r24, 0x23	; 35
     3f6:	91 05       	cpc	r25, r1
     3f8:	11 f4       	brne	.+4      	; 0x3fe <pinChange+0x26e>
		  PORTD |= (1<<PD5);
     3fa:	95 9a       	sbi	0x12, 5	; 18
     3fc:	08 95       	ret
		else if(a == eS_PORTD6)
     3fe:	84 32       	cpi	r24, 0x24	; 36
     400:	91 05       	cpc	r25, r1
     402:	11 f4       	brne	.+4      	; 0x408 <pinChange+0x278>
		  PORTD |= (1<<PD6);
     404:	96 9a       	sbi	0x12, 6	; 18
     406:	08 95       	ret
		else if(a == eS_PORTD7)
     408:	85 97       	sbiw	r24, 0x25	; 37
     40a:	09 f4       	brne	.+2      	; 0x40e <pinChange+0x27e>
		  PORTD |= (1<<PD7);
     40c:	97 9a       	sbi	0x12, 7	; 18
     40e:	08 95       	ret

00000410 <Lcd4_Port>:
//End LCD 8 Bit Interfacing Functions

//LCD 4 Bit Interfacing Functions

void Lcd4_Port(char a)
{
     410:	cf 93       	push	r28
     412:	c8 2f       	mov	r28, r24
	if(a & 1)
     414:	80 ff       	sbrs	r24, 0
     416:	07 c0       	rjmp	.+14     	; 0x426 <Lcd4_Port+0x16>
	pinChange(D4,1);
     418:	61 e0       	ldi	r22, 0x01	; 1
     41a:	70 e0       	ldi	r23, 0x00	; 0
     41c:	82 e2       	ldi	r24, 0x22	; 34
     41e:	90 e0       	ldi	r25, 0x00	; 0
     420:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     424:	06 c0       	rjmp	.+12     	; 0x432 <Lcd4_Port+0x22>
	else
	pinChange(D4,0);
     426:	60 e0       	ldi	r22, 0x00	; 0
     428:	70 e0       	ldi	r23, 0x00	; 0
     42a:	82 e2       	ldi	r24, 0x22	; 34
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
	
	if(a & 2)
     432:	c1 ff       	sbrs	r28, 1
     434:	07 c0       	rjmp	.+14     	; 0x444 <Lcd4_Port+0x34>
	pinChange(D5,1);
     436:	61 e0       	ldi	r22, 0x01	; 1
     438:	70 e0       	ldi	r23, 0x00	; 0
     43a:	83 e2       	ldi	r24, 0x23	; 35
     43c:	90 e0       	ldi	r25, 0x00	; 0
     43e:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     442:	06 c0       	rjmp	.+12     	; 0x450 <Lcd4_Port+0x40>
	else
	pinChange(D5,0);
     444:	60 e0       	ldi	r22, 0x00	; 0
     446:	70 e0       	ldi	r23, 0x00	; 0
     448:	83 e2       	ldi	r24, 0x23	; 35
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
	
	if(a & 4)
     450:	c2 ff       	sbrs	r28, 2
     452:	07 c0       	rjmp	.+14     	; 0x462 <Lcd4_Port+0x52>
	pinChange(D6,1);
     454:	61 e0       	ldi	r22, 0x01	; 1
     456:	70 e0       	ldi	r23, 0x00	; 0
     458:	84 e2       	ldi	r24, 0x24	; 36
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     460:	06 c0       	rjmp	.+12     	; 0x46e <Lcd4_Port+0x5e>
	else
	pinChange(D6,0);
     462:	60 e0       	ldi	r22, 0x00	; 0
     464:	70 e0       	ldi	r23, 0x00	; 0
     466:	84 e2       	ldi	r24, 0x24	; 36
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
	
	if(a & 8)
     46e:	c3 ff       	sbrs	r28, 3
     470:	07 c0       	rjmp	.+14     	; 0x480 <Lcd4_Port+0x70>
	pinChange(D7,1);
     472:	61 e0       	ldi	r22, 0x01	; 1
     474:	70 e0       	ldi	r23, 0x00	; 0
     476:	85 e2       	ldi	r24, 0x25	; 37
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     47e:	06 c0       	rjmp	.+12     	; 0x48c <Lcd4_Port+0x7c>
	else
	pinChange(D7,0);
     480:	60 e0       	ldi	r22, 0x00	; 0
     482:	70 e0       	ldi	r23, 0x00	; 0
     484:	85 e2       	ldi	r24, 0x25	; 37
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
}
     48c:	cf 91       	pop	r28
     48e:	08 95       	ret

00000490 <Lcd4_Cmd>:
void Lcd4_Cmd(char a)
{
     490:	cf 93       	push	r28
     492:	c8 2f       	mov	r28, r24
	pinChange(RS,0);             // => RS = 0
     494:	60 e0       	ldi	r22, 0x00	; 0
     496:	70 e0       	ldi	r23, 0x00	; 0
     498:	80 e2       	ldi	r24, 0x20	; 32
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
	Lcd4_Port(a);
     4a0:	8c 2f       	mov	r24, r28
     4a2:	0e 94 08 02 	call	0x410	; 0x410 <Lcd4_Port>
	pinChange(EN,1);            // => E = 1
     4a6:	61 e0       	ldi	r22, 0x01	; 1
     4a8:	70 e0       	ldi	r23, 0x00	; 0
     4aa:	81 e2       	ldi	r24, 0x21	; 33
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4b2:	89 ef       	ldi	r24, 0xF9	; 249
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	01 97       	sbiw	r24, 0x01	; 1
     4b8:	f1 f7       	brne	.-4      	; 0x4b6 <Lcd4_Cmd+0x26>
     4ba:	00 c0       	rjmp	.+0      	; 0x4bc <Lcd4_Cmd+0x2c>
     4bc:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);             // => E = 0
     4be:	60 e0       	ldi	r22, 0x00	; 0
     4c0:	70 e0       	ldi	r23, 0x00	; 0
     4c2:	81 e2       	ldi	r24, 0x21	; 33
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     4ca:	89 ef       	ldi	r24, 0xF9	; 249
     4cc:	90 e0       	ldi	r25, 0x00	; 0
     4ce:	01 97       	sbiw	r24, 0x01	; 1
     4d0:	f1 f7       	brne	.-4      	; 0x4ce <Lcd4_Cmd+0x3e>
     4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <Lcd4_Cmd+0x44>
     4d4:	00 00       	nop
	_delay_ms(1);
}
     4d6:	cf 91       	pop	r28
     4d8:	08 95       	ret

000004da <Lcd4_Clear>:

void Lcd4_Clear()
{
	Lcd4_Cmd(0);
     4da:	80 e0       	ldi	r24, 0x00	; 0
     4dc:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	Lcd4_Cmd(1);
     4e0:	81 e0       	ldi	r24, 0x01	; 1
     4e2:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
     4e6:	08 95       	ret

000004e8 <Lcd4_Set_Cursor>:
}

void Lcd4_Set_Cursor(char a, char b)
{
     4e8:	cf 93       	push	r28
     4ea:	c6 2f       	mov	r28, r22
	char temp,z,y;
	if(a == 1)
     4ec:	81 30       	cpi	r24, 0x01	; 1
     4ee:	59 f4       	brne	.+22     	; 0x506 <Lcd4_Set_Cursor+0x1e>
	{
		temp = 0x80 + b;
     4f0:	80 e8       	ldi	r24, 0x80	; 128
     4f2:	86 0f       	add	r24, r22
		z = temp>>4;
		y = (0x80+b) & 0x0F;
		Lcd4_Cmd(z);
     4f4:	82 95       	swap	r24
     4f6:	8f 70       	andi	r24, 0x0F	; 15
     4f8:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
		Lcd4_Cmd(y);
     4fc:	8c 2f       	mov	r24, r28
     4fe:	8f 70       	andi	r24, 0x0F	; 15
     500:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
     504:	0c c0       	rjmp	.+24     	; 0x51e <Lcd4_Set_Cursor+0x36>
	}
	else if(a == 2)
     506:	82 30       	cpi	r24, 0x02	; 2
     508:	51 f4       	brne	.+20     	; 0x51e <Lcd4_Set_Cursor+0x36>
	{
		temp = 0xC0 + b;
     50a:	80 ec       	ldi	r24, 0xC0	; 192
     50c:	86 0f       	add	r24, r22
		z = temp>>4;
		y = (0xC0+b) & 0x0F;
		Lcd4_Cmd(z);
     50e:	82 95       	swap	r24
     510:	8f 70       	andi	r24, 0x0F	; 15
     512:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
		Lcd4_Cmd(y);
     516:	8c 2f       	mov	r24, r28
     518:	8f 70       	andi	r24, 0x0F	; 15
     51a:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	}
}
     51e:	cf 91       	pop	r28
     520:	08 95       	ret

00000522 <Lcd4_Init>:

void Lcd4_Init()
{
	Lcd4_Port(0x00);
     522:	80 e0       	ldi	r24, 0x00	; 0
     524:	0e 94 08 02 	call	0x410	; 0x410 <Lcd4_Port>
     528:	87 e8       	ldi	r24, 0x87	; 135
     52a:	93 e1       	ldi	r25, 0x13	; 19
     52c:	01 97       	sbiw	r24, 0x01	; 1
     52e:	f1 f7       	brne	.-4      	; 0x52c <Lcd4_Init+0xa>
     530:	00 c0       	rjmp	.+0      	; 0x532 <Lcd4_Init+0x10>
     532:	00 00       	nop
	_delay_ms(20);
	///////////// Reset process from datasheet /////////
	Lcd4_Cmd(0x03);
     534:	83 e0       	ldi	r24, 0x03	; 3
     536:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
     53a:	81 ee       	ldi	r24, 0xE1	; 225
     53c:	94 e0       	ldi	r25, 0x04	; 4
     53e:	01 97       	sbiw	r24, 0x01	; 1
     540:	f1 f7       	brne	.-4      	; 0x53e <Lcd4_Init+0x1c>
     542:	00 c0       	rjmp	.+0      	; 0x544 <Lcd4_Init+0x22>
     544:	00 00       	nop
	_delay_ms(5);
	Lcd4_Cmd(0x03);
     546:	83 e0       	ldi	r24, 0x03	; 3
     548:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
     54c:	8d eb       	ldi	r24, 0xBD	; 189
     54e:	9a e0       	ldi	r25, 0x0A	; 10
     550:	01 97       	sbiw	r24, 0x01	; 1
     552:	f1 f7       	brne	.-4      	; 0x550 <Lcd4_Init+0x2e>
     554:	00 c0       	rjmp	.+0      	; 0x556 <Lcd4_Init+0x34>
     556:	00 00       	nop
	_delay_ms(11);
	Lcd4_Cmd(0x03);
     558:	83 e0       	ldi	r24, 0x03	; 3
     55a:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	/////////////////////////////////////////////////////
	Lcd4_Cmd(0x02);
     55e:	82 e0       	ldi	r24, 0x02	; 2
     560:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	Lcd4_Cmd(0x02);
     564:	82 e0       	ldi	r24, 0x02	; 2
     566:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	Lcd4_Cmd(0x08);
     56a:	88 e0       	ldi	r24, 0x08	; 8
     56c:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	Lcd4_Cmd(0x00);
     570:	80 e0       	ldi	r24, 0x00	; 0
     572:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	Lcd4_Cmd(0x0C);
     576:	8c e0       	ldi	r24, 0x0C	; 12
     578:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	Lcd4_Cmd(0x00);
     57c:	80 e0       	ldi	r24, 0x00	; 0
     57e:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	Lcd4_Cmd(0x06);
     582:	86 e0       	ldi	r24, 0x06	; 6
     584:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
     588:	08 95       	ret

0000058a <Lcd4_Write_Char>:
}

void Lcd4_Write_Char(char a)
{
     58a:	cf 93       	push	r28
     58c:	c8 2f       	mov	r28, r24
	char temp,y;
	temp = a&0x0F;
	y = a&0xF0;
	pinChange(RS,1);             // => RS = 1
     58e:	61 e0       	ldi	r22, 0x01	; 1
     590:	70 e0       	ldi	r23, 0x00	; 0
     592:	80 e2       	ldi	r24, 0x20	; 32
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
	Lcd4_Port(y>>4);             //Data transfer
     59a:	8c 2f       	mov	r24, r28
     59c:	82 95       	swap	r24
     59e:	8f 70       	andi	r24, 0x0F	; 15
     5a0:	0e 94 08 02 	call	0x410	; 0x410 <Lcd4_Port>
	pinChange(EN,1);
     5a4:	61 e0       	ldi	r22, 0x01	; 1
     5a6:	70 e0       	ldi	r23, 0x00	; 0
     5a8:	81 e2       	ldi	r24, 0x21	; 33
     5aa:	90 e0       	ldi	r25, 0x00	; 0
     5ac:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     5b0:	89 ef       	ldi	r24, 0xF9	; 249
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	01 97       	sbiw	r24, 0x01	; 1
     5b6:	f1 f7       	brne	.-4      	; 0x5b4 <Lcd4_Write_Char+0x2a>
     5b8:	00 c0       	rjmp	.+0      	; 0x5ba <Lcd4_Write_Char+0x30>
     5ba:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);
     5bc:	60 e0       	ldi	r22, 0x00	; 0
     5be:	70 e0       	ldi	r23, 0x00	; 0
     5c0:	81 e2       	ldi	r24, 0x21	; 33
     5c2:	90 e0       	ldi	r25, 0x00	; 0
     5c4:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     5c8:	89 ef       	ldi	r24, 0xF9	; 249
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	01 97       	sbiw	r24, 0x01	; 1
     5ce:	f1 f7       	brne	.-4      	; 0x5cc <Lcd4_Write_Char+0x42>
     5d0:	00 c0       	rjmp	.+0      	; 0x5d2 <Lcd4_Write_Char+0x48>
     5d2:	00 00       	nop
	_delay_ms(1);
	Lcd4_Port(temp);
     5d4:	8c 2f       	mov	r24, r28
     5d6:	8f 70       	andi	r24, 0x0F	; 15
     5d8:	0e 94 08 02 	call	0x410	; 0x410 <Lcd4_Port>
	pinChange(EN,1);
     5dc:	61 e0       	ldi	r22, 0x01	; 1
     5de:	70 e0       	ldi	r23, 0x00	; 0
     5e0:	81 e2       	ldi	r24, 0x21	; 33
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     5e8:	89 ef       	ldi	r24, 0xF9	; 249
     5ea:	90 e0       	ldi	r25, 0x00	; 0
     5ec:	01 97       	sbiw	r24, 0x01	; 1
     5ee:	f1 f7       	brne	.-4      	; 0x5ec <Lcd4_Write_Char+0x62>
     5f0:	00 c0       	rjmp	.+0      	; 0x5f2 <Lcd4_Write_Char+0x68>
     5f2:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);
     5f4:	60 e0       	ldi	r22, 0x00	; 0
     5f6:	70 e0       	ldi	r23, 0x00	; 0
     5f8:	81 e2       	ldi	r24, 0x21	; 33
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     600:	89 ef       	ldi	r24, 0xF9	; 249
     602:	90 e0       	ldi	r25, 0x00	; 0
     604:	01 97       	sbiw	r24, 0x01	; 1
     606:	f1 f7       	brne	.-4      	; 0x604 <Lcd4_Write_Char+0x7a>
     608:	00 c0       	rjmp	.+0      	; 0x60a <Lcd4_Write_Char+0x80>
     60a:	00 00       	nop
	_delay_ms(1);
}
     60c:	cf 91       	pop	r28
     60e:	08 95       	ret

00000610 <Lcd4_Write_String>:

void Lcd4_Write_String(char *a)
{
     610:	cf 93       	push	r28
     612:	df 93       	push	r29
     614:	ec 01       	movw	r28, r24
	int i;
	for(i=0;a[i]!='\0';i++)
     616:	88 81       	ld	r24, Y
     618:	88 23       	and	r24, r24
     61a:	31 f0       	breq	.+12     	; 0x628 <Lcd4_Write_String+0x18>
     61c:	21 96       	adiw	r28, 0x01	; 1
	Lcd4_Write_Char(a[i]);
     61e:	0e 94 c5 02 	call	0x58a	; 0x58a <Lcd4_Write_Char>
}

void Lcd4_Write_String(char *a)
{
	int i;
	for(i=0;a[i]!='\0';i++)
     622:	89 91       	ld	r24, Y+
     624:	81 11       	cpse	r24, r1
     626:	fb cf       	rjmp	.-10     	; 0x61e <Lcd4_Write_String+0xe>
	Lcd4_Write_Char(a[i]);
}
     628:	df 91       	pop	r29
     62a:	cf 91       	pop	r28
     62c:	08 95       	ret

0000062e <GSM_Send>:
	TC = C;
	TD = D;
	return ;
}
void GSM_Send (char Number[],char Messsge[])
{
     62e:	ff 92       	push	r15
     630:	0f 93       	push	r16
     632:	1f 93       	push	r17
     634:	cf 93       	push	r28
     636:	df 93       	push	r29
     638:	08 2f       	mov	r16, r24
     63a:	f9 2e       	mov	r15, r25
     63c:	d6 2f       	mov	r29, r22
     63e:	17 2f       	mov	r17, r23
	//---------------------GSM Send A Message ---------------------------------------------
	
	sprintf(msg1,"ATE0%c",Enter);
     640:	1f 92       	push	r1
     642:	cd e0       	ldi	r28, 0x0D	; 13
     644:	cf 93       	push	r28
     646:	24 e6       	ldi	r18, 0x64	; 100
     648:	30 e0       	ldi	r19, 0x00	; 0
     64a:	3f 93       	push	r19
     64c:	2f 93       	push	r18
     64e:	21 ed       	ldi	r18, 0xD1	; 209
     650:	34 e0       	ldi	r19, 0x04	; 4
     652:	3f 93       	push	r19
     654:	2f 93       	push	r18
     656:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	sprintf(msg2,"AT+CMGF=1%c",Enter);
     65a:	1f 92       	push	r1
     65c:	cf 93       	push	r28
     65e:	2b e6       	ldi	r18, 0x6B	; 107
     660:	30 e0       	ldi	r19, 0x00	; 0
     662:	3f 93       	push	r19
     664:	2f 93       	push	r18
     666:	2f e7       	ldi	r18, 0x7F	; 127
     668:	35 e0       	ldi	r19, 0x05	; 5
     66a:	3f 93       	push	r19
     66c:	2f 93       	push	r18
     66e:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	sprintf(msg3,"AT+CMGS=%c%s%c%c",DoubleQuote,Number,DoubleQuote,Enter);
     672:	1f 92       	push	r1
     674:	cf 93       	push	r28
     676:	1f 92       	push	r1
     678:	22 e2       	ldi	r18, 0x22	; 34
     67a:	2f 93       	push	r18
     67c:	ff 92       	push	r15
     67e:	0f 93       	push	r16
     680:	1f 92       	push	r1
     682:	2f 93       	push	r18
     684:	87 e7       	ldi	r24, 0x77	; 119
     686:	90 e0       	ldi	r25, 0x00	; 0
     688:	9f 93       	push	r25
     68a:	8f 93       	push	r24
     68c:	82 ed       	ldi	r24, 0xD2	; 210
     68e:	93 e0       	ldi	r25, 0x03	; 3
     690:	9f 93       	push	r25
     692:	8f 93       	push	r24
     694:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	sprintf(msg4,"%s%c",Messsge,CTRLZ);
     698:	1f 92       	push	r1
     69a:	8a e1       	ldi	r24, 0x1A	; 26
     69c:	8f 93       	push	r24
     69e:	1f 93       	push	r17
     6a0:	df 93       	push	r29
     6a2:	88 e8       	ldi	r24, 0x88	; 136
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	9f 93       	push	r25
     6a8:	8f 93       	push	r24
     6aa:	89 e0       	ldi	r24, 0x09	; 9
     6ac:	97 e0       	ldi	r25, 0x07	; 7
     6ae:	9f 93       	push	r25
     6b0:	8f 93       	push	r24
     6b2:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	
	Tx_puts(msg1);
     6b6:	8d b7       	in	r24, 0x3d	; 61
     6b8:	9e b7       	in	r25, 0x3e	; 62
     6ba:	80 96       	adiw	r24, 0x20	; 32
     6bc:	0f b6       	in	r0, 0x3f	; 63
     6be:	f8 94       	cli
     6c0:	9e bf       	out	0x3e, r25	; 62
     6c2:	0f be       	out	0x3f, r0	; 63
     6c4:	8d bf       	out	0x3d, r24	; 61
     6c6:	81 ed       	ldi	r24, 0xD1	; 209
     6c8:	94 e0       	ldi	r25, 0x04	; 4
     6ca:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     6ce:	9f e9       	ldi	r25, 0x9F	; 159
     6d0:	26 e8       	ldi	r18, 0x86	; 134
     6d2:	81 e0       	ldi	r24, 0x01	; 1
     6d4:	91 50       	subi	r25, 0x01	; 1
     6d6:	20 40       	sbci	r18, 0x00	; 0
     6d8:	80 40       	sbci	r24, 0x00	; 0
     6da:	e1 f7       	brne	.-8      	; 0x6d4 <GSM_Send+0xa6>
     6dc:	00 c0       	rjmp	.+0      	; 0x6de <GSM_Send+0xb0>
     6de:	00 00       	nop
	_delay_ms(500);
	Tx_puts(msg2);
     6e0:	8f e7       	ldi	r24, 0x7F	; 127
     6e2:	95 e0       	ldi	r25, 0x05	; 5
     6e4:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     6e8:	9f e9       	ldi	r25, 0x9F	; 159
     6ea:	26 e8       	ldi	r18, 0x86	; 134
     6ec:	81 e0       	ldi	r24, 0x01	; 1
     6ee:	91 50       	subi	r25, 0x01	; 1
     6f0:	20 40       	sbci	r18, 0x00	; 0
     6f2:	80 40       	sbci	r24, 0x00	; 0
     6f4:	e1 f7       	brne	.-8      	; 0x6ee <GSM_Send+0xc0>
     6f6:	00 c0       	rjmp	.+0      	; 0x6f8 <GSM_Send+0xca>
     6f8:	00 00       	nop
	_delay_ms(500);
	Tx_puts(msg3);
     6fa:	82 ed       	ldi	r24, 0xD2	; 210
     6fc:	93 e0       	ldi	r25, 0x03	; 3
     6fe:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     702:	9f e9       	ldi	r25, 0x9F	; 159
     704:	26 e8       	ldi	r18, 0x86	; 134
     706:	81 e0       	ldi	r24, 0x01	; 1
     708:	91 50       	subi	r25, 0x01	; 1
     70a:	20 40       	sbci	r18, 0x00	; 0
     70c:	80 40       	sbci	r24, 0x00	; 0
     70e:	e1 f7       	brne	.-8      	; 0x708 <GSM_Send+0xda>
     710:	00 c0       	rjmp	.+0      	; 0x712 <GSM_Send+0xe4>
     712:	00 00       	nop
	_delay_ms(500);
	Tx_puts(msg4);
     714:	89 e0       	ldi	r24, 0x09	; 9
     716:	97 e0       	ldi	r25, 0x07	; 7
     718:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
	Tx_putc(Enter);
     71c:	8d e0       	ldi	r24, 0x0D	; 13
     71e:	0e 94 88 00 	call	0x110	; 0x110 <Tx_putc>
     722:	9f e7       	ldi	r25, 0x7F	; 127
     724:	2a e1       	ldi	r18, 0x1A	; 26
     726:	86 e0       	ldi	r24, 0x06	; 6
     728:	91 50       	subi	r25, 0x01	; 1
     72a:	20 40       	sbci	r18, 0x00	; 0
     72c:	80 40       	sbci	r24, 0x00	; 0
     72e:	e1 f7       	brne	.-8      	; 0x728 <GSM_Send+0xfa>
     730:	00 c0       	rjmp	.+0      	; 0x732 <GSM_Send+0x104>
     732:	00 00       	nop
	_delay_ms(2000);

	Lcd4_Clear();
     734:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
     738:	60 e0       	ldi	r22, 0x00	; 0
     73a:	70 e0       	ldi	r23, 0x00	; 0
     73c:	81 e0       	ldi	r24, 0x01	; 1
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	Lcd4_Write_String("Message Sent");
     744:	8d e8       	ldi	r24, 0x8D	; 141
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
     74c:	9f e3       	ldi	r25, 0x3F	; 63
     74e:	2d e0       	ldi	r18, 0x0D	; 13
     750:	83 e0       	ldi	r24, 0x03	; 3
     752:	91 50       	subi	r25, 0x01	; 1
     754:	20 40       	sbci	r18, 0x00	; 0
     756:	80 40       	sbci	r24, 0x00	; 0
     758:	e1 f7       	brne	.-8      	; 0x752 <GSM_Send+0x124>
     75a:	00 c0       	rjmp	.+0      	; 0x75c <GSM_Send+0x12e>
     75c:	00 00       	nop
	_delay_ms(1000);
	Lcd4_Clear();
     75e:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	return;
	//----------------------------------------------------------------------------------------
}
     762:	df 91       	pop	r29
     764:	cf 91       	pop	r28
     766:	1f 91       	pop	r17
     768:	0f 91       	pop	r16
     76a:	ff 90       	pop	r15
     76c:	08 95       	ret

0000076e <showResult>:
	}
	
}

void showResult (char A, char B , char C, char D)
{
     76e:	0f 93       	push	r16
     770:	1f 93       	push	r17
     772:	cf 93       	push	r28
     774:	df 93       	push	r29
     776:	c8 2f       	mov	r28, r24
     778:	d6 2f       	mov	r29, r22
     77a:	14 2f       	mov	r17, r20
     77c:	02 2f       	mov	r16, r18
	if (A != TA || B != TB || C != TC || D != TD)
     77e:	80 91 63 00 	lds	r24, 0x0063
     782:	c8 13       	cpse	r28, r24
     784:	0c c0       	rjmp	.+24     	; 0x79e <showResult+0x30>
     786:	80 91 62 00 	lds	r24, 0x0062
     78a:	68 13       	cpse	r22, r24
     78c:	08 c0       	rjmp	.+16     	; 0x79e <showResult+0x30>
     78e:	80 91 61 00 	lds	r24, 0x0061
     792:	48 13       	cpse	r20, r24
     794:	04 c0       	rjmp	.+8      	; 0x79e <showResult+0x30>
     796:	80 91 60 00 	lds	r24, 0x0060
     79a:	28 17       	cp	r18, r24
     79c:	c9 f1       	breq	.+114    	; 0x810 <showResult+0xa2>
	{
		if (A == '1')
     79e:	c1 33       	cpi	r28, 0x31	; 49
     7a0:	11 f4       	brne	.+4      	; 0x7a6 <showResult+0x38>
		{
			WRITE_PORTB_BIT0(1);
     7a2:	c0 9a       	sbi	0x18, 0	; 24
     7a4:	03 c0       	rjmp	.+6      	; 0x7ac <showResult+0x3e>
		}
		if (A == '0')
     7a6:	c0 33       	cpi	r28, 0x30	; 48
     7a8:	09 f4       	brne	.+2      	; 0x7ac <showResult+0x3e>
		{
			WRITE_PORTB_BIT0(0);
     7aa:	c0 98       	cbi	0x18, 0	; 24
		}
		if (B == '1')
     7ac:	d1 33       	cpi	r29, 0x31	; 49
     7ae:	11 f4       	brne	.+4      	; 0x7b4 <showResult+0x46>
		{
			WRITE_PORTB_BIT1(1);
     7b0:	c1 9a       	sbi	0x18, 1	; 24
     7b2:	03 c0       	rjmp	.+6      	; 0x7ba <showResult+0x4c>
		}
		if (B == '0')
     7b4:	d0 33       	cpi	r29, 0x30	; 48
     7b6:	09 f4       	brne	.+2      	; 0x7ba <showResult+0x4c>
		{
			WRITE_PORTB_BIT1(0);
     7b8:	c1 98       	cbi	0x18, 1	; 24
		}
		if (C == '1')
     7ba:	11 33       	cpi	r17, 0x31	; 49
     7bc:	11 f4       	brne	.+4      	; 0x7c2 <showResult+0x54>
		{
			WRITE_PORTB_BIT2(1);
     7be:	c2 9a       	sbi	0x18, 2	; 24
     7c0:	03 c0       	rjmp	.+6      	; 0x7c8 <showResult+0x5a>
		}
		if (C == '0')
     7c2:	10 33       	cpi	r17, 0x30	; 48
     7c4:	09 f4       	brne	.+2      	; 0x7c8 <showResult+0x5a>
		{
			WRITE_PORTB_BIT2(0);
     7c6:	c2 98       	cbi	0x18, 2	; 24
		}
		if (D == '1')
     7c8:	01 33       	cpi	r16, 0x31	; 49
     7ca:	11 f4       	brne	.+4      	; 0x7d0 <showResult+0x62>
		{
			WRITE_PORTB_BIT3(1);
     7cc:	c3 9a       	sbi	0x18, 3	; 24
     7ce:	03 c0       	rjmp	.+6      	; 0x7d6 <showResult+0x68>
		}
		if (D == '0')
     7d0:	00 33       	cpi	r16, 0x30	; 48
     7d2:	09 f4       	brne	.+2      	; 0x7d6 <showResult+0x68>
		{
			WRITE_PORTB_BIT3(0);
     7d4:	c3 98       	cbi	0x18, 3	; 24
		}
		
		GSM_Send("09300093455","New Changes Are Made.");
     7d6:	6a e9       	ldi	r22, 0x9A	; 154
     7d8:	70 e0       	ldi	r23, 0x00	; 0
     7da:	80 eb       	ldi	r24, 0xB0	; 176
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	0e 94 17 03 	call	0x62e	; 0x62e <GSM_Send>
		Lcd4_Clear();
     7e2:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
		Lcd4_Set_Cursor(1,0);
     7e6:	60 e0       	ldi	r22, 0x00	; 0
     7e8:	70 e0       	ldi	r23, 0x00	; 0
     7ea:	81 e0       	ldi	r24, 0x01	; 1
     7ec:	90 e0       	ldi	r25, 0x00	; 0
     7ee:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
		Lcd4_Write_String("Changes Are Made");
     7f2:	8c eb       	ldi	r24, 0xBC	; 188
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
     7fa:	2f e3       	ldi	r18, 0x3F	; 63
     7fc:	8d e0       	ldi	r24, 0x0D	; 13
     7fe:	93 e0       	ldi	r25, 0x03	; 3
     800:	21 50       	subi	r18, 0x01	; 1
     802:	80 40       	sbci	r24, 0x00	; 0
     804:	90 40       	sbci	r25, 0x00	; 0
     806:	e1 f7       	brne	.-8      	; 0x800 <showResult+0x92>
     808:	00 c0       	rjmp	.+0      	; 0x80a <showResult+0x9c>
     80a:	00 00       	nop
		_delay_ms(1000);
		Lcd4_Clear();
     80c:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	}
	
	TA = A;
     810:	c0 93 63 00 	sts	0x0063, r28
	TB = B;
     814:	d0 93 62 00 	sts	0x0062, r29
	TC = C;
     818:	10 93 61 00 	sts	0x0061, r17
	TD = D;
     81c:	00 93 60 00 	sts	0x0060, r16
	return ;
}
     820:	df 91       	pop	r29
     822:	cf 91       	pop	r28
     824:	1f 91       	pop	r17
     826:	0f 91       	pop	r16
     828:	08 95       	ret

0000082a <GPRS_Connect>:
	return;
	//----------------------------------------------------------------------------------------
}

void GPRS_Connect()
{
     82a:	cf 93       	push	r28
     82c:	df 93       	push	r29
	
	//---------------------GPRS Initialization--------------------------------------------------------

	Lcd4_Clear();
     82e:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
     832:	60 e0       	ldi	r22, 0x00	; 0
     834:	70 e0       	ldi	r23, 0x00	; 0
     836:	81 e0       	ldi	r24, 0x01	; 1
     838:	90 e0       	ldi	r25, 0x00	; 0
     83a:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	Lcd4_Write_String("GPRS Connection");
     83e:	8d ec       	ldi	r24, 0xCD	; 205
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
	
	sprintf(Gprs1,"AT+SAPBR=3,1,%cContype%c,%cGPRS%c%c",DoubleQuote,DoubleQuote,DoubleQuote,DoubleQuote,Enter);
     846:	1f 92       	push	r1
     848:	dd e0       	ldi	r29, 0x0D	; 13
     84a:	df 93       	push	r29
     84c:	1f 92       	push	r1
     84e:	c2 e2       	ldi	r28, 0x22	; 34
     850:	cf 93       	push	r28
     852:	1f 92       	push	r1
     854:	cf 93       	push	r28
     856:	1f 92       	push	r1
     858:	cf 93       	push	r28
     85a:	1f 92       	push	r1
     85c:	cf 93       	push	r28
     85e:	8d ed       	ldi	r24, 0xDD	; 221
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	9f 93       	push	r25
     864:	8f 93       	push	r24
     866:	87 ef       	ldi	r24, 0xF7	; 247
     868:	95 e0       	ldi	r25, 0x05	; 5
     86a:	9f 93       	push	r25
     86c:	8f 93       	push	r24
     86e:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	sprintf(Gprs2,"AT+SAPBR=3,1,%cAPN%c,%cwww%c%c",DoubleQuote,DoubleQuote,DoubleQuote,DoubleQuote,Enter);
     872:	1f 92       	push	r1
     874:	df 93       	push	r29
     876:	1f 92       	push	r1
     878:	cf 93       	push	r28
     87a:	1f 92       	push	r1
     87c:	cf 93       	push	r28
     87e:	1f 92       	push	r1
     880:	cf 93       	push	r28
     882:	1f 92       	push	r1
     884:	cf 93       	push	r28
     886:	81 e0       	ldi	r24, 0x01	; 1
     888:	91 e0       	ldi	r25, 0x01	; 1
     88a:	9f 93       	push	r25
     88c:	8f 93       	push	r24
     88e:	8f e0       	ldi	r24, 0x0F	; 15
     890:	95 e0       	ldi	r25, 0x05	; 5
     892:	9f 93       	push	r25
     894:	8f 93       	push	r24
     896:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	sprintf(Gprs3,"AT+SAPBR=1,1%c",Enter);
     89a:	1f 92       	push	r1
     89c:	df 93       	push	r29
     89e:	80 e2       	ldi	r24, 0x20	; 32
     8a0:	91 e0       	ldi	r25, 0x01	; 1
     8a2:	9f 93       	push	r25
     8a4:	8f 93       	push	r24
     8a6:	80 ef       	ldi	r24, 0xF0	; 240
     8a8:	93 e0       	ldi	r25, 0x03	; 3
     8aa:	9f 93       	push	r25
     8ac:	8f 93       	push	r24
     8ae:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	sprintf(Gprs4,"AT+SAPBR=2,1%c",Enter);
     8b2:	8d b7       	in	r24, 0x3d	; 61
     8b4:	9e b7       	in	r25, 0x3e	; 62
     8b6:	82 96       	adiw	r24, 0x22	; 34
     8b8:	0f b6       	in	r0, 0x3f	; 63
     8ba:	f8 94       	cli
     8bc:	9e bf       	out	0x3e, r25	; 62
     8be:	0f be       	out	0x3f, r0	; 63
     8c0:	8d bf       	out	0x3d, r24	; 61
     8c2:	1f 92       	push	r1
     8c4:	df 93       	push	r29
     8c6:	8f e2       	ldi	r24, 0x2F	; 47
     8c8:	91 e0       	ldi	r25, 0x01	; 1
     8ca:	9f 93       	push	r25
     8cc:	8f 93       	push	r24
     8ce:	81 e4       	ldi	r24, 0x41	; 65
     8d0:	95 e0       	ldi	r25, 0x05	; 5
     8d2:	9f 93       	push	r25
     8d4:	8f 93       	push	r24
     8d6:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>

	Tx_puts(Gprs1);
     8da:	87 ef       	ldi	r24, 0xF7	; 247
     8dc:	95 e0       	ldi	r25, 0x05	; 5
     8de:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     8e2:	9f e9       	ldi	r25, 0x9F	; 159
     8e4:	26 e8       	ldi	r18, 0x86	; 134
     8e6:	81 e0       	ldi	r24, 0x01	; 1
     8e8:	91 50       	subi	r25, 0x01	; 1
     8ea:	20 40       	sbci	r18, 0x00	; 0
     8ec:	80 40       	sbci	r24, 0x00	; 0
     8ee:	e1 f7       	brne	.-8      	; 0x8e8 <__stack+0x89>
     8f0:	00 c0       	rjmp	.+0      	; 0x8f2 <__stack+0x93>
     8f2:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Gprs2);
     8f4:	8f e0       	ldi	r24, 0x0F	; 15
     8f6:	95 e0       	ldi	r25, 0x05	; 5
     8f8:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     8fc:	9f e9       	ldi	r25, 0x9F	; 159
     8fe:	26 e8       	ldi	r18, 0x86	; 134
     900:	81 e0       	ldi	r24, 0x01	; 1
     902:	91 50       	subi	r25, 0x01	; 1
     904:	20 40       	sbci	r18, 0x00	; 0
     906:	80 40       	sbci	r24, 0x00	; 0
     908:	e1 f7       	brne	.-8      	; 0x902 <__stack+0xa3>
     90a:	00 c0       	rjmp	.+0      	; 0x90c <__stack+0xad>
     90c:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Gprs3);
     90e:	80 ef       	ldi	r24, 0xF0	; 240
     910:	93 e0       	ldi	r25, 0x03	; 3
     912:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     916:	9f e3       	ldi	r25, 0x3F	; 63
     918:	22 e4       	ldi	r18, 0x42	; 66
     91a:	8f e0       	ldi	r24, 0x0F	; 15
     91c:	91 50       	subi	r25, 0x01	; 1
     91e:	20 40       	sbci	r18, 0x00	; 0
     920:	80 40       	sbci	r24, 0x00	; 0
     922:	e1 f7       	brne	.-8      	; 0x91c <__stack+0xbd>
     924:	00 c0       	rjmp	.+0      	; 0x926 <__stack+0xc7>
     926:	00 00       	nop
	_delay_ms(5000);
	Tx_puts(Gprs4);
     928:	81 e4       	ldi	r24, 0x41	; 65
     92a:	95 e0       	ldi	r25, 0x05	; 5
     92c:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     930:	9f e9       	ldi	r25, 0x9F	; 159
     932:	26 e8       	ldi	r18, 0x86	; 134
     934:	81 e0       	ldi	r24, 0x01	; 1
     936:	91 50       	subi	r25, 0x01	; 1
     938:	20 40       	sbci	r18, 0x00	; 0
     93a:	80 40       	sbci	r24, 0x00	; 0
     93c:	e1 f7       	brne	.-8      	; 0x936 <__stack+0xd7>
     93e:	00 c0       	rjmp	.+0      	; 0x940 <__stack+0xe1>
     940:	00 00       	nop
	_delay_ms(500);
	
	Lcd4_Clear();
     942:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
     946:	0f 90       	pop	r0
     948:	0f 90       	pop	r0
     94a:	0f 90       	pop	r0
     94c:	0f 90       	pop	r0
     94e:	0f 90       	pop	r0
     950:	0f 90       	pop	r0
	
	return;
	//-----------------------------------------------------------------------------------------------------

}
     952:	df 91       	pop	r29
     954:	cf 91       	pop	r28
     956:	08 95       	ret

00000958 <FTP_connect>:

void FTP_connect()
{
     958:	cf 93       	push	r28
     95a:	df 93       	push	r29
	//---------------------FTP Initialization----------------------------------------------------------
	
	Lcd4_Clear();
     95c:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
     960:	60 e0       	ldi	r22, 0x00	; 0
     962:	70 e0       	ldi	r23, 0x00	; 0
     964:	81 e0       	ldi	r24, 0x01	; 1
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	Lcd4_Write_String("FTP Connection");
     96c:	8e e3       	ldi	r24, 0x3E	; 62
     96e:	91 e0       	ldi	r25, 0x01	; 1
     970:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
	
	sprintf(Ftp1,"AT+FTPCID=1%c",Enter);
     974:	1f 92       	push	r1
     976:	dd e0       	ldi	r29, 0x0D	; 13
     978:	df 93       	push	r29
     97a:	8d e4       	ldi	r24, 0x4D	; 77
     97c:	91 e0       	ldi	r25, 0x01	; 1
     97e:	9f 93       	push	r25
     980:	8f 93       	push	r24
     982:	8e e8       	ldi	r24, 0x8E	; 142
     984:	96 e0       	ldi	r25, 0x06	; 6
     986:	9f 93       	push	r25
     988:	8f 93       	push	r24
     98a:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	sprintf(Ftp2,"AT+FTPSERV=%cftp.marahnama.ir%c%c",DoubleQuote,DoubleQuote,Enter);
     98e:	1f 92       	push	r1
     990:	df 93       	push	r29
     992:	1f 92       	push	r1
     994:	c2 e2       	ldi	r28, 0x22	; 34
     996:	cf 93       	push	r28
     998:	1f 92       	push	r1
     99a:	cf 93       	push	r28
     99c:	8b e5       	ldi	r24, 0x5B	; 91
     99e:	91 e0       	ldi	r25, 0x01	; 1
     9a0:	9f 93       	push	r25
     9a2:	8f 93       	push	r24
     9a4:	8a e3       	ldi	r24, 0x3A	; 58
     9a6:	94 e0       	ldi	r25, 0x04	; 4
     9a8:	9f 93       	push	r25
     9aa:	8f 93       	push	r24
     9ac:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	sprintf(Ftp3,"AT+FTPUN=%cSIM900@marahnama.ir%c%c",DoubleQuote,DoubleQuote,Enter);
     9b0:	1f 92       	push	r1
     9b2:	df 93       	push	r29
     9b4:	1f 92       	push	r1
     9b6:	cf 93       	push	r28
     9b8:	1f 92       	push	r1
     9ba:	cf 93       	push	r28
     9bc:	8d e7       	ldi	r24, 0x7D	; 125
     9be:	91 e0       	ldi	r25, 0x01	; 1
     9c0:	9f 93       	push	r25
     9c2:	8f 93       	push	r24
     9c4:	88 ea       	ldi	r24, 0xA8	; 168
     9c6:	94 e0       	ldi	r25, 0x04	; 4
     9c8:	9f 93       	push	r25
     9ca:	8f 93       	push	r24
     9cc:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	sprintf(Ftp4,"AT+FTPPW=%cadmin123%c%c",DoubleQuote,DoubleQuote,Enter);
     9d0:	1f 92       	push	r1
     9d2:	df 93       	push	r29
     9d4:	1f 92       	push	r1
     9d6:	cf 93       	push	r28
     9d8:	1f 92       	push	r1
     9da:	cf 93       	push	r28
     9dc:	80 ea       	ldi	r24, 0xA0	; 160
     9de:	91 e0       	ldi	r25, 0x01	; 1
     9e0:	9f 93       	push	r25
     9e2:	8f 93       	push	r24
     9e4:	8b e3       	ldi	r24, 0x3B	; 59
     9e6:	97 e0       	ldi	r25, 0x07	; 7
     9e8:	9f 93       	push	r25
     9ea:	8f 93       	push	r24
     9ec:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	
	Tx_puts(Ftp1);
     9f0:	8d b7       	in	r24, 0x3d	; 61
     9f2:	9e b7       	in	r25, 0x3e	; 62
     9f4:	84 96       	adiw	r24, 0x24	; 36
     9f6:	0f b6       	in	r0, 0x3f	; 63
     9f8:	f8 94       	cli
     9fa:	9e bf       	out	0x3e, r25	; 62
     9fc:	0f be       	out	0x3f, r0	; 63
     9fe:	8d bf       	out	0x3d, r24	; 61
     a00:	8e e8       	ldi	r24, 0x8E	; 142
     a02:	96 e0       	ldi	r25, 0x06	; 6
     a04:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     a08:	9f e9       	ldi	r25, 0x9F	; 159
     a0a:	26 e8       	ldi	r18, 0x86	; 134
     a0c:	81 e0       	ldi	r24, 0x01	; 1
     a0e:	91 50       	subi	r25, 0x01	; 1
     a10:	20 40       	sbci	r18, 0x00	; 0
     a12:	80 40       	sbci	r24, 0x00	; 0
     a14:	e1 f7       	brne	.-8      	; 0xa0e <FTP_connect+0xb6>
     a16:	00 c0       	rjmp	.+0      	; 0xa18 <FTP_connect+0xc0>
     a18:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Ftp2);
     a1a:	8a e3       	ldi	r24, 0x3A	; 58
     a1c:	94 e0       	ldi	r25, 0x04	; 4
     a1e:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     a22:	9f e9       	ldi	r25, 0x9F	; 159
     a24:	26 e8       	ldi	r18, 0x86	; 134
     a26:	81 e0       	ldi	r24, 0x01	; 1
     a28:	91 50       	subi	r25, 0x01	; 1
     a2a:	20 40       	sbci	r18, 0x00	; 0
     a2c:	80 40       	sbci	r24, 0x00	; 0
     a2e:	e1 f7       	brne	.-8      	; 0xa28 <FTP_connect+0xd0>
     a30:	00 c0       	rjmp	.+0      	; 0xa32 <FTP_connect+0xda>
     a32:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Ftp3);
     a34:	88 ea       	ldi	r24, 0xA8	; 168
     a36:	94 e0       	ldi	r25, 0x04	; 4
     a38:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     a3c:	9f e9       	ldi	r25, 0x9F	; 159
     a3e:	26 e8       	ldi	r18, 0x86	; 134
     a40:	81 e0       	ldi	r24, 0x01	; 1
     a42:	91 50       	subi	r25, 0x01	; 1
     a44:	20 40       	sbci	r18, 0x00	; 0
     a46:	80 40       	sbci	r24, 0x00	; 0
     a48:	e1 f7       	brne	.-8      	; 0xa42 <FTP_connect+0xea>
     a4a:	00 c0       	rjmp	.+0      	; 0xa4c <FTP_connect+0xf4>
     a4c:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Ftp4);
     a4e:	8b e3       	ldi	r24, 0x3B	; 59
     a50:	97 e0       	ldi	r25, 0x07	; 7
     a52:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     a56:	9f e9       	ldi	r25, 0x9F	; 159
     a58:	26 e8       	ldi	r18, 0x86	; 134
     a5a:	81 e0       	ldi	r24, 0x01	; 1
     a5c:	91 50       	subi	r25, 0x01	; 1
     a5e:	20 40       	sbci	r18, 0x00	; 0
     a60:	80 40       	sbci	r24, 0x00	; 0
     a62:	e1 f7       	brne	.-8      	; 0xa5c <FTP_connect+0x104>
     a64:	00 c0       	rjmp	.+0      	; 0xa66 <FTP_connect+0x10e>
     a66:	00 00       	nop
	_delay_ms(500);
	
	Lcd4_Clear();
     a68:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	
	return;
	//---------------------------------------------------------------------------------------------------
}
     a6c:	df 91       	pop	r29
     a6e:	cf 91       	pop	r28
     a70:	08 95       	ret

00000a72 <Download_start>:

void Download_start()
{
     a72:	cf 93       	push	r28
     a74:	df 93       	push	r29
	
	//---------------------Download Initialization----------------------------------------------------------

	Lcd4_Clear();
     a76:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
     a7a:	60 e0       	ldi	r22, 0x00	; 0
     a7c:	70 e0       	ldi	r23, 0x00	; 0
     a7e:	81 e0       	ldi	r24, 0x01	; 1
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	Lcd4_Write_String("Downloading ...");
     a86:	88 eb       	ldi	r24, 0xB8	; 184
     a88:	91 e0       	ldi	r25, 0x01	; 1
     a8a:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
	
	sprintf(Dwnld1,"AT+FTPGETNAME=%cChanges.txt%c%c",DoubleQuote,DoubleQuote,Enter);
     a8e:	1f 92       	push	r1
     a90:	cd e0       	ldi	r28, 0x0D	; 13
     a92:	cf 93       	push	r28
     a94:	1f 92       	push	r1
     a96:	d2 e2       	ldi	r29, 0x22	; 34
     a98:	df 93       	push	r29
     a9a:	1f 92       	push	r1
     a9c:	df 93       	push	r29
     a9e:	88 ec       	ldi	r24, 0xC8	; 200
     aa0:	91 e0       	ldi	r25, 0x01	; 1
     aa2:	9f 93       	push	r25
     aa4:	8f 93       	push	r24
     aa6:	84 ea       	ldi	r24, 0xA4	; 164
     aa8:	97 e0       	ldi	r25, 0x07	; 7
     aaa:	9f 93       	push	r25
     aac:	8f 93       	push	r24
     aae:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	sprintf(Dwnld2,"AT+FTPGETPATH=%c/%c%c",DoubleQuote,DoubleQuote,Enter);
     ab2:	1f 92       	push	r1
     ab4:	cf 93       	push	r28
     ab6:	1f 92       	push	r1
     ab8:	df 93       	push	r29
     aba:	1f 92       	push	r1
     abc:	df 93       	push	r29
     abe:	88 ee       	ldi	r24, 0xE8	; 232
     ac0:	91 e0       	ldi	r25, 0x01	; 1
     ac2:	9f 93       	push	r25
     ac4:	8f 93       	push	r24
     ac6:	82 ea       	ldi	r24, 0xA2	; 162
     ac8:	96 e0       	ldi	r25, 0x06	; 6
     aca:	9f 93       	push	r25
     acc:	8f 93       	push	r24
     ace:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	sprintf(Dwnld3,"AT+FTPGET=1%c",Enter);
     ad2:	1f 92       	push	r1
     ad4:	cf 93       	push	r28
     ad6:	8e ef       	ldi	r24, 0xFE	; 254
     ad8:	91 e0       	ldi	r25, 0x01	; 1
     ada:	9f 93       	push	r25
     adc:	8f 93       	push	r24
     ade:	85 e5       	ldi	r24, 0x55	; 85
     ae0:	95 e0       	ldi	r25, 0x05	; 5
     ae2:	9f 93       	push	r25
     ae4:	8f 93       	push	r24
     ae6:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	sprintf(Dwnld4,"AT+FTPGET=2,1024%c",Enter);
     aea:	1f 92       	push	r1
     aec:	cf 93       	push	r28
     aee:	8c e0       	ldi	r24, 0x0C	; 12
     af0:	92 e0       	ldi	r25, 0x02	; 2
     af2:	9f 93       	push	r25
     af4:	8f 93       	push	r24
     af6:	8a ea       	ldi	r24, 0xAA	; 170
     af8:	93 e0       	ldi	r25, 0x03	; 3
     afa:	9f 93       	push	r25
     afc:	8f 93       	push	r24
     afe:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	
	Tx_puts(Dwnld1);
     b02:	8d b7       	in	r24, 0x3d	; 61
     b04:	9e b7       	in	r25, 0x3e	; 62
     b06:	80 96       	adiw	r24, 0x20	; 32
     b08:	0f b6       	in	r0, 0x3f	; 63
     b0a:	f8 94       	cli
     b0c:	9e bf       	out	0x3e, r25	; 62
     b0e:	0f be       	out	0x3f, r0	; 63
     b10:	8d bf       	out	0x3d, r24	; 61
     b12:	84 ea       	ldi	r24, 0xA4	; 164
     b14:	97 e0       	ldi	r25, 0x07	; 7
     b16:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     b1a:	9f e9       	ldi	r25, 0x9F	; 159
     b1c:	26 e8       	ldi	r18, 0x86	; 134
     b1e:	81 e0       	ldi	r24, 0x01	; 1
     b20:	91 50       	subi	r25, 0x01	; 1
     b22:	20 40       	sbci	r18, 0x00	; 0
     b24:	80 40       	sbci	r24, 0x00	; 0
     b26:	e1 f7       	brne	.-8      	; 0xb20 <Download_start+0xae>
     b28:	00 c0       	rjmp	.+0      	; 0xb2a <Download_start+0xb8>
     b2a:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Dwnld2);
     b2c:	82 ea       	ldi	r24, 0xA2	; 162
     b2e:	96 e0       	ldi	r25, 0x06	; 6
     b30:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     b34:	9f e9       	ldi	r25, 0x9F	; 159
     b36:	26 e8       	ldi	r18, 0x86	; 134
     b38:	81 e0       	ldi	r24, 0x01	; 1
     b3a:	91 50       	subi	r25, 0x01	; 1
     b3c:	20 40       	sbci	r18, 0x00	; 0
     b3e:	80 40       	sbci	r24, 0x00	; 0
     b40:	e1 f7       	brne	.-8      	; 0xb3a <Download_start+0xc8>
     b42:	00 c0       	rjmp	.+0      	; 0xb44 <Download_start+0xd2>
     b44:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Dwnld3);
     b46:	85 e5       	ldi	r24, 0x55	; 85
     b48:	95 e0       	ldi	r25, 0x05	; 5
     b4a:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     b4e:	9f e7       	ldi	r25, 0x7F	; 127
     b50:	26 e9       	ldi	r18, 0x96	; 150
     b52:	88 e9       	ldi	r24, 0x98	; 152
     b54:	91 50       	subi	r25, 0x01	; 1
     b56:	20 40       	sbci	r18, 0x00	; 0
     b58:	80 40       	sbci	r24, 0x00	; 0
     b5a:	e1 f7       	brne	.-8      	; 0xb54 <Download_start+0xe2>
     b5c:	00 c0       	rjmp	.+0      	; 0xb5e <Download_start+0xec>
     b5e:	00 00       	nop
	_delay_ms(50000);
	Tx_puts(Dwnld4);
     b60:	8a ea       	ldi	r24, 0xAA	; 170
     b62:	93 e0       	ldi	r25, 0x03	; 3
     b64:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     b68:	9f e7       	ldi	r25, 0x7F	; 127
     b6a:	24 e8       	ldi	r18, 0x84	; 132
     b6c:	8e e1       	ldi	r24, 0x1E	; 30
     b6e:	91 50       	subi	r25, 0x01	; 1
     b70:	20 40       	sbci	r18, 0x00	; 0
     b72:	80 40       	sbci	r24, 0x00	; 0
     b74:	e1 f7       	brne	.-8      	; 0xb6e <Download_start+0xfc>
     b76:	00 c0       	rjmp	.+0      	; 0xb78 <Download_start+0x106>
     b78:	00 00       	nop
	_delay_ms(10000);
	
	//sprintf (Changes, "%s", strstr (Temp, "Changes"));
	
	Lcd4_Clear();
     b7a:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
     b7e:	60 e0       	ldi	r22, 0x00	; 0
     b80:	70 e0       	ldi	r23, 0x00	; 0
     b82:	81 e0       	ldi	r24, 0x01	; 1
     b84:	90 e0       	ldi	r25, 0x00	; 0
     b86:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	Lcd4_Write_String("Download Complete");
     b8a:	8f e1       	ldi	r24, 0x1F	; 31
     b8c:	92 e0       	ldi	r25, 0x02	; 2
     b8e:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
     b92:	9f e3       	ldi	r25, 0x3F	; 63
     b94:	2d e0       	ldi	r18, 0x0D	; 13
     b96:	83 e0       	ldi	r24, 0x03	; 3
     b98:	91 50       	subi	r25, 0x01	; 1
     b9a:	20 40       	sbci	r18, 0x00	; 0
     b9c:	80 40       	sbci	r24, 0x00	; 0
     b9e:	e1 f7       	brne	.-8      	; 0xb98 <Download_start+0x126>
     ba0:	00 c0       	rjmp	.+0      	; 0xba2 <Download_start+0x130>
     ba2:	00 00       	nop
	_delay_ms(1000);
	Lcd4_Clear();
     ba4:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	
	return;
	
	//----------------------------------------------------------------------------------------
}
     ba8:	df 91       	pop	r29
     baa:	cf 91       	pop	r28
     bac:	08 95       	ret

00000bae <Upload_start>:

void Upload_start()
{
     bae:	cf 93       	push	r28
     bb0:	df 93       	push	r29
	//---------------------Upload Initialization----------------------------------------------
	
	Lcd4_Clear();
     bb2:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
     bb6:	60 e0       	ldi	r22, 0x00	; 0
     bb8:	70 e0       	ldi	r23, 0x00	; 0
     bba:	81 e0       	ldi	r24, 0x01	; 1
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	Lcd4_Write_String("Uploading ...");
     bc2:	81 e3       	ldi	r24, 0x31	; 49
     bc4:	92 e0       	ldi	r25, 0x02	; 2
     bc6:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
	
	sprintf(Upld1,"AT+FTPPUTNAME=%cStatus.txt%c%c",DoubleQuote,DoubleQuote,Enter);
     bca:	1f 92       	push	r1
     bcc:	cd e0       	ldi	r28, 0x0D	; 13
     bce:	cf 93       	push	r28
     bd0:	1f 92       	push	r1
     bd2:	d2 e2       	ldi	r29, 0x22	; 34
     bd4:	df 93       	push	r29
     bd6:	1f 92       	push	r1
     bd8:	df 93       	push	r29
     bda:	8f e3       	ldi	r24, 0x3F	; 63
     bdc:	92 e0       	ldi	r25, 0x02	; 2
     bde:	9f 93       	push	r25
     be0:	8f 93       	push	r24
     be2:	83 ec       	ldi	r24, 0xC3	; 195
     be4:	97 e0       	ldi	r25, 0x07	; 7
     be6:	9f 93       	push	r25
     be8:	8f 93       	push	r24
     bea:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	sprintf(Upld2,"AT+FTPPUTPATH=%c/%c%c",DoubleQuote,DoubleQuote,Enter);
     bee:	1f 92       	push	r1
     bf0:	cf 93       	push	r28
     bf2:	1f 92       	push	r1
     bf4:	df 93       	push	r29
     bf6:	1f 92       	push	r1
     bf8:	df 93       	push	r29
     bfa:	8e e5       	ldi	r24, 0x5E	; 94
     bfc:	92 e0       	ldi	r25, 0x02	; 2
     bfe:	9f 93       	push	r25
     c00:	8f 93       	push	r24
     c02:	8b ed       	ldi	r24, 0xDB	; 219
     c04:	94 e0       	ldi	r25, 0x04	; 4
     c06:	9f 93       	push	r25
     c08:	8f 93       	push	r24
     c0a:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	sprintf(Upld3,"AT+FTPPUT=1%c",Enter);
     c0e:	1f 92       	push	r1
     c10:	cf 93       	push	r28
     c12:	84 e7       	ldi	r24, 0x74	; 116
     c14:	92 e0       	ldi	r25, 0x02	; 2
     c16:	9f 93       	push	r25
     c18:	8f 93       	push	r24
     c1a:	86 e8       	ldi	r24, 0x86	; 134
     c1c:	97 e0       	ldi	r25, 0x07	; 7
     c1e:	9f 93       	push	r25
     c20:	8f 93       	push	r24
     c22:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	sprintf(Upld4,"AT+FTPPUT=2,49%c",Enter);
     c26:	1f 92       	push	r1
     c28:	cf 93       	push	r28
     c2a:	82 e8       	ldi	r24, 0x82	; 130
     c2c:	92 e0       	ldi	r25, 0x02	; 2
     c2e:	9f 93       	push	r25
     c30:	8f 93       	push	r24
     c32:	82 e6       	ldi	r24, 0x62	; 98
     c34:	94 e0       	ldi	r25, 0x04	; 4
     c36:	9f 93       	push	r25
     c38:	8f 93       	push	r24
     c3a:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	sprintf(Upld6,"AT+FTPPUT=2,0%c",Enter);
     c3e:	8d b7       	in	r24, 0x3d	; 61
     c40:	9e b7       	in	r25, 0x3e	; 62
     c42:	80 96       	adiw	r24, 0x20	; 32
     c44:	0f b6       	in	r0, 0x3f	; 63
     c46:	f8 94       	cli
     c48:	9e bf       	out	0x3e, r25	; 62
     c4a:	0f be       	out	0x3f, r0	; 63
     c4c:	8d bf       	out	0x3d, r24	; 61
     c4e:	1f 92       	push	r1
     c50:	cf 93       	push	r28
     c52:	83 e9       	ldi	r24, 0x93	; 147
     c54:	92 e0       	ldi	r25, 0x02	; 2
     c56:	9f 93       	push	r25
     c58:	8f 93       	push	r24
     c5a:	85 ef       	ldi	r24, 0xF5	; 245
     c5c:	96 e0       	ldi	r25, 0x06	; 6
     c5e:	9f 93       	push	r25
     c60:	8f 93       	push	r24
     c62:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	
	Temperature = read_adc(0);
     c66:	80 e0       	ldi	r24, 0x00	; 0
     c68:	0e 94 49 00 	call	0x92	; 0x92 <read_adc>
	Temperature = Temperature/2 - 352;
     c6c:	0f 90       	pop	r0
     c6e:	0f 90       	pop	r0
     c70:	0f 90       	pop	r0
     c72:	0f 90       	pop	r0
     c74:	0f 90       	pop	r0
     c76:	0f 90       	pop	r0
     c78:	99 23       	and	r25, r25
     c7a:	0c f4       	brge	.+2      	; 0xc7e <Upload_start+0xd0>
     c7c:	01 96       	adiw	r24, 0x01	; 1
     c7e:	95 95       	asr	r25
     c80:	87 95       	ror	r24
     c82:	80 56       	subi	r24, 0x60	; 96
     c84:	91 40       	sbci	r25, 0x01	; 1
     c86:	90 93 05 04 	sts	0x0405, r25
     c8a:	80 93 04 04 	sts	0x0404, r24
	switch (TA)
     c8e:	20 91 63 00 	lds	r18, 0x0063
     c92:	20 33       	cpi	r18, 0x30	; 48
     c94:	49 f0       	breq	.+18     	; 0xca8 <Upload_start+0xfa>
     c96:	21 33       	cpi	r18, 0x31	; 49
     c98:	69 f4       	brne	.+26     	; 0xcb4 <Upload_start+0x106>
	{
		case '1':
		TTA = "ON";
     c9a:	29 e8       	ldi	r18, 0x89	; 137
     c9c:	33 e0       	ldi	r19, 0x03	; 3
     c9e:	30 93 c1 06 	sts	0x06C1, r19
     ca2:	20 93 c0 06 	sts	0x06C0, r18
		break;
     ca6:	06 c0       	rjmp	.+12     	; 0xcb4 <Upload_start+0x106>
		case '0':
		TTA = "OFF";
     ca8:	23 ea       	ldi	r18, 0xA3	; 163
     caa:	32 e0       	ldi	r19, 0x02	; 2
     cac:	30 93 c1 06 	sts	0x06C1, r19
     cb0:	20 93 c0 06 	sts	0x06C0, r18
		break;
	}
	
	switch (TB)
     cb4:	20 91 62 00 	lds	r18, 0x0062
     cb8:	20 33       	cpi	r18, 0x30	; 48
     cba:	49 f0       	breq	.+18     	; 0xcce <Upload_start+0x120>
     cbc:	21 33       	cpi	r18, 0x31	; 49
     cbe:	69 f4       	brne	.+26     	; 0xcda <Upload_start+0x12c>
	{
		case '1':
		TTB = "ON";
     cc0:	29 e8       	ldi	r18, 0x89	; 137
     cc2:	33 e0       	ldi	r19, 0x03	; 3
     cc4:	30 93 07 04 	sts	0x0407, r19
     cc8:	20 93 06 04 	sts	0x0406, r18
		break;
     ccc:	06 c0       	rjmp	.+12     	; 0xcda <Upload_start+0x12c>
		case '0':
		TTB = "OFF";
     cce:	23 ea       	ldi	r18, 0xA3	; 163
     cd0:	32 e0       	ldi	r19, 0x02	; 2
     cd2:	30 93 07 04 	sts	0x0407, r19
     cd6:	20 93 06 04 	sts	0x0406, r18
		break;
	}
	switch (TC)
     cda:	20 91 61 00 	lds	r18, 0x0061
     cde:	20 33       	cpi	r18, 0x30	; 48
     ce0:	49 f0       	breq	.+18     	; 0xcf4 <Upload_start+0x146>
     ce2:	21 33       	cpi	r18, 0x31	; 49
     ce4:	69 f4       	brne	.+26     	; 0xd00 <Upload_start+0x152>
	{
		case '1':
		TTC = "ON";
     ce6:	29 e8       	ldi	r18, 0x89	; 137
     ce8:	33 e0       	ldi	r19, 0x03	; 3
     cea:	30 93 7e 05 	sts	0x057E, r19
     cee:	20 93 7d 05 	sts	0x057D, r18
		break;
     cf2:	06 c0       	rjmp	.+12     	; 0xd00 <Upload_start+0x152>
		case '0':
		TTC = "OFF";
     cf4:	23 ea       	ldi	r18, 0xA3	; 163
     cf6:	32 e0       	ldi	r19, 0x02	; 2
     cf8:	30 93 7e 05 	sts	0x057E, r19
     cfc:	20 93 7d 05 	sts	0x057D, r18
		break;
	}
	switch (TD)
     d00:	20 91 60 00 	lds	r18, 0x0060
     d04:	20 33       	cpi	r18, 0x30	; 48
     d06:	49 f0       	breq	.+18     	; 0xd1a <Upload_start+0x16c>
     d08:	21 33       	cpi	r18, 0x31	; 49
     d0a:	69 f4       	brne	.+26     	; 0xd26 <Upload_start+0x178>
	{
		case '1':
		TTD = "ON";
     d0c:	29 e8       	ldi	r18, 0x89	; 137
     d0e:	33 e0       	ldi	r19, 0x03	; 3
     d10:	30 93 0e 05 	sts	0x050E, r19
     d14:	20 93 0d 05 	sts	0x050D, r18
		break;
     d18:	06 c0       	rjmp	.+12     	; 0xd26 <Upload_start+0x178>
		case '0':
		TTD = "OFF";
     d1a:	23 ea       	ldi	r18, 0xA3	; 163
     d1c:	32 e0       	ldi	r19, 0x02	; 2
     d1e:	30 93 0e 05 	sts	0x050E, r19
     d22:	20 93 0d 05 	sts	0x050D, r18
		break;
	}

	sprintf(Information,"LED1 %s LED2 %s LED3 %s LED4 %s Temperature %d",TTA,TTB,TTC,TTD,Temperature);
     d26:	9f 93       	push	r25
     d28:	8f 93       	push	r24
     d2a:	80 91 0e 05 	lds	r24, 0x050E
     d2e:	8f 93       	push	r24
     d30:	80 91 0d 05 	lds	r24, 0x050D
     d34:	8f 93       	push	r24
     d36:	80 91 7e 05 	lds	r24, 0x057E
     d3a:	8f 93       	push	r24
     d3c:	80 91 7d 05 	lds	r24, 0x057D
     d40:	8f 93       	push	r24
     d42:	80 91 07 04 	lds	r24, 0x0407
     d46:	8f 93       	push	r24
     d48:	80 91 06 04 	lds	r24, 0x0406
     d4c:	8f 93       	push	r24
     d4e:	80 91 c1 06 	lds	r24, 0x06C1
     d52:	8f 93       	push	r24
     d54:	80 91 c0 06 	lds	r24, 0x06C0
     d58:	8f 93       	push	r24
     d5a:	87 ea       	ldi	r24, 0xA7	; 167
     d5c:	92 e0       	ldi	r25, 0x02	; 2
     d5e:	9f 93       	push	r25
     d60:	8f 93       	push	r24
     d62:	88 e0       	ldi	r24, 0x08	; 8
     d64:	94 e0       	ldi	r25, 0x04	; 4
     d66:	9f 93       	push	r25
     d68:	8f 93       	push	r24
     d6a:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
	
	Tx_puts(Upld1);
     d6e:	83 ec       	ldi	r24, 0xC3	; 195
     d70:	97 e0       	ldi	r25, 0x07	; 7
     d72:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     d76:	9f e9       	ldi	r25, 0x9F	; 159
     d78:	26 e8       	ldi	r18, 0x86	; 134
     d7a:	81 e0       	ldi	r24, 0x01	; 1
     d7c:	91 50       	subi	r25, 0x01	; 1
     d7e:	20 40       	sbci	r18, 0x00	; 0
     d80:	80 40       	sbci	r24, 0x00	; 0
     d82:	e1 f7       	brne	.-8      	; 0xd7c <Upload_start+0x1ce>
     d84:	00 c0       	rjmp	.+0      	; 0xd86 <Upload_start+0x1d8>
     d86:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Upld2);
     d88:	8b ed       	ldi	r24, 0xDB	; 219
     d8a:	94 e0       	ldi	r25, 0x04	; 4
     d8c:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     d90:	9f e9       	ldi	r25, 0x9F	; 159
     d92:	26 e8       	ldi	r18, 0x86	; 134
     d94:	81 e0       	ldi	r24, 0x01	; 1
     d96:	91 50       	subi	r25, 0x01	; 1
     d98:	20 40       	sbci	r18, 0x00	; 0
     d9a:	80 40       	sbci	r24, 0x00	; 0
     d9c:	e1 f7       	brne	.-8      	; 0xd96 <Upload_start+0x1e8>
     d9e:	00 c0       	rjmp	.+0      	; 0xda0 <Upload_start+0x1f2>
     da0:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Upld3);
     da2:	86 e8       	ldi	r24, 0x86	; 134
     da4:	97 e0       	ldi	r25, 0x07	; 7
     da6:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     daa:	9f e7       	ldi	r25, 0x7F	; 127
     dac:	2d e8       	ldi	r18, 0x8D	; 141
     dae:	8b e5       	ldi	r24, 0x5B	; 91
     db0:	91 50       	subi	r25, 0x01	; 1
     db2:	20 40       	sbci	r18, 0x00	; 0
     db4:	80 40       	sbci	r24, 0x00	; 0
     db6:	e1 f7       	brne	.-8      	; 0xdb0 <Upload_start+0x202>
     db8:	00 c0       	rjmp	.+0      	; 0xdba <Upload_start+0x20c>
     dba:	00 00       	nop
	_delay_ms(30000);
	Tx_puts(Upld4);
     dbc:	82 e6       	ldi	r24, 0x62	; 98
     dbe:	94 e0       	ldi	r25, 0x04	; 4
     dc0:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     dc4:	9f e9       	ldi	r25, 0x9F	; 159
     dc6:	26 e8       	ldi	r18, 0x86	; 134
     dc8:	81 e0       	ldi	r24, 0x01	; 1
     dca:	91 50       	subi	r25, 0x01	; 1
     dcc:	20 40       	sbci	r18, 0x00	; 0
     dce:	80 40       	sbci	r24, 0x00	; 0
     dd0:	e1 f7       	brne	.-8      	; 0xdca <Upload_start+0x21c>
     dd2:	00 c0       	rjmp	.+0      	; 0xdd4 <Upload_start+0x226>
     dd4:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Information);
     dd6:	88 e0       	ldi	r24, 0x08	; 8
     dd8:	94 e0       	ldi	r25, 0x04	; 4
     dda:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     dde:	9f e9       	ldi	r25, 0x9F	; 159
     de0:	26 e8       	ldi	r18, 0x86	; 134
     de2:	81 e0       	ldi	r24, 0x01	; 1
     de4:	91 50       	subi	r25, 0x01	; 1
     de6:	20 40       	sbci	r18, 0x00	; 0
     de8:	80 40       	sbci	r24, 0x00	; 0
     dea:	e1 f7       	brne	.-8      	; 0xde4 <Upload_start+0x236>
     dec:	00 c0       	rjmp	.+0      	; 0xdee <Upload_start+0x240>
     dee:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Upld6);
     df0:	85 ef       	ldi	r24, 0xF5	; 245
     df2:	96 e0       	ldi	r25, 0x06	; 6
     df4:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     df8:	9f e9       	ldi	r25, 0x9F	; 159
     dfa:	26 e8       	ldi	r18, 0x86	; 134
     dfc:	81 e0       	ldi	r24, 0x01	; 1
     dfe:	91 50       	subi	r25, 0x01	; 1
     e00:	20 40       	sbci	r18, 0x00	; 0
     e02:	80 40       	sbci	r24, 0x00	; 0
     e04:	e1 f7       	brne	.-8      	; 0xdfe <Upload_start+0x250>
     e06:	00 c0       	rjmp	.+0      	; 0xe08 <Upload_start+0x25a>
     e08:	00 00       	nop
	_delay_ms(500);
	
	Lcd4_Clear();
     e0a:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
     e0e:	60 e0       	ldi	r22, 0x00	; 0
     e10:	70 e0       	ldi	r23, 0x00	; 0
     e12:	81 e0       	ldi	r24, 0x01	; 1
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	Lcd4_Write_String("Upload Complete");
     e1a:	86 ed       	ldi	r24, 0xD6	; 214
     e1c:	92 e0       	ldi	r25, 0x02	; 2
     e1e:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
     e22:	9f e3       	ldi	r25, 0x3F	; 63
     e24:	2d e0       	ldi	r18, 0x0D	; 13
     e26:	83 e0       	ldi	r24, 0x03	; 3
     e28:	91 50       	subi	r25, 0x01	; 1
     e2a:	20 40       	sbci	r18, 0x00	; 0
     e2c:	80 40       	sbci	r24, 0x00	; 0
     e2e:	e1 f7       	brne	.-8      	; 0xe28 <Upload_start+0x27a>
     e30:	00 c0       	rjmp	.+0      	; 0xe32 <Upload_start+0x284>
     e32:	00 00       	nop
	_delay_ms(1000);
	Lcd4_Clear();
     e34:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
     e38:	8d b7       	in	r24, 0x3d	; 61
     e3a:	9e b7       	in	r25, 0x3e	; 62
     e3c:	0e 96       	adiw	r24, 0x0e	; 14
     e3e:	0f b6       	in	r0, 0x3f	; 63
     e40:	f8 94       	cli
     e42:	9e bf       	out	0x3e, r25	; 62
     e44:	0f be       	out	0x3f, r0	; 63
     e46:	8d bf       	out	0x3d, r24	; 61
	
	return;
	//----------------------------------------------------------------------------------------
}
     e48:	df 91       	pop	r29
     e4a:	cf 91       	pop	r28
     e4c:	08 95       	ret

00000e4e <__vector_11>:
	}
	return;
}

ISR(TIMER0_OVF_vect)
{
     e4e:	1f 92       	push	r1
     e50:	0f 92       	push	r0
     e52:	0f b6       	in	r0, 0x3f	; 63
     e54:	0f 92       	push	r0
     e56:	11 24       	eor	r1, r1
     e58:	0f 93       	push	r16
     e5a:	1f 93       	push	r17
     e5c:	2f 93       	push	r18
     e5e:	3f 93       	push	r19
     e60:	4f 93       	push	r20
     e62:	5f 93       	push	r21
     e64:	6f 93       	push	r22
     e66:	7f 93       	push	r23
     e68:	8f 93       	push	r24
     e6a:	9f 93       	push	r25
     e6c:	af 93       	push	r26
     e6e:	bf 93       	push	r27
     e70:	cf 93       	push	r28
     e72:	df 93       	push	r29
     e74:	ef 93       	push	r30
     e76:	ff 93       	push	r31
	count++;
     e78:	80 91 c2 06 	lds	r24, 0x06C2
     e7c:	8f 5f       	subi	r24, 0xFF	; 255
     e7e:	80 93 c2 06 	sts	0x06C2, r24
	if(count == 30)
     e82:	80 91 c2 06 	lds	r24, 0x06C2
     e86:	8e 31       	cpi	r24, 0x1E	; 30
     e88:	09 f0       	breq	.+2      	; 0xe8c <__vector_11+0x3e>
     e8a:	30 c1       	rjmp	.+608    	; 0x10ec <__vector_11+0x29e>
	{
		Lcd4_Write_String("END OF TIMER");
     e8c:	86 ee       	ldi	r24, 0xE6	; 230
     e8e:	92 e0       	ldi	r25, 0x02	; 2
     e90:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
     e94:	2f e3       	ldi	r18, 0x3F	; 63
     e96:	8d e0       	ldi	r24, 0x0D	; 13
     e98:	93 e0       	ldi	r25, 0x03	; 3
     e9a:	21 50       	subi	r18, 0x01	; 1
     e9c:	80 40       	sbci	r24, 0x00	; 0
     e9e:	90 40       	sbci	r25, 0x00	; 0
     ea0:	e1 f7       	brne	.-8      	; 0xe9a <__vector_11+0x4c>
     ea2:	00 c0       	rjmp	.+0      	; 0xea4 <__vector_11+0x56>
     ea4:	00 00       	nop
		_delay_ms(1000);
		Lcd4_Clear();
     ea6:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
		sprintf(chkmsg1,"+CMT: %c+989300093455%c",DoubleQuote,DoubleQuote);
     eaa:	1f 92       	push	r1
     eac:	82 e2       	ldi	r24, 0x22	; 34
     eae:	8f 93       	push	r24
     eb0:	1f 92       	push	r1
     eb2:	8f 93       	push	r24
     eb4:	83 ef       	ldi	r24, 0xF3	; 243
     eb6:	92 e0       	ldi	r25, 0x02	; 2
     eb8:	9f 93       	push	r25
     eba:	8f 93       	push	r24
     ebc:	86 e7       	ldi	r24, 0x76	; 118
     ebe:	94 e0       	ldi	r25, 0x04	; 4
     ec0:	9f 93       	push	r25
     ec2:	8f 93       	push	r24
     ec4:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
		char *ptr1 = Temp;

		char *prevptr = NULL;
		char *prevptr1 = NULL;

		while( (ptr = strstr(ptr,chkmsg1)))
     ec8:	8d b7       	in	r24, 0x3d	; 61
     eca:	9e b7       	in	r25, 0x3e	; 62
     ecc:	08 96       	adiw	r24, 0x08	; 8
     ece:	0f b6       	in	r0, 0x3f	; 63
     ed0:	f8 94       	cli
     ed2:	9e bf       	out	0x3e, r25	; 62
     ed4:	0f be       	out	0x3f, r0	; 63
     ed6:	8d bf       	out	0x3d, r24	; 61
		sprintf(chkmsg1,"+CMT: %c+989300093455%c",DoubleQuote,DoubleQuote);
		
		char *ptr = Temp;
		char *ptr1 = Temp;

		char *prevptr = NULL;
     ed8:	d0 e0       	ldi	r29, 0x00	; 0
     eda:	c0 e0       	ldi	r28, 0x00	; 0
		Lcd4_Write_String("END OF TIMER");
		_delay_ms(1000);
		Lcd4_Clear();
		sprintf(chkmsg1,"+CMT: %c+989300093455%c",DoubleQuote,DoubleQuote);
		
		char *ptr = Temp;
     edc:	20 ed       	ldi	r18, 0xD0	; 208
     ede:	34 e0       	ldi	r19, 0x04	; 4
		char *ptr1 = Temp;

		char *prevptr = NULL;
		char *prevptr1 = NULL;

		while( (ptr = strstr(ptr,chkmsg1)))
     ee0:	05 c0       	rjmp	.+10     	; 0xeec <__vector_11+0x9e>
		{
			prevptr = ptr++;
     ee2:	9c 01       	movw	r18, r24
     ee4:	2f 5f       	subi	r18, 0xFF	; 255
     ee6:	3f 4f       	sbci	r19, 0xFF	; 255
     ee8:	d8 2f       	mov	r29, r24
     eea:	c9 2f       	mov	r28, r25
		char *ptr1 = Temp;

		char *prevptr = NULL;
		char *prevptr1 = NULL;

		while( (ptr = strstr(ptr,chkmsg1)))
     eec:	66 e7       	ldi	r22, 0x76	; 118
     eee:	74 e0       	ldi	r23, 0x04	; 4
     ef0:	c9 01       	movw	r24, r18
     ef2:	0e 94 ad 0a 	call	0x155a	; 0x155a <strstr>
     ef6:	00 97       	sbiw	r24, 0x00	; 0
     ef8:	a1 f7       	brne	.-24     	; 0xee2 <__vector_11+0x94>
     efa:	00 e0       	ldi	r16, 0x00	; 0
     efc:	10 e0       	ldi	r17, 0x00	; 0
     efe:	20 ed       	ldi	r18, 0xD0	; 208
     f00:	34 e0       	ldi	r19, 0x04	; 4
     f02:	05 c0       	rjmp	.+10     	; 0xf0e <__vector_11+0xc0>
			prevptr = ptr++;
		}
		
		while( (ptr1 = strstr(ptr1,"Changes")))
		{
			prevptr1 = ptr1++;
     f04:	9c 01       	movw	r18, r24
     f06:	2f 5f       	subi	r18, 0xFF	; 255
     f08:	3f 4f       	sbci	r19, 0xFF	; 255
     f0a:	08 2f       	mov	r16, r24
     f0c:	19 2f       	mov	r17, r25
		while( (ptr = strstr(ptr,chkmsg1)))
		{
			prevptr = ptr++;
		}
		
		while( (ptr1 = strstr(ptr1,"Changes")))
     f0e:	6b e0       	ldi	r22, 0x0B	; 11
     f10:	73 e0       	ldi	r23, 0x03	; 3
     f12:	c9 01       	movw	r24, r18
     f14:	0e 94 ad 0a 	call	0x155a	; 0x155a <strstr>
     f18:	00 97       	sbiw	r24, 0x00	; 0
     f1a:	a1 f7       	brne	.-24     	; 0xf04 <__vector_11+0xb6>
		{
			prevptr1 = ptr1++;
		}
		
		sprintf (chkmsg2, "%s", prevptr);
     f1c:	6d 2f       	mov	r22, r29
     f1e:	7c 2f       	mov	r23, r28
     f20:	89 e2       	ldi	r24, 0x29	; 41
     f22:	96 e0       	ldi	r25, 0x06	; 6
     f24:	0e 94 a6 0a 	call	0x154c	; 0x154c <strcpy>
		if (chkmsg2[49] == 'C' && chkmsg2[50] == 'M' && chkmsg2[51] == 'D')
     f28:	80 91 5a 06 	lds	r24, 0x065A
     f2c:	83 34       	cpi	r24, 0x43	; 67
     f2e:	f9 f4       	brne	.+62     	; 0xf6e <__vector_11+0x120>
     f30:	90 91 5b 06 	lds	r25, 0x065B
     f34:	9d 34       	cpi	r25, 0x4D	; 77
     f36:	09 f0       	breq	.+2      	; 0xf3a <__vector_11+0xec>
     f38:	5b c0       	rjmp	.+182    	; 0xff0 <__vector_11+0x1a2>
     f3a:	90 91 5c 06 	lds	r25, 0x065C
     f3e:	94 34       	cpi	r25, 0x44	; 68
     f40:	09 f0       	breq	.+2      	; 0xf44 <__vector_11+0xf6>
     f42:	56 c0       	rjmp	.+172    	; 0xff0 <__vector_11+0x1a2>
		{
			showResult(chkmsg2[53],chkmsg2[54],chkmsg2[55],chkmsg2[56]);
     f44:	20 91 61 06 	lds	r18, 0x0661
     f48:	30 e0       	ldi	r19, 0x00	; 0
     f4a:	40 91 60 06 	lds	r20, 0x0660
     f4e:	50 e0       	ldi	r21, 0x00	; 0
     f50:	60 91 5f 06 	lds	r22, 0x065F
     f54:	70 e0       	ldi	r23, 0x00	; 0
     f56:	80 91 5e 06 	lds	r24, 0x065E
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	0e 94 b7 03 	call	0x76e	; 0x76e <showResult>
			i=0;
     f60:	10 92 a9 03 	sts	0x03A9, r1
     f64:	10 92 a8 03 	sts	0x03A8, r1
			count=0;
     f68:	10 92 c2 06 	sts	0x06C2, r1
			return;
     f6c:	bf c0       	rjmp	.+382    	; 0x10ec <__vector_11+0x29e>
		}
		
		if (chkmsg2[49] == 'D' && chkmsg2[50] == 'W' && chkmsg2[51] == 'N' && chkmsg2[52] == 'L'&& chkmsg2[53] == 'D')
     f6e:	84 34       	cpi	r24, 0x44	; 68
     f70:	09 f5       	brne	.+66     	; 0xfb4 <__vector_11+0x166>
     f72:	80 91 5b 06 	lds	r24, 0x065B
     f76:	87 35       	cpi	r24, 0x57	; 87
     f78:	09 f0       	breq	.+2      	; 0xf7c <__vector_11+0x12e>
     f7a:	8b c0       	rjmp	.+278    	; 0x1092 <__vector_11+0x244>
     f7c:	80 91 5c 06 	lds	r24, 0x065C
     f80:	8e 34       	cpi	r24, 0x4E	; 78
     f82:	09 f0       	breq	.+2      	; 0xf86 <__vector_11+0x138>
     f84:	86 c0       	rjmp	.+268    	; 0x1092 <__vector_11+0x244>
     f86:	80 91 5d 06 	lds	r24, 0x065D
     f8a:	8c 34       	cpi	r24, 0x4C	; 76
     f8c:	09 f0       	breq	.+2      	; 0xf90 <__vector_11+0x142>
     f8e:	81 c0       	rjmp	.+258    	; 0x1092 <__vector_11+0x244>
     f90:	80 91 5e 06 	lds	r24, 0x065E
     f94:	84 34       	cpi	r24, 0x44	; 68
     f96:	09 f0       	breq	.+2      	; 0xf9a <__vector_11+0x14c>
     f98:	7c c0       	rjmp	.+248    	; 0x1092 <__vector_11+0x244>
		{
			GPRS_Connect();
     f9a:	0e 94 15 04 	call	0x82a	; 0x82a <GPRS_Connect>
			FTP_connect();
     f9e:	0e 94 ac 04 	call	0x958	; 0x958 <FTP_connect>
			Download_start();
     fa2:	0e 94 39 05 	call	0xa72	; 0xa72 <Download_start>
			i=0;
     fa6:	10 92 a9 03 	sts	0x03A9, r1
     faa:	10 92 a8 03 	sts	0x03A8, r1
			count=0;
     fae:	10 92 c2 06 	sts	0x06C2, r1
			return;
     fb2:	9c c0       	rjmp	.+312    	; 0x10ec <__vector_11+0x29e>
		}
		
		if (chkmsg2[49] == 'U' && chkmsg2[50] == 'P' && chkmsg2[51] == 'L' && chkmsg2[52] == 'D')
     fb4:	85 35       	cpi	r24, 0x55	; 85
     fb6:	e1 f4       	brne	.+56     	; 0xff0 <__vector_11+0x1a2>
     fb8:	80 91 5b 06 	lds	r24, 0x065B
     fbc:	80 35       	cpi	r24, 0x50	; 80
     fbe:	09 f0       	breq	.+2      	; 0xfc2 <__vector_11+0x174>
     fc0:	68 c0       	rjmp	.+208    	; 0x1092 <__vector_11+0x244>
     fc2:	80 91 5c 06 	lds	r24, 0x065C
     fc6:	8c 34       	cpi	r24, 0x4C	; 76
     fc8:	09 f0       	breq	.+2      	; 0xfcc <__vector_11+0x17e>
     fca:	63 c0       	rjmp	.+198    	; 0x1092 <__vector_11+0x244>
     fcc:	80 91 5d 06 	lds	r24, 0x065D
     fd0:	84 34       	cpi	r24, 0x44	; 68
     fd2:	09 f0       	breq	.+2      	; 0xfd6 <__vector_11+0x188>
     fd4:	5e c0       	rjmp	.+188    	; 0x1092 <__vector_11+0x244>
		{
			GPRS_Connect();
     fd6:	0e 94 15 04 	call	0x82a	; 0x82a <GPRS_Connect>
			FTP_connect();
     fda:	0e 94 ac 04 	call	0x958	; 0x958 <FTP_connect>
			Upload_start();
     fde:	0e 94 d7 05 	call	0xbae	; 0xbae <Upload_start>
			i=0;
     fe2:	10 92 a9 03 	sts	0x03A9, r1
     fe6:	10 92 a8 03 	sts	0x03A8, r1
			count=0;
     fea:	10 92 c2 06 	sts	0x06C2, r1
			return;
     fee:	7e c0       	rjmp	.+252    	; 0x10ec <__vector_11+0x29e>
		}
		
		if (chkmsg2[49] == 'I' && chkmsg2[50] == 'N' && chkmsg2[51] == 'F' && chkmsg2[52] == 'O')
     ff0:	89 34       	cpi	r24, 0x49	; 73
     ff2:	09 f0       	breq	.+2      	; 0xff6 <__vector_11+0x1a8>
     ff4:	4e c0       	rjmp	.+156    	; 0x1092 <__vector_11+0x244>
     ff6:	80 91 5b 06 	lds	r24, 0x065B
     ffa:	8e 34       	cpi	r24, 0x4E	; 78
     ffc:	09 f0       	breq	.+2      	; 0x1000 <__vector_11+0x1b2>
     ffe:	49 c0       	rjmp	.+146    	; 0x1092 <__vector_11+0x244>
    1000:	80 91 5c 06 	lds	r24, 0x065C
    1004:	86 34       	cpi	r24, 0x46	; 70
    1006:	09 f0       	breq	.+2      	; 0x100a <__vector_11+0x1bc>
    1008:	44 c0       	rjmp	.+136    	; 0x1092 <__vector_11+0x244>
    100a:	80 91 5d 06 	lds	r24, 0x065D
    100e:	8f 34       	cpi	r24, 0x4F	; 79
    1010:	09 f0       	breq	.+2      	; 0x1014 <__vector_11+0x1c6>
    1012:	3f c0       	rjmp	.+126    	; 0x1092 <__vector_11+0x244>
		{
			Temperature = read_adc(0);
    1014:	80 e0       	ldi	r24, 0x00	; 0
    1016:	0e 94 49 00 	call	0x92	; 0x92 <read_adc>
			Temperature = Temperature/2 - 352;
    101a:	99 23       	and	r25, r25
    101c:	0c f4       	brge	.+2      	; 0x1020 <__vector_11+0x1d2>
    101e:	01 96       	adiw	r24, 0x01	; 1
    1020:	95 95       	asr	r25
    1022:	87 95       	ror	r24
    1024:	80 56       	subi	r24, 0x60	; 96
    1026:	91 40       	sbci	r25, 0x01	; 1
    1028:	90 93 05 04 	sts	0x0405, r25
    102c:	80 93 04 04 	sts	0x0404, r24
			sprintf(Information,"LED1 = %c , LED2 = %c , LED3 = %c , LED4 = %c  , Temperature is %d ",TA,TB,TC,TD,Temperature);
    1030:	9f 93       	push	r25
    1032:	8f 93       	push	r24
    1034:	80 91 60 00 	lds	r24, 0x0060
    1038:	1f 92       	push	r1
    103a:	8f 93       	push	r24
    103c:	80 91 61 00 	lds	r24, 0x0061
    1040:	1f 92       	push	r1
    1042:	8f 93       	push	r24
    1044:	80 91 62 00 	lds	r24, 0x0062
    1048:	1f 92       	push	r1
    104a:	8f 93       	push	r24
    104c:	80 91 63 00 	lds	r24, 0x0063
    1050:	1f 92       	push	r1
    1052:	8f 93       	push	r24
    1054:	83 e1       	ldi	r24, 0x13	; 19
    1056:	93 e0       	ldi	r25, 0x03	; 3
    1058:	9f 93       	push	r25
    105a:	8f 93       	push	r24
    105c:	88 e0       	ldi	r24, 0x08	; 8
    105e:	94 e0       	ldi	r25, 0x04	; 4
    1060:	9f 93       	push	r25
    1062:	8f 93       	push	r24
    1064:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
			GSM_Send("09300093455",Information);
    1068:	68 e0       	ldi	r22, 0x08	; 8
    106a:	74 e0       	ldi	r23, 0x04	; 4
    106c:	80 eb       	ldi	r24, 0xB0	; 176
    106e:	90 e0       	ldi	r25, 0x00	; 0
    1070:	0e 94 17 03 	call	0x62e	; 0x62e <GSM_Send>
			i=0;
    1074:	10 92 a9 03 	sts	0x03A9, r1
    1078:	10 92 a8 03 	sts	0x03A8, r1
			count=0;
    107c:	10 92 c2 06 	sts	0x06C2, r1
			return;
    1080:	8d b7       	in	r24, 0x3d	; 61
    1082:	9e b7       	in	r25, 0x3e	; 62
    1084:	0e 96       	adiw	r24, 0x0e	; 14
    1086:	0f b6       	in	r0, 0x3f	; 63
    1088:	f8 94       	cli
    108a:	9e bf       	out	0x3e, r25	; 62
    108c:	0f be       	out	0x3f, r0	; 63
    108e:	8d bf       	out	0x3d, r24	; 61
    1090:	2d c0       	rjmp	.+90     	; 0x10ec <__vector_11+0x29e>
		}
		
		sprintf (Changes, "%s", prevptr1);
    1092:	60 2f       	mov	r22, r16
    1094:	71 2f       	mov	r23, r17
    1096:	83 e9       	ldi	r24, 0x93	; 147
    1098:	95 e0       	ldi	r25, 0x05	; 5
    109a:	0e 94 a6 0a 	call	0x154c	; 0x154c <strcpy>
		if (Changes[10] == 'C' && Changes[11] == 'M' && Changes[12] == 'D')
    109e:	80 91 9d 05 	lds	r24, 0x059D
    10a2:	83 34       	cpi	r24, 0x43	; 67
    10a4:	e9 f4       	brne	.+58     	; 0x10e0 <__vector_11+0x292>
    10a6:	80 91 9e 05 	lds	r24, 0x059E
    10aa:	8d 34       	cpi	r24, 0x4D	; 77
    10ac:	c9 f4       	brne	.+50     	; 0x10e0 <__vector_11+0x292>
    10ae:	80 91 9f 05 	lds	r24, 0x059F
    10b2:	84 34       	cpi	r24, 0x44	; 68
    10b4:	a9 f4       	brne	.+42     	; 0x10e0 <__vector_11+0x292>
		{
			showResult(Changes[14],Changes[15],Changes[16],Changes[17]);
    10b6:	20 91 a4 05 	lds	r18, 0x05A4
    10ba:	30 e0       	ldi	r19, 0x00	; 0
    10bc:	40 91 a3 05 	lds	r20, 0x05A3
    10c0:	50 e0       	ldi	r21, 0x00	; 0
    10c2:	60 91 a2 05 	lds	r22, 0x05A2
    10c6:	70 e0       	ldi	r23, 0x00	; 0
    10c8:	80 91 a1 05 	lds	r24, 0x05A1
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	0e 94 b7 03 	call	0x76e	; 0x76e <showResult>
			i=0;
    10d2:	10 92 a9 03 	sts	0x03A9, r1
    10d6:	10 92 a8 03 	sts	0x03A8, r1
			count=0;
    10da:	10 92 c2 06 	sts	0x06C2, r1
			return;
    10de:	06 c0       	rjmp	.+12     	; 0x10ec <__vector_11+0x29e>
		}
		
		i=0;
    10e0:	10 92 a9 03 	sts	0x03A9, r1
    10e4:	10 92 a8 03 	sts	0x03A8, r1
		count=0;
    10e8:	10 92 c2 06 	sts	0x06C2, r1
	}
	
}
    10ec:	ff 91       	pop	r31
    10ee:	ef 91       	pop	r30
    10f0:	df 91       	pop	r29
    10f2:	cf 91       	pop	r28
    10f4:	bf 91       	pop	r27
    10f6:	af 91       	pop	r26
    10f8:	9f 91       	pop	r25
    10fa:	8f 91       	pop	r24
    10fc:	7f 91       	pop	r23
    10fe:	6f 91       	pop	r22
    1100:	5f 91       	pop	r21
    1102:	4f 91       	pop	r20
    1104:	3f 91       	pop	r19
    1106:	2f 91       	pop	r18
    1108:	1f 91       	pop	r17
    110a:	0f 91       	pop	r16
    110c:	0f 90       	pop	r0
    110e:	0f be       	out	0x3f, r0	; 63
    1110:	0f 90       	pop	r0
    1112:	1f 90       	pop	r1
    1114:	18 95       	reti

00001116 <main>:
#include "SIM900.h"
#include "lcd.h"


int main(void)
{
    1116:	cf 93       	push	r28
    1118:	df 93       	push	r29
    111a:	cd b7       	in	r28, 0x3d	; 61
    111c:	de b7       	in	r29, 0x3e	; 62
    111e:	64 97       	sbiw	r28, 0x14	; 20
    1120:	0f b6       	in	r0, 0x3f	; 63
    1122:	f8 94       	cli
    1124:	de bf       	out	0x3e, r29	; 62
    1126:	0f be       	out	0x3f, r0	; 63
    1128:	cd bf       	out	0x3d, r28	; 61
	
	DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) ;
    112a:	8c ef       	ldi	r24, 0xFC	; 252
    112c:	81 bb       	out	0x11, r24	; 17
	char buffer[20];
	int k;
	Lcd4_Init();
    112e:	0e 94 91 02 	call	0x522	; 0x522 <Lcd4_Init>
	UART_ON(9600,8);
    1132:	68 e0       	ldi	r22, 0x08	; 8
    1134:	80 e8       	ldi	r24, 0x80	; 128
    1136:	95 e2       	ldi	r25, 0x25	; 37
    1138:	0e 94 56 00 	call	0xac	; 0xac <UART_ON>
	Lcd4_Write_String("electroSome LCD Hello World");
	Lcd4_Clear();
	Lcd4_Write_Char('e');
	*/
	
	 Lcd4_Clear();
    113c:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	 Lcd4_Set_Cursor(1,5);
    1140:	65 e0       	ldi	r22, 0x05	; 5
    1142:	81 e0       	ldi	r24, 0x01	; 1
    1144:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	 Lcd4_Write_String("Welcome");
    1148:	80 e7       	ldi	r24, 0x70	; 112
    114a:	93 e0       	ldi	r25, 0x03	; 3
    114c:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
    1150:	2f e9       	ldi	r18, 0x9F	; 159
    1152:	86 e8       	ldi	r24, 0x86	; 134
    1154:	91 e0       	ldi	r25, 0x01	; 1
    1156:	21 50       	subi	r18, 0x01	; 1
    1158:	80 40       	sbci	r24, 0x00	; 0
    115a:	90 40       	sbci	r25, 0x00	; 0
    115c:	e1 f7       	brne	.-8      	; 0x1156 <main+0x40>
    115e:	00 c0       	rjmp	.+0      	; 0x1160 <main+0x4a>
    1160:	00 00       	nop
	 _delay_ms(500);
	 Lcd4_Set_Cursor(2,0);
    1162:	60 e0       	ldi	r22, 0x00	; 0
    1164:	82 e0       	ldi	r24, 0x02	; 2
    1166:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	 Lcd4_Write_String("Loading");
    116a:	88 e7       	ldi	r24, 0x78	; 120
    116c:	93 e0       	ldi	r25, 0x03	; 3
    116e:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
	 
	 for (k=0;k<101;k+=1)
    1172:	00 e0       	ldi	r16, 0x00	; 0
    1174:	10 e0       	ldi	r17, 0x00	; 0
	 {
		 Lcd4_Set_Cursor(2,12);
		 sprintf(buffer,"%d",k);
    1176:	0f 2e       	mov	r0, r31
    1178:	f3 ed       	ldi	r31, 0xD3	; 211
    117a:	cf 2e       	mov	r12, r31
    117c:	f2 e0       	ldi	r31, 0x02	; 2
    117e:	df 2e       	mov	r13, r31
    1180:	f0 2d       	mov	r31, r0
    1182:	ce 01       	movw	r24, r28
    1184:	01 96       	adiw	r24, 0x01	; 1
    1186:	7c 01       	movw	r14, r24
	 Lcd4_Set_Cursor(2,0);
	 Lcd4_Write_String("Loading");
	 
	 for (k=0;k<101;k+=1)
	 {
		 Lcd4_Set_Cursor(2,12);
    1188:	6c e0       	ldi	r22, 0x0C	; 12
    118a:	82 e0       	ldi	r24, 0x02	; 2
    118c:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
		 sprintf(buffer,"%d",k);
    1190:	1f 93       	push	r17
    1192:	0f 93       	push	r16
    1194:	df 92       	push	r13
    1196:	cf 92       	push	r12
    1198:	ff 92       	push	r15
    119a:	ef 92       	push	r14
    119c:	0e 94 c7 0a 	call	0x158e	; 0x158e <sprintf>
		 Lcd4_Write_String(buffer);
    11a0:	c7 01       	movw	r24, r14
    11a2:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
		 Lcd4_Set_Cursor(2,15);
    11a6:	6f e0       	ldi	r22, 0x0F	; 15
    11a8:	82 e0       	ldi	r24, 0x02	; 2
    11aa:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
		 Lcd4_Write_String("%");
    11ae:	80 e8       	ldi	r24, 0x80	; 128
    11b0:	93 e0       	ldi	r25, 0x03	; 3
    11b2:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
    11b6:	8f e4       	ldi	r24, 0x4F	; 79
    11b8:	93 ec       	ldi	r25, 0xC3	; 195
    11ba:	01 97       	sbiw	r24, 0x01	; 1
    11bc:	f1 f7       	brne	.-4      	; 0x11ba <main+0xa4>
    11be:	00 c0       	rjmp	.+0      	; 0x11c0 <main+0xaa>
    11c0:	00 00       	nop
	 Lcd4_Write_String("Welcome");
	 _delay_ms(500);
	 Lcd4_Set_Cursor(2,0);
	 Lcd4_Write_String("Loading");
	 
	 for (k=0;k<101;k+=1)
    11c2:	0f 5f       	subi	r16, 0xFF	; 255
    11c4:	1f 4f       	sbci	r17, 0xFF	; 255
    11c6:	0f 90       	pop	r0
    11c8:	0f 90       	pop	r0
    11ca:	0f 90       	pop	r0
    11cc:	0f 90       	pop	r0
    11ce:	0f 90       	pop	r0
    11d0:	0f 90       	pop	r0
    11d2:	05 36       	cpi	r16, 0x65	; 101
    11d4:	11 05       	cpc	r17, r1
    11d6:	c1 f6       	brne	.-80     	; 0x1188 <main+0x72>
    11d8:	9f eb       	ldi	r25, 0xBF	; 191
    11da:	27 e2       	ldi	r18, 0x27	; 39
    11dc:	89 e0       	ldi	r24, 0x09	; 9
    11de:	91 50       	subi	r25, 0x01	; 1
    11e0:	20 40       	sbci	r18, 0x00	; 0
    11e2:	80 40       	sbci	r24, 0x00	; 0
    11e4:	e1 f7       	brne	.-8      	; 0x11de <main+0xc8>
    11e6:	00 c0       	rjmp	.+0      	; 0x11e8 <main+0xd2>
    11e8:	00 00       	nop
		 Lcd4_Set_Cursor(2,15);
		 Lcd4_Write_String("%");
		 _delay_ms(200);
	 }
	 _delay_ms(3000);
	 Lcd4_Clear();
    11ea:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	
	
	DDRB  = 0xFF ;
    11ee:	8f ef       	ldi	r24, 0xFF	; 255
    11f0:	87 bb       	out	0x17, r24	; 23
	PORTB = 0xFF ;
    11f2:	88 bb       	out	0x18, r24	; 24
	
	
	// Prescaler = FCPU/1024
	TCCR0|=(1<<CS02)|(1<<CS00);
    11f4:	83 b7       	in	r24, 0x33	; 51
    11f6:	85 60       	ori	r24, 0x05	; 5
    11f8:	83 bf       	out	0x33, r24	; 51

	//Enable Overflow Interrupt Enable
	TIMSK|=(1<<TOIE0);
    11fa:	89 b7       	in	r24, 0x39	; 57
    11fc:	81 60       	ori	r24, 0x01	; 1
    11fe:	89 bf       	out	0x39, r24	; 57

	//Initialize Counter
	TCNT0=0;
    1200:	12 be       	out	0x32, r1	; 50
	
	ADMUX=ADC_VREF_TYPE & 0xff;
    1202:	80 e4       	ldi	r24, 0x40	; 64
    1204:	87 b9       	out	0x07, r24	; 7
	ADCSRA=0x83;
    1206:	83 e8       	ldi	r24, 0x83	; 131
    1208:	86 b9       	out	0x06, r24	; 6
	

	//---------------------Send Module ON Notification to Admin ------------------------------
	
	Lcd4_Set_Cursor(1,0);
    120a:	60 e0       	ldi	r22, 0x00	; 0
    120c:	81 e0       	ldi	r24, 0x01	; 1
    120e:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	Lcd4_Write_String("Module ON");
    1212:	82 e8       	ldi	r24, 0x82	; 130
    1214:	93 e0       	ldi	r25, 0x03	; 3
    1216:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
    121a:	9f e3       	ldi	r25, 0x3F	; 63
    121c:	2d e0       	ldi	r18, 0x0D	; 13
    121e:	83 e0       	ldi	r24, 0x03	; 3
    1220:	91 50       	subi	r25, 0x01	; 1
    1222:	20 40       	sbci	r18, 0x00	; 0
    1224:	80 40       	sbci	r24, 0x00	; 0
    1226:	e1 f7       	brne	.-8      	; 0x1220 <main+0x10a>
    1228:	00 c0       	rjmp	.+0      	; 0x122a <main+0x114>
    122a:	00 00       	nop
	_delay_ms(1000);
	Lcd4_Clear();
    122c:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	
	GSM_Send("09300093455","Hello Admin, Module is on .");
    1230:	6c e8       	ldi	r22, 0x8C	; 140
    1232:	73 e0       	ldi	r23, 0x03	; 3
    1234:	80 eb       	ldi	r24, 0xB0	; 176
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	0e 94 17 03 	call	0x62e	; 0x62e <GSM_Send>
	
	//	Dial_Number("+989300093455");
		
	//-----------------------------------------------------------------------------------------
	
	Lcd4_Clear();
    123c:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
    1240:	ff cf       	rjmp	.-2      	; 0x1240 <main+0x12a>

00001242 <__divsf3>:
    1242:	0c d0       	rcall	.+24     	; 0x125c <__divsf3x>
    1244:	e6 c0       	rjmp	.+460    	; 0x1412 <__fp_round>
    1246:	de d0       	rcall	.+444    	; 0x1404 <__fp_pscB>
    1248:	40 f0       	brcs	.+16     	; 0x125a <__divsf3+0x18>
    124a:	d5 d0       	rcall	.+426    	; 0x13f6 <__fp_pscA>
    124c:	30 f0       	brcs	.+12     	; 0x125a <__divsf3+0x18>
    124e:	21 f4       	brne	.+8      	; 0x1258 <__divsf3+0x16>
    1250:	5f 3f       	cpi	r21, 0xFF	; 255
    1252:	19 f0       	breq	.+6      	; 0x125a <__divsf3+0x18>
    1254:	c7 c0       	rjmp	.+398    	; 0x13e4 <__fp_inf>
    1256:	51 11       	cpse	r21, r1
    1258:	10 c1       	rjmp	.+544    	; 0x147a <__fp_szero>
    125a:	ca c0       	rjmp	.+404    	; 0x13f0 <__fp_nan>

0000125c <__divsf3x>:
    125c:	eb d0       	rcall	.+470    	; 0x1434 <__fp_split3>
    125e:	98 f3       	brcs	.-26     	; 0x1246 <__divsf3+0x4>

00001260 <__divsf3_pse>:
    1260:	99 23       	and	r25, r25
    1262:	c9 f3       	breq	.-14     	; 0x1256 <__divsf3+0x14>
    1264:	55 23       	and	r21, r21
    1266:	b1 f3       	breq	.-20     	; 0x1254 <__divsf3+0x12>
    1268:	95 1b       	sub	r25, r21
    126a:	55 0b       	sbc	r21, r21
    126c:	bb 27       	eor	r27, r27
    126e:	aa 27       	eor	r26, r26
    1270:	62 17       	cp	r22, r18
    1272:	73 07       	cpc	r23, r19
    1274:	84 07       	cpc	r24, r20
    1276:	38 f0       	brcs	.+14     	; 0x1286 <__divsf3_pse+0x26>
    1278:	9f 5f       	subi	r25, 0xFF	; 255
    127a:	5f 4f       	sbci	r21, 0xFF	; 255
    127c:	22 0f       	add	r18, r18
    127e:	33 1f       	adc	r19, r19
    1280:	44 1f       	adc	r20, r20
    1282:	aa 1f       	adc	r26, r26
    1284:	a9 f3       	breq	.-22     	; 0x1270 <__divsf3_pse+0x10>
    1286:	33 d0       	rcall	.+102    	; 0x12ee <__divsf3_pse+0x8e>
    1288:	0e 2e       	mov	r0, r30
    128a:	3a f0       	brmi	.+14     	; 0x129a <__divsf3_pse+0x3a>
    128c:	e0 e8       	ldi	r30, 0x80	; 128
    128e:	30 d0       	rcall	.+96     	; 0x12f0 <__divsf3_pse+0x90>
    1290:	91 50       	subi	r25, 0x01	; 1
    1292:	50 40       	sbci	r21, 0x00	; 0
    1294:	e6 95       	lsr	r30
    1296:	00 1c       	adc	r0, r0
    1298:	ca f7       	brpl	.-14     	; 0x128c <__divsf3_pse+0x2c>
    129a:	29 d0       	rcall	.+82     	; 0x12ee <__divsf3_pse+0x8e>
    129c:	fe 2f       	mov	r31, r30
    129e:	27 d0       	rcall	.+78     	; 0x12ee <__divsf3_pse+0x8e>
    12a0:	66 0f       	add	r22, r22
    12a2:	77 1f       	adc	r23, r23
    12a4:	88 1f       	adc	r24, r24
    12a6:	bb 1f       	adc	r27, r27
    12a8:	26 17       	cp	r18, r22
    12aa:	37 07       	cpc	r19, r23
    12ac:	48 07       	cpc	r20, r24
    12ae:	ab 07       	cpc	r26, r27
    12b0:	b0 e8       	ldi	r27, 0x80	; 128
    12b2:	09 f0       	breq	.+2      	; 0x12b6 <__divsf3_pse+0x56>
    12b4:	bb 0b       	sbc	r27, r27
    12b6:	80 2d       	mov	r24, r0
    12b8:	bf 01       	movw	r22, r30
    12ba:	ff 27       	eor	r31, r31
    12bc:	93 58       	subi	r25, 0x83	; 131
    12be:	5f 4f       	sbci	r21, 0xFF	; 255
    12c0:	2a f0       	brmi	.+10     	; 0x12cc <__divsf3_pse+0x6c>
    12c2:	9e 3f       	cpi	r25, 0xFE	; 254
    12c4:	51 05       	cpc	r21, r1
    12c6:	68 f0       	brcs	.+26     	; 0x12e2 <__divsf3_pse+0x82>
    12c8:	8d c0       	rjmp	.+282    	; 0x13e4 <__fp_inf>
    12ca:	d7 c0       	rjmp	.+430    	; 0x147a <__fp_szero>
    12cc:	5f 3f       	cpi	r21, 0xFF	; 255
    12ce:	ec f3       	brlt	.-6      	; 0x12ca <__divsf3_pse+0x6a>
    12d0:	98 3e       	cpi	r25, 0xE8	; 232
    12d2:	dc f3       	brlt	.-10     	; 0x12ca <__divsf3_pse+0x6a>
    12d4:	86 95       	lsr	r24
    12d6:	77 95       	ror	r23
    12d8:	67 95       	ror	r22
    12da:	b7 95       	ror	r27
    12dc:	f7 95       	ror	r31
    12de:	9f 5f       	subi	r25, 0xFF	; 255
    12e0:	c9 f7       	brne	.-14     	; 0x12d4 <__divsf3_pse+0x74>
    12e2:	88 0f       	add	r24, r24
    12e4:	91 1d       	adc	r25, r1
    12e6:	96 95       	lsr	r25
    12e8:	87 95       	ror	r24
    12ea:	97 f9       	bld	r25, 7
    12ec:	08 95       	ret
    12ee:	e1 e0       	ldi	r30, 0x01	; 1
    12f0:	66 0f       	add	r22, r22
    12f2:	77 1f       	adc	r23, r23
    12f4:	88 1f       	adc	r24, r24
    12f6:	bb 1f       	adc	r27, r27
    12f8:	62 17       	cp	r22, r18
    12fa:	73 07       	cpc	r23, r19
    12fc:	84 07       	cpc	r24, r20
    12fe:	ba 07       	cpc	r27, r26
    1300:	20 f0       	brcs	.+8      	; 0x130a <__divsf3_pse+0xaa>
    1302:	62 1b       	sub	r22, r18
    1304:	73 0b       	sbc	r23, r19
    1306:	84 0b       	sbc	r24, r20
    1308:	ba 0b       	sbc	r27, r26
    130a:	ee 1f       	adc	r30, r30
    130c:	88 f7       	brcc	.-30     	; 0x12f0 <__divsf3_pse+0x90>
    130e:	e0 95       	com	r30
    1310:	08 95       	ret

00001312 <__fixunssfsi>:
    1312:	98 d0       	rcall	.+304    	; 0x1444 <__fp_splitA>
    1314:	88 f0       	brcs	.+34     	; 0x1338 <__fixunssfsi+0x26>
    1316:	9f 57       	subi	r25, 0x7F	; 127
    1318:	90 f0       	brcs	.+36     	; 0x133e <__fixunssfsi+0x2c>
    131a:	b9 2f       	mov	r27, r25
    131c:	99 27       	eor	r25, r25
    131e:	b7 51       	subi	r27, 0x17	; 23
    1320:	a0 f0       	brcs	.+40     	; 0x134a <__fixunssfsi+0x38>
    1322:	d1 f0       	breq	.+52     	; 0x1358 <__fixunssfsi+0x46>
    1324:	66 0f       	add	r22, r22
    1326:	77 1f       	adc	r23, r23
    1328:	88 1f       	adc	r24, r24
    132a:	99 1f       	adc	r25, r25
    132c:	1a f0       	brmi	.+6      	; 0x1334 <__fixunssfsi+0x22>
    132e:	ba 95       	dec	r27
    1330:	c9 f7       	brne	.-14     	; 0x1324 <__fixunssfsi+0x12>
    1332:	12 c0       	rjmp	.+36     	; 0x1358 <__fixunssfsi+0x46>
    1334:	b1 30       	cpi	r27, 0x01	; 1
    1336:	81 f0       	breq	.+32     	; 0x1358 <__fixunssfsi+0x46>
    1338:	9f d0       	rcall	.+318    	; 0x1478 <__fp_zero>
    133a:	b1 e0       	ldi	r27, 0x01	; 1
    133c:	08 95       	ret
    133e:	9c c0       	rjmp	.+312    	; 0x1478 <__fp_zero>
    1340:	67 2f       	mov	r22, r23
    1342:	78 2f       	mov	r23, r24
    1344:	88 27       	eor	r24, r24
    1346:	b8 5f       	subi	r27, 0xF8	; 248
    1348:	39 f0       	breq	.+14     	; 0x1358 <__fixunssfsi+0x46>
    134a:	b9 3f       	cpi	r27, 0xF9	; 249
    134c:	cc f3       	brlt	.-14     	; 0x1340 <__fixunssfsi+0x2e>
    134e:	86 95       	lsr	r24
    1350:	77 95       	ror	r23
    1352:	67 95       	ror	r22
    1354:	b3 95       	inc	r27
    1356:	d9 f7       	brne	.-10     	; 0x134e <__fixunssfsi+0x3c>
    1358:	3e f4       	brtc	.+14     	; 0x1368 <__fixunssfsi+0x56>
    135a:	90 95       	com	r25
    135c:	80 95       	com	r24
    135e:	70 95       	com	r23
    1360:	61 95       	neg	r22
    1362:	7f 4f       	sbci	r23, 0xFF	; 255
    1364:	8f 4f       	sbci	r24, 0xFF	; 255
    1366:	9f 4f       	sbci	r25, 0xFF	; 255
    1368:	08 95       	ret

0000136a <__floatunsisf>:
    136a:	e8 94       	clt
    136c:	09 c0       	rjmp	.+18     	; 0x1380 <__floatsisf+0x12>

0000136e <__floatsisf>:
    136e:	97 fb       	bst	r25, 7
    1370:	3e f4       	brtc	.+14     	; 0x1380 <__floatsisf+0x12>
    1372:	90 95       	com	r25
    1374:	80 95       	com	r24
    1376:	70 95       	com	r23
    1378:	61 95       	neg	r22
    137a:	7f 4f       	sbci	r23, 0xFF	; 255
    137c:	8f 4f       	sbci	r24, 0xFF	; 255
    137e:	9f 4f       	sbci	r25, 0xFF	; 255
    1380:	99 23       	and	r25, r25
    1382:	a9 f0       	breq	.+42     	; 0x13ae <__floatsisf+0x40>
    1384:	f9 2f       	mov	r31, r25
    1386:	96 e9       	ldi	r25, 0x96	; 150
    1388:	bb 27       	eor	r27, r27
    138a:	93 95       	inc	r25
    138c:	f6 95       	lsr	r31
    138e:	87 95       	ror	r24
    1390:	77 95       	ror	r23
    1392:	67 95       	ror	r22
    1394:	b7 95       	ror	r27
    1396:	f1 11       	cpse	r31, r1
    1398:	f8 cf       	rjmp	.-16     	; 0x138a <__floatsisf+0x1c>
    139a:	fa f4       	brpl	.+62     	; 0x13da <__floatsisf+0x6c>
    139c:	bb 0f       	add	r27, r27
    139e:	11 f4       	brne	.+4      	; 0x13a4 <__floatsisf+0x36>
    13a0:	60 ff       	sbrs	r22, 0
    13a2:	1b c0       	rjmp	.+54     	; 0x13da <__floatsisf+0x6c>
    13a4:	6f 5f       	subi	r22, 0xFF	; 255
    13a6:	7f 4f       	sbci	r23, 0xFF	; 255
    13a8:	8f 4f       	sbci	r24, 0xFF	; 255
    13aa:	9f 4f       	sbci	r25, 0xFF	; 255
    13ac:	16 c0       	rjmp	.+44     	; 0x13da <__floatsisf+0x6c>
    13ae:	88 23       	and	r24, r24
    13b0:	11 f0       	breq	.+4      	; 0x13b6 <__floatsisf+0x48>
    13b2:	96 e9       	ldi	r25, 0x96	; 150
    13b4:	11 c0       	rjmp	.+34     	; 0x13d8 <__floatsisf+0x6a>
    13b6:	77 23       	and	r23, r23
    13b8:	21 f0       	breq	.+8      	; 0x13c2 <__floatsisf+0x54>
    13ba:	9e e8       	ldi	r25, 0x8E	; 142
    13bc:	87 2f       	mov	r24, r23
    13be:	76 2f       	mov	r23, r22
    13c0:	05 c0       	rjmp	.+10     	; 0x13cc <__floatsisf+0x5e>
    13c2:	66 23       	and	r22, r22
    13c4:	71 f0       	breq	.+28     	; 0x13e2 <__floatsisf+0x74>
    13c6:	96 e8       	ldi	r25, 0x86	; 134
    13c8:	86 2f       	mov	r24, r22
    13ca:	70 e0       	ldi	r23, 0x00	; 0
    13cc:	60 e0       	ldi	r22, 0x00	; 0
    13ce:	2a f0       	brmi	.+10     	; 0x13da <__floatsisf+0x6c>
    13d0:	9a 95       	dec	r25
    13d2:	66 0f       	add	r22, r22
    13d4:	77 1f       	adc	r23, r23
    13d6:	88 1f       	adc	r24, r24
    13d8:	da f7       	brpl	.-10     	; 0x13d0 <__floatsisf+0x62>
    13da:	88 0f       	add	r24, r24
    13dc:	96 95       	lsr	r25
    13de:	87 95       	ror	r24
    13e0:	97 f9       	bld	r25, 7
    13e2:	08 95       	ret

000013e4 <__fp_inf>:
    13e4:	97 f9       	bld	r25, 7
    13e6:	9f 67       	ori	r25, 0x7F	; 127
    13e8:	80 e8       	ldi	r24, 0x80	; 128
    13ea:	70 e0       	ldi	r23, 0x00	; 0
    13ec:	60 e0       	ldi	r22, 0x00	; 0
    13ee:	08 95       	ret

000013f0 <__fp_nan>:
    13f0:	9f ef       	ldi	r25, 0xFF	; 255
    13f2:	80 ec       	ldi	r24, 0xC0	; 192
    13f4:	08 95       	ret

000013f6 <__fp_pscA>:
    13f6:	00 24       	eor	r0, r0
    13f8:	0a 94       	dec	r0
    13fa:	16 16       	cp	r1, r22
    13fc:	17 06       	cpc	r1, r23
    13fe:	18 06       	cpc	r1, r24
    1400:	09 06       	cpc	r0, r25
    1402:	08 95       	ret

00001404 <__fp_pscB>:
    1404:	00 24       	eor	r0, r0
    1406:	0a 94       	dec	r0
    1408:	12 16       	cp	r1, r18
    140a:	13 06       	cpc	r1, r19
    140c:	14 06       	cpc	r1, r20
    140e:	05 06       	cpc	r0, r21
    1410:	08 95       	ret

00001412 <__fp_round>:
    1412:	09 2e       	mov	r0, r25
    1414:	03 94       	inc	r0
    1416:	00 0c       	add	r0, r0
    1418:	11 f4       	brne	.+4      	; 0x141e <__fp_round+0xc>
    141a:	88 23       	and	r24, r24
    141c:	52 f0       	brmi	.+20     	; 0x1432 <__fp_round+0x20>
    141e:	bb 0f       	add	r27, r27
    1420:	40 f4       	brcc	.+16     	; 0x1432 <__fp_round+0x20>
    1422:	bf 2b       	or	r27, r31
    1424:	11 f4       	brne	.+4      	; 0x142a <__fp_round+0x18>
    1426:	60 ff       	sbrs	r22, 0
    1428:	04 c0       	rjmp	.+8      	; 0x1432 <__fp_round+0x20>
    142a:	6f 5f       	subi	r22, 0xFF	; 255
    142c:	7f 4f       	sbci	r23, 0xFF	; 255
    142e:	8f 4f       	sbci	r24, 0xFF	; 255
    1430:	9f 4f       	sbci	r25, 0xFF	; 255
    1432:	08 95       	ret

00001434 <__fp_split3>:
    1434:	57 fd       	sbrc	r21, 7
    1436:	90 58       	subi	r25, 0x80	; 128
    1438:	44 0f       	add	r20, r20
    143a:	55 1f       	adc	r21, r21
    143c:	59 f0       	breq	.+22     	; 0x1454 <__fp_splitA+0x10>
    143e:	5f 3f       	cpi	r21, 0xFF	; 255
    1440:	71 f0       	breq	.+28     	; 0x145e <__fp_splitA+0x1a>
    1442:	47 95       	ror	r20

00001444 <__fp_splitA>:
    1444:	88 0f       	add	r24, r24
    1446:	97 fb       	bst	r25, 7
    1448:	99 1f       	adc	r25, r25
    144a:	61 f0       	breq	.+24     	; 0x1464 <__fp_splitA+0x20>
    144c:	9f 3f       	cpi	r25, 0xFF	; 255
    144e:	79 f0       	breq	.+30     	; 0x146e <__fp_splitA+0x2a>
    1450:	87 95       	ror	r24
    1452:	08 95       	ret
    1454:	12 16       	cp	r1, r18
    1456:	13 06       	cpc	r1, r19
    1458:	14 06       	cpc	r1, r20
    145a:	55 1f       	adc	r21, r21
    145c:	f2 cf       	rjmp	.-28     	; 0x1442 <__fp_split3+0xe>
    145e:	46 95       	lsr	r20
    1460:	f1 df       	rcall	.-30     	; 0x1444 <__fp_splitA>
    1462:	08 c0       	rjmp	.+16     	; 0x1474 <__fp_splitA+0x30>
    1464:	16 16       	cp	r1, r22
    1466:	17 06       	cpc	r1, r23
    1468:	18 06       	cpc	r1, r24
    146a:	99 1f       	adc	r25, r25
    146c:	f1 cf       	rjmp	.-30     	; 0x1450 <__fp_splitA+0xc>
    146e:	86 95       	lsr	r24
    1470:	71 05       	cpc	r23, r1
    1472:	61 05       	cpc	r22, r1
    1474:	08 94       	sec
    1476:	08 95       	ret

00001478 <__fp_zero>:
    1478:	e8 94       	clt

0000147a <__fp_szero>:
    147a:	bb 27       	eor	r27, r27
    147c:	66 27       	eor	r22, r22
    147e:	77 27       	eor	r23, r23
    1480:	cb 01       	movw	r24, r22
    1482:	97 f9       	bld	r25, 7
    1484:	08 95       	ret

00001486 <__mulsf3>:
    1486:	0b d0       	rcall	.+22     	; 0x149e <__mulsf3x>
    1488:	c4 cf       	rjmp	.-120    	; 0x1412 <__fp_round>
    148a:	b5 df       	rcall	.-150    	; 0x13f6 <__fp_pscA>
    148c:	28 f0       	brcs	.+10     	; 0x1498 <__mulsf3+0x12>
    148e:	ba df       	rcall	.-140    	; 0x1404 <__fp_pscB>
    1490:	18 f0       	brcs	.+6      	; 0x1498 <__mulsf3+0x12>
    1492:	95 23       	and	r25, r21
    1494:	09 f0       	breq	.+2      	; 0x1498 <__mulsf3+0x12>
    1496:	a6 cf       	rjmp	.-180    	; 0x13e4 <__fp_inf>
    1498:	ab cf       	rjmp	.-170    	; 0x13f0 <__fp_nan>
    149a:	11 24       	eor	r1, r1
    149c:	ee cf       	rjmp	.-36     	; 0x147a <__fp_szero>

0000149e <__mulsf3x>:
    149e:	ca df       	rcall	.-108    	; 0x1434 <__fp_split3>
    14a0:	a0 f3       	brcs	.-24     	; 0x148a <__mulsf3+0x4>

000014a2 <__mulsf3_pse>:
    14a2:	95 9f       	mul	r25, r21
    14a4:	d1 f3       	breq	.-12     	; 0x149a <__mulsf3+0x14>
    14a6:	95 0f       	add	r25, r21
    14a8:	50 e0       	ldi	r21, 0x00	; 0
    14aa:	55 1f       	adc	r21, r21
    14ac:	62 9f       	mul	r22, r18
    14ae:	f0 01       	movw	r30, r0
    14b0:	72 9f       	mul	r23, r18
    14b2:	bb 27       	eor	r27, r27
    14b4:	f0 0d       	add	r31, r0
    14b6:	b1 1d       	adc	r27, r1
    14b8:	63 9f       	mul	r22, r19
    14ba:	aa 27       	eor	r26, r26
    14bc:	f0 0d       	add	r31, r0
    14be:	b1 1d       	adc	r27, r1
    14c0:	aa 1f       	adc	r26, r26
    14c2:	64 9f       	mul	r22, r20
    14c4:	66 27       	eor	r22, r22
    14c6:	b0 0d       	add	r27, r0
    14c8:	a1 1d       	adc	r26, r1
    14ca:	66 1f       	adc	r22, r22
    14cc:	82 9f       	mul	r24, r18
    14ce:	22 27       	eor	r18, r18
    14d0:	b0 0d       	add	r27, r0
    14d2:	a1 1d       	adc	r26, r1
    14d4:	62 1f       	adc	r22, r18
    14d6:	73 9f       	mul	r23, r19
    14d8:	b0 0d       	add	r27, r0
    14da:	a1 1d       	adc	r26, r1
    14dc:	62 1f       	adc	r22, r18
    14de:	83 9f       	mul	r24, r19
    14e0:	a0 0d       	add	r26, r0
    14e2:	61 1d       	adc	r22, r1
    14e4:	22 1f       	adc	r18, r18
    14e6:	74 9f       	mul	r23, r20
    14e8:	33 27       	eor	r19, r19
    14ea:	a0 0d       	add	r26, r0
    14ec:	61 1d       	adc	r22, r1
    14ee:	23 1f       	adc	r18, r19
    14f0:	84 9f       	mul	r24, r20
    14f2:	60 0d       	add	r22, r0
    14f4:	21 1d       	adc	r18, r1
    14f6:	82 2f       	mov	r24, r18
    14f8:	76 2f       	mov	r23, r22
    14fa:	6a 2f       	mov	r22, r26
    14fc:	11 24       	eor	r1, r1
    14fe:	9f 57       	subi	r25, 0x7F	; 127
    1500:	50 40       	sbci	r21, 0x00	; 0
    1502:	8a f0       	brmi	.+34     	; 0x1526 <__mulsf3_pse+0x84>
    1504:	e1 f0       	breq	.+56     	; 0x153e <__mulsf3_pse+0x9c>
    1506:	88 23       	and	r24, r24
    1508:	4a f0       	brmi	.+18     	; 0x151c <__mulsf3_pse+0x7a>
    150a:	ee 0f       	add	r30, r30
    150c:	ff 1f       	adc	r31, r31
    150e:	bb 1f       	adc	r27, r27
    1510:	66 1f       	adc	r22, r22
    1512:	77 1f       	adc	r23, r23
    1514:	88 1f       	adc	r24, r24
    1516:	91 50       	subi	r25, 0x01	; 1
    1518:	50 40       	sbci	r21, 0x00	; 0
    151a:	a9 f7       	brne	.-22     	; 0x1506 <__mulsf3_pse+0x64>
    151c:	9e 3f       	cpi	r25, 0xFE	; 254
    151e:	51 05       	cpc	r21, r1
    1520:	70 f0       	brcs	.+28     	; 0x153e <__mulsf3_pse+0x9c>
    1522:	60 cf       	rjmp	.-320    	; 0x13e4 <__fp_inf>
    1524:	aa cf       	rjmp	.-172    	; 0x147a <__fp_szero>
    1526:	5f 3f       	cpi	r21, 0xFF	; 255
    1528:	ec f3       	brlt	.-6      	; 0x1524 <__mulsf3_pse+0x82>
    152a:	98 3e       	cpi	r25, 0xE8	; 232
    152c:	dc f3       	brlt	.-10     	; 0x1524 <__mulsf3_pse+0x82>
    152e:	86 95       	lsr	r24
    1530:	77 95       	ror	r23
    1532:	67 95       	ror	r22
    1534:	b7 95       	ror	r27
    1536:	f7 95       	ror	r31
    1538:	e7 95       	ror	r30
    153a:	9f 5f       	subi	r25, 0xFF	; 255
    153c:	c1 f7       	brne	.-16     	; 0x152e <__mulsf3_pse+0x8c>
    153e:	fe 2b       	or	r31, r30
    1540:	88 0f       	add	r24, r24
    1542:	91 1d       	adc	r25, r1
    1544:	96 95       	lsr	r25
    1546:	87 95       	ror	r24
    1548:	97 f9       	bld	r25, 7
    154a:	08 95       	ret

0000154c <strcpy>:
    154c:	fb 01       	movw	r30, r22
    154e:	dc 01       	movw	r26, r24
    1550:	01 90       	ld	r0, Z+
    1552:	0d 92       	st	X+, r0
    1554:	00 20       	and	r0, r0
    1556:	e1 f7       	brne	.-8      	; 0x1550 <strcpy+0x4>
    1558:	08 95       	ret

0000155a <strstr>:
    155a:	fb 01       	movw	r30, r22
    155c:	51 91       	ld	r21, Z+
    155e:	55 23       	and	r21, r21
    1560:	a9 f0       	breq	.+42     	; 0x158c <strstr+0x32>
    1562:	bf 01       	movw	r22, r30
    1564:	dc 01       	movw	r26, r24
    1566:	4d 91       	ld	r20, X+
    1568:	45 17       	cp	r20, r21
    156a:	41 11       	cpse	r20, r1
    156c:	e1 f7       	brne	.-8      	; 0x1566 <strstr+0xc>
    156e:	59 f4       	brne	.+22     	; 0x1586 <strstr+0x2c>
    1570:	cd 01       	movw	r24, r26
    1572:	01 90       	ld	r0, Z+
    1574:	00 20       	and	r0, r0
    1576:	49 f0       	breq	.+18     	; 0x158a <strstr+0x30>
    1578:	4d 91       	ld	r20, X+
    157a:	40 15       	cp	r20, r0
    157c:	41 11       	cpse	r20, r1
    157e:	c9 f3       	breq	.-14     	; 0x1572 <strstr+0x18>
    1580:	fb 01       	movw	r30, r22
    1582:	41 11       	cpse	r20, r1
    1584:	ef cf       	rjmp	.-34     	; 0x1564 <strstr+0xa>
    1586:	81 e0       	ldi	r24, 0x01	; 1
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	01 97       	sbiw	r24, 0x01	; 1
    158c:	08 95       	ret

0000158e <sprintf>:
    158e:	ae e0       	ldi	r26, 0x0E	; 14
    1590:	b0 e0       	ldi	r27, 0x00	; 0
    1592:	ed ec       	ldi	r30, 0xCD	; 205
    1594:	fa e0       	ldi	r31, 0x0A	; 10
    1596:	0c 94 6f 0d 	jmp	0x1ade	; 0x1ade <__prologue_saves__+0x1c>
    159a:	0d 89       	ldd	r16, Y+21	; 0x15
    159c:	1e 89       	ldd	r17, Y+22	; 0x16
    159e:	86 e0       	ldi	r24, 0x06	; 6
    15a0:	8c 83       	std	Y+4, r24	; 0x04
    15a2:	1a 83       	std	Y+2, r17	; 0x02
    15a4:	09 83       	std	Y+1, r16	; 0x01
    15a6:	8f ef       	ldi	r24, 0xFF	; 255
    15a8:	9f e7       	ldi	r25, 0x7F	; 127
    15aa:	9e 83       	std	Y+6, r25	; 0x06
    15ac:	8d 83       	std	Y+5, r24	; 0x05
    15ae:	ae 01       	movw	r20, r28
    15b0:	47 5e       	subi	r20, 0xE7	; 231
    15b2:	5f 4f       	sbci	r21, 0xFF	; 255
    15b4:	6f 89       	ldd	r22, Y+23	; 0x17
    15b6:	78 8d       	ldd	r23, Y+24	; 0x18
    15b8:	ce 01       	movw	r24, r28
    15ba:	01 96       	adiw	r24, 0x01	; 1
    15bc:	0e 94 e9 0a 	call	0x15d2	; 0x15d2 <vfprintf>
    15c0:	ef 81       	ldd	r30, Y+7	; 0x07
    15c2:	f8 85       	ldd	r31, Y+8	; 0x08
    15c4:	e0 0f       	add	r30, r16
    15c6:	f1 1f       	adc	r31, r17
    15c8:	10 82       	st	Z, r1
    15ca:	2e 96       	adiw	r28, 0x0e	; 14
    15cc:	e4 e0       	ldi	r30, 0x04	; 4
    15ce:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__epilogue_restores__+0x1c>

000015d2 <vfprintf>:
    15d2:	ac e0       	ldi	r26, 0x0C	; 12
    15d4:	b0 e0       	ldi	r27, 0x00	; 0
    15d6:	ef ee       	ldi	r30, 0xEF	; 239
    15d8:	fa e0       	ldi	r31, 0x0A	; 10
    15da:	0c 94 61 0d 	jmp	0x1ac2	; 0x1ac2 <__prologue_saves__>
    15de:	7c 01       	movw	r14, r24
    15e0:	6b 01       	movw	r12, r22
    15e2:	8a 01       	movw	r16, r20
    15e4:	fc 01       	movw	r30, r24
    15e6:	17 82       	std	Z+7, r1	; 0x07
    15e8:	16 82       	std	Z+6, r1	; 0x06
    15ea:	83 81       	ldd	r24, Z+3	; 0x03
    15ec:	81 ff       	sbrs	r24, 1
    15ee:	bd c1       	rjmp	.+890    	; 0x196a <vfprintf+0x398>
    15f0:	ce 01       	movw	r24, r28
    15f2:	01 96       	adiw	r24, 0x01	; 1
    15f4:	4c 01       	movw	r8, r24
    15f6:	f7 01       	movw	r30, r14
    15f8:	93 81       	ldd	r25, Z+3	; 0x03
    15fa:	f6 01       	movw	r30, r12
    15fc:	93 fd       	sbrc	r25, 3
    15fe:	85 91       	lpm	r24, Z+
    1600:	93 ff       	sbrs	r25, 3
    1602:	81 91       	ld	r24, Z+
    1604:	6f 01       	movw	r12, r30
    1606:	88 23       	and	r24, r24
    1608:	09 f4       	brne	.+2      	; 0x160c <vfprintf+0x3a>
    160a:	ab c1       	rjmp	.+854    	; 0x1962 <vfprintf+0x390>
    160c:	85 32       	cpi	r24, 0x25	; 37
    160e:	39 f4       	brne	.+14     	; 0x161e <vfprintf+0x4c>
    1610:	93 fd       	sbrc	r25, 3
    1612:	85 91       	lpm	r24, Z+
    1614:	93 ff       	sbrs	r25, 3
    1616:	81 91       	ld	r24, Z+
    1618:	6f 01       	movw	r12, r30
    161a:	85 32       	cpi	r24, 0x25	; 37
    161c:	29 f4       	brne	.+10     	; 0x1628 <vfprintf+0x56>
    161e:	b7 01       	movw	r22, r14
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <fputc>
    1626:	e7 cf       	rjmp	.-50     	; 0x15f6 <vfprintf+0x24>
    1628:	51 2c       	mov	r5, r1
    162a:	31 2c       	mov	r3, r1
    162c:	20 e0       	ldi	r18, 0x00	; 0
    162e:	20 32       	cpi	r18, 0x20	; 32
    1630:	a0 f4       	brcc	.+40     	; 0x165a <vfprintf+0x88>
    1632:	8b 32       	cpi	r24, 0x2B	; 43
    1634:	69 f0       	breq	.+26     	; 0x1650 <vfprintf+0x7e>
    1636:	30 f4       	brcc	.+12     	; 0x1644 <vfprintf+0x72>
    1638:	80 32       	cpi	r24, 0x20	; 32
    163a:	59 f0       	breq	.+22     	; 0x1652 <vfprintf+0x80>
    163c:	83 32       	cpi	r24, 0x23	; 35
    163e:	69 f4       	brne	.+26     	; 0x165a <vfprintf+0x88>
    1640:	20 61       	ori	r18, 0x10	; 16
    1642:	2c c0       	rjmp	.+88     	; 0x169c <vfprintf+0xca>
    1644:	8d 32       	cpi	r24, 0x2D	; 45
    1646:	39 f0       	breq	.+14     	; 0x1656 <vfprintf+0x84>
    1648:	80 33       	cpi	r24, 0x30	; 48
    164a:	39 f4       	brne	.+14     	; 0x165a <vfprintf+0x88>
    164c:	21 60       	ori	r18, 0x01	; 1
    164e:	26 c0       	rjmp	.+76     	; 0x169c <vfprintf+0xca>
    1650:	22 60       	ori	r18, 0x02	; 2
    1652:	24 60       	ori	r18, 0x04	; 4
    1654:	23 c0       	rjmp	.+70     	; 0x169c <vfprintf+0xca>
    1656:	28 60       	ori	r18, 0x08	; 8
    1658:	21 c0       	rjmp	.+66     	; 0x169c <vfprintf+0xca>
    165a:	27 fd       	sbrc	r18, 7
    165c:	27 c0       	rjmp	.+78     	; 0x16ac <vfprintf+0xda>
    165e:	30 ed       	ldi	r19, 0xD0	; 208
    1660:	38 0f       	add	r19, r24
    1662:	3a 30       	cpi	r19, 0x0A	; 10
    1664:	78 f4       	brcc	.+30     	; 0x1684 <vfprintf+0xb2>
    1666:	26 ff       	sbrs	r18, 6
    1668:	06 c0       	rjmp	.+12     	; 0x1676 <vfprintf+0xa4>
    166a:	fa e0       	ldi	r31, 0x0A	; 10
    166c:	5f 9e       	mul	r5, r31
    166e:	30 0d       	add	r19, r0
    1670:	11 24       	eor	r1, r1
    1672:	53 2e       	mov	r5, r19
    1674:	13 c0       	rjmp	.+38     	; 0x169c <vfprintf+0xca>
    1676:	8a e0       	ldi	r24, 0x0A	; 10
    1678:	38 9e       	mul	r3, r24
    167a:	30 0d       	add	r19, r0
    167c:	11 24       	eor	r1, r1
    167e:	33 2e       	mov	r3, r19
    1680:	20 62       	ori	r18, 0x20	; 32
    1682:	0c c0       	rjmp	.+24     	; 0x169c <vfprintf+0xca>
    1684:	8e 32       	cpi	r24, 0x2E	; 46
    1686:	21 f4       	brne	.+8      	; 0x1690 <vfprintf+0xbe>
    1688:	26 fd       	sbrc	r18, 6
    168a:	6b c1       	rjmp	.+726    	; 0x1962 <vfprintf+0x390>
    168c:	20 64       	ori	r18, 0x40	; 64
    168e:	06 c0       	rjmp	.+12     	; 0x169c <vfprintf+0xca>
    1690:	8c 36       	cpi	r24, 0x6C	; 108
    1692:	11 f4       	brne	.+4      	; 0x1698 <vfprintf+0xc6>
    1694:	20 68       	ori	r18, 0x80	; 128
    1696:	02 c0       	rjmp	.+4      	; 0x169c <vfprintf+0xca>
    1698:	88 36       	cpi	r24, 0x68	; 104
    169a:	41 f4       	brne	.+16     	; 0x16ac <vfprintf+0xda>
    169c:	f6 01       	movw	r30, r12
    169e:	93 fd       	sbrc	r25, 3
    16a0:	85 91       	lpm	r24, Z+
    16a2:	93 ff       	sbrs	r25, 3
    16a4:	81 91       	ld	r24, Z+
    16a6:	6f 01       	movw	r12, r30
    16a8:	81 11       	cpse	r24, r1
    16aa:	c1 cf       	rjmp	.-126    	; 0x162e <vfprintf+0x5c>
    16ac:	98 2f       	mov	r25, r24
    16ae:	9f 7d       	andi	r25, 0xDF	; 223
    16b0:	95 54       	subi	r25, 0x45	; 69
    16b2:	93 30       	cpi	r25, 0x03	; 3
    16b4:	28 f4       	brcc	.+10     	; 0x16c0 <vfprintf+0xee>
    16b6:	0c 5f       	subi	r16, 0xFC	; 252
    16b8:	1f 4f       	sbci	r17, 0xFF	; 255
    16ba:	ff e3       	ldi	r31, 0x3F	; 63
    16bc:	f9 83       	std	Y+1, r31	; 0x01
    16be:	0d c0       	rjmp	.+26     	; 0x16da <vfprintf+0x108>
    16c0:	83 36       	cpi	r24, 0x63	; 99
    16c2:	31 f0       	breq	.+12     	; 0x16d0 <vfprintf+0xfe>
    16c4:	83 37       	cpi	r24, 0x73	; 115
    16c6:	71 f0       	breq	.+28     	; 0x16e4 <vfprintf+0x112>
    16c8:	83 35       	cpi	r24, 0x53	; 83
    16ca:	09 f0       	breq	.+2      	; 0x16ce <vfprintf+0xfc>
    16cc:	5b c0       	rjmp	.+182    	; 0x1784 <vfprintf+0x1b2>
    16ce:	22 c0       	rjmp	.+68     	; 0x1714 <vfprintf+0x142>
    16d0:	f8 01       	movw	r30, r16
    16d2:	80 81       	ld	r24, Z
    16d4:	89 83       	std	Y+1, r24	; 0x01
    16d6:	0e 5f       	subi	r16, 0xFE	; 254
    16d8:	1f 4f       	sbci	r17, 0xFF	; 255
    16da:	44 24       	eor	r4, r4
    16dc:	43 94       	inc	r4
    16de:	51 2c       	mov	r5, r1
    16e0:	54 01       	movw	r10, r8
    16e2:	15 c0       	rjmp	.+42     	; 0x170e <vfprintf+0x13c>
    16e4:	38 01       	movw	r6, r16
    16e6:	f2 e0       	ldi	r31, 0x02	; 2
    16e8:	6f 0e       	add	r6, r31
    16ea:	71 1c       	adc	r7, r1
    16ec:	f8 01       	movw	r30, r16
    16ee:	a0 80       	ld	r10, Z
    16f0:	b1 80       	ldd	r11, Z+1	; 0x01
    16f2:	26 ff       	sbrs	r18, 6
    16f4:	03 c0       	rjmp	.+6      	; 0x16fc <vfprintf+0x12a>
    16f6:	65 2d       	mov	r22, r5
    16f8:	70 e0       	ldi	r23, 0x00	; 0
    16fa:	02 c0       	rjmp	.+4      	; 0x1700 <vfprintf+0x12e>
    16fc:	6f ef       	ldi	r22, 0xFF	; 255
    16fe:	7f ef       	ldi	r23, 0xFF	; 255
    1700:	c5 01       	movw	r24, r10
    1702:	2c 87       	std	Y+12, r18	; 0x0c
    1704:	0e 94 c6 0c 	call	0x198c	; 0x198c <strnlen>
    1708:	2c 01       	movw	r4, r24
    170a:	83 01       	movw	r16, r6
    170c:	2c 85       	ldd	r18, Y+12	; 0x0c
    170e:	2f 77       	andi	r18, 0x7F	; 127
    1710:	22 2e       	mov	r2, r18
    1712:	17 c0       	rjmp	.+46     	; 0x1742 <vfprintf+0x170>
    1714:	38 01       	movw	r6, r16
    1716:	f2 e0       	ldi	r31, 0x02	; 2
    1718:	6f 0e       	add	r6, r31
    171a:	71 1c       	adc	r7, r1
    171c:	f8 01       	movw	r30, r16
    171e:	a0 80       	ld	r10, Z
    1720:	b1 80       	ldd	r11, Z+1	; 0x01
    1722:	26 ff       	sbrs	r18, 6
    1724:	03 c0       	rjmp	.+6      	; 0x172c <vfprintf+0x15a>
    1726:	65 2d       	mov	r22, r5
    1728:	70 e0       	ldi	r23, 0x00	; 0
    172a:	02 c0       	rjmp	.+4      	; 0x1730 <vfprintf+0x15e>
    172c:	6f ef       	ldi	r22, 0xFF	; 255
    172e:	7f ef       	ldi	r23, 0xFF	; 255
    1730:	c5 01       	movw	r24, r10
    1732:	2c 87       	std	Y+12, r18	; 0x0c
    1734:	0e 94 bb 0c 	call	0x1976	; 0x1976 <strnlen_P>
    1738:	2c 01       	movw	r4, r24
    173a:	2c 85       	ldd	r18, Y+12	; 0x0c
    173c:	20 68       	ori	r18, 0x80	; 128
    173e:	22 2e       	mov	r2, r18
    1740:	83 01       	movw	r16, r6
    1742:	23 fc       	sbrc	r2, 3
    1744:	1b c0       	rjmp	.+54     	; 0x177c <vfprintf+0x1aa>
    1746:	83 2d       	mov	r24, r3
    1748:	90 e0       	ldi	r25, 0x00	; 0
    174a:	48 16       	cp	r4, r24
    174c:	59 06       	cpc	r5, r25
    174e:	b0 f4       	brcc	.+44     	; 0x177c <vfprintf+0x1aa>
    1750:	b7 01       	movw	r22, r14
    1752:	80 e2       	ldi	r24, 0x20	; 32
    1754:	90 e0       	ldi	r25, 0x00	; 0
    1756:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <fputc>
    175a:	3a 94       	dec	r3
    175c:	f4 cf       	rjmp	.-24     	; 0x1746 <vfprintf+0x174>
    175e:	f5 01       	movw	r30, r10
    1760:	27 fc       	sbrc	r2, 7
    1762:	85 91       	lpm	r24, Z+
    1764:	27 fe       	sbrs	r2, 7
    1766:	81 91       	ld	r24, Z+
    1768:	5f 01       	movw	r10, r30
    176a:	b7 01       	movw	r22, r14
    176c:	90 e0       	ldi	r25, 0x00	; 0
    176e:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <fputc>
    1772:	31 10       	cpse	r3, r1
    1774:	3a 94       	dec	r3
    1776:	f1 e0       	ldi	r31, 0x01	; 1
    1778:	4f 1a       	sub	r4, r31
    177a:	51 08       	sbc	r5, r1
    177c:	41 14       	cp	r4, r1
    177e:	51 04       	cpc	r5, r1
    1780:	71 f7       	brne	.-36     	; 0x175e <vfprintf+0x18c>
    1782:	e5 c0       	rjmp	.+458    	; 0x194e <vfprintf+0x37c>
    1784:	84 36       	cpi	r24, 0x64	; 100
    1786:	11 f0       	breq	.+4      	; 0x178c <vfprintf+0x1ba>
    1788:	89 36       	cpi	r24, 0x69	; 105
    178a:	39 f5       	brne	.+78     	; 0x17da <vfprintf+0x208>
    178c:	f8 01       	movw	r30, r16
    178e:	27 ff       	sbrs	r18, 7
    1790:	07 c0       	rjmp	.+14     	; 0x17a0 <vfprintf+0x1ce>
    1792:	60 81       	ld	r22, Z
    1794:	71 81       	ldd	r23, Z+1	; 0x01
    1796:	82 81       	ldd	r24, Z+2	; 0x02
    1798:	93 81       	ldd	r25, Z+3	; 0x03
    179a:	0c 5f       	subi	r16, 0xFC	; 252
    179c:	1f 4f       	sbci	r17, 0xFF	; 255
    179e:	08 c0       	rjmp	.+16     	; 0x17b0 <vfprintf+0x1de>
    17a0:	60 81       	ld	r22, Z
    17a2:	71 81       	ldd	r23, Z+1	; 0x01
    17a4:	88 27       	eor	r24, r24
    17a6:	77 fd       	sbrc	r23, 7
    17a8:	80 95       	com	r24
    17aa:	98 2f       	mov	r25, r24
    17ac:	0e 5f       	subi	r16, 0xFE	; 254
    17ae:	1f 4f       	sbci	r17, 0xFF	; 255
    17b0:	2f 76       	andi	r18, 0x6F	; 111
    17b2:	b2 2e       	mov	r11, r18
    17b4:	97 ff       	sbrs	r25, 7
    17b6:	09 c0       	rjmp	.+18     	; 0x17ca <vfprintf+0x1f8>
    17b8:	90 95       	com	r25
    17ba:	80 95       	com	r24
    17bc:	70 95       	com	r23
    17be:	61 95       	neg	r22
    17c0:	7f 4f       	sbci	r23, 0xFF	; 255
    17c2:	8f 4f       	sbci	r24, 0xFF	; 255
    17c4:	9f 4f       	sbci	r25, 0xFF	; 255
    17c6:	20 68       	ori	r18, 0x80	; 128
    17c8:	b2 2e       	mov	r11, r18
    17ca:	2a e0       	ldi	r18, 0x0A	; 10
    17cc:	30 e0       	ldi	r19, 0x00	; 0
    17ce:	a4 01       	movw	r20, r8
    17d0:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <__ultoa_invert>
    17d4:	a8 2e       	mov	r10, r24
    17d6:	a8 18       	sub	r10, r8
    17d8:	44 c0       	rjmp	.+136    	; 0x1862 <vfprintf+0x290>
    17da:	85 37       	cpi	r24, 0x75	; 117
    17dc:	29 f4       	brne	.+10     	; 0x17e8 <vfprintf+0x216>
    17de:	2f 7e       	andi	r18, 0xEF	; 239
    17e0:	b2 2e       	mov	r11, r18
    17e2:	2a e0       	ldi	r18, 0x0A	; 10
    17e4:	30 e0       	ldi	r19, 0x00	; 0
    17e6:	25 c0       	rjmp	.+74     	; 0x1832 <vfprintf+0x260>
    17e8:	f2 2f       	mov	r31, r18
    17ea:	f9 7f       	andi	r31, 0xF9	; 249
    17ec:	bf 2e       	mov	r11, r31
    17ee:	8f 36       	cpi	r24, 0x6F	; 111
    17f0:	c1 f0       	breq	.+48     	; 0x1822 <vfprintf+0x250>
    17f2:	18 f4       	brcc	.+6      	; 0x17fa <vfprintf+0x228>
    17f4:	88 35       	cpi	r24, 0x58	; 88
    17f6:	79 f0       	breq	.+30     	; 0x1816 <vfprintf+0x244>
    17f8:	b4 c0       	rjmp	.+360    	; 0x1962 <vfprintf+0x390>
    17fa:	80 37       	cpi	r24, 0x70	; 112
    17fc:	19 f0       	breq	.+6      	; 0x1804 <vfprintf+0x232>
    17fe:	88 37       	cpi	r24, 0x78	; 120
    1800:	21 f0       	breq	.+8      	; 0x180a <vfprintf+0x238>
    1802:	af c0       	rjmp	.+350    	; 0x1962 <vfprintf+0x390>
    1804:	2f 2f       	mov	r18, r31
    1806:	20 61       	ori	r18, 0x10	; 16
    1808:	b2 2e       	mov	r11, r18
    180a:	b4 fe       	sbrs	r11, 4
    180c:	0d c0       	rjmp	.+26     	; 0x1828 <vfprintf+0x256>
    180e:	8b 2d       	mov	r24, r11
    1810:	84 60       	ori	r24, 0x04	; 4
    1812:	b8 2e       	mov	r11, r24
    1814:	09 c0       	rjmp	.+18     	; 0x1828 <vfprintf+0x256>
    1816:	24 ff       	sbrs	r18, 4
    1818:	0a c0       	rjmp	.+20     	; 0x182e <vfprintf+0x25c>
    181a:	9f 2f       	mov	r25, r31
    181c:	96 60       	ori	r25, 0x06	; 6
    181e:	b9 2e       	mov	r11, r25
    1820:	06 c0       	rjmp	.+12     	; 0x182e <vfprintf+0x25c>
    1822:	28 e0       	ldi	r18, 0x08	; 8
    1824:	30 e0       	ldi	r19, 0x00	; 0
    1826:	05 c0       	rjmp	.+10     	; 0x1832 <vfprintf+0x260>
    1828:	20 e1       	ldi	r18, 0x10	; 16
    182a:	30 e0       	ldi	r19, 0x00	; 0
    182c:	02 c0       	rjmp	.+4      	; 0x1832 <vfprintf+0x260>
    182e:	20 e1       	ldi	r18, 0x10	; 16
    1830:	32 e0       	ldi	r19, 0x02	; 2
    1832:	f8 01       	movw	r30, r16
    1834:	b7 fe       	sbrs	r11, 7
    1836:	07 c0       	rjmp	.+14     	; 0x1846 <vfprintf+0x274>
    1838:	60 81       	ld	r22, Z
    183a:	71 81       	ldd	r23, Z+1	; 0x01
    183c:	82 81       	ldd	r24, Z+2	; 0x02
    183e:	93 81       	ldd	r25, Z+3	; 0x03
    1840:	0c 5f       	subi	r16, 0xFC	; 252
    1842:	1f 4f       	sbci	r17, 0xFF	; 255
    1844:	06 c0       	rjmp	.+12     	; 0x1852 <vfprintf+0x280>
    1846:	60 81       	ld	r22, Z
    1848:	71 81       	ldd	r23, Z+1	; 0x01
    184a:	80 e0       	ldi	r24, 0x00	; 0
    184c:	90 e0       	ldi	r25, 0x00	; 0
    184e:	0e 5f       	subi	r16, 0xFE	; 254
    1850:	1f 4f       	sbci	r17, 0xFF	; 255
    1852:	a4 01       	movw	r20, r8
    1854:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <__ultoa_invert>
    1858:	a8 2e       	mov	r10, r24
    185a:	a8 18       	sub	r10, r8
    185c:	fb 2d       	mov	r31, r11
    185e:	ff 77       	andi	r31, 0x7F	; 127
    1860:	bf 2e       	mov	r11, r31
    1862:	b6 fe       	sbrs	r11, 6
    1864:	0b c0       	rjmp	.+22     	; 0x187c <vfprintf+0x2aa>
    1866:	2b 2d       	mov	r18, r11
    1868:	2e 7f       	andi	r18, 0xFE	; 254
    186a:	a5 14       	cp	r10, r5
    186c:	50 f4       	brcc	.+20     	; 0x1882 <vfprintf+0x2b0>
    186e:	b4 fe       	sbrs	r11, 4
    1870:	0a c0       	rjmp	.+20     	; 0x1886 <vfprintf+0x2b4>
    1872:	b2 fc       	sbrc	r11, 2
    1874:	08 c0       	rjmp	.+16     	; 0x1886 <vfprintf+0x2b4>
    1876:	2b 2d       	mov	r18, r11
    1878:	2e 7e       	andi	r18, 0xEE	; 238
    187a:	05 c0       	rjmp	.+10     	; 0x1886 <vfprintf+0x2b4>
    187c:	7a 2c       	mov	r7, r10
    187e:	2b 2d       	mov	r18, r11
    1880:	03 c0       	rjmp	.+6      	; 0x1888 <vfprintf+0x2b6>
    1882:	7a 2c       	mov	r7, r10
    1884:	01 c0       	rjmp	.+2      	; 0x1888 <vfprintf+0x2b6>
    1886:	75 2c       	mov	r7, r5
    1888:	24 ff       	sbrs	r18, 4
    188a:	0d c0       	rjmp	.+26     	; 0x18a6 <vfprintf+0x2d4>
    188c:	fe 01       	movw	r30, r28
    188e:	ea 0d       	add	r30, r10
    1890:	f1 1d       	adc	r31, r1
    1892:	80 81       	ld	r24, Z
    1894:	80 33       	cpi	r24, 0x30	; 48
    1896:	11 f4       	brne	.+4      	; 0x189c <vfprintf+0x2ca>
    1898:	29 7e       	andi	r18, 0xE9	; 233
    189a:	09 c0       	rjmp	.+18     	; 0x18ae <vfprintf+0x2dc>
    189c:	22 ff       	sbrs	r18, 2
    189e:	06 c0       	rjmp	.+12     	; 0x18ac <vfprintf+0x2da>
    18a0:	73 94       	inc	r7
    18a2:	73 94       	inc	r7
    18a4:	04 c0       	rjmp	.+8      	; 0x18ae <vfprintf+0x2dc>
    18a6:	82 2f       	mov	r24, r18
    18a8:	86 78       	andi	r24, 0x86	; 134
    18aa:	09 f0       	breq	.+2      	; 0x18ae <vfprintf+0x2dc>
    18ac:	73 94       	inc	r7
    18ae:	23 fd       	sbrc	r18, 3
    18b0:	13 c0       	rjmp	.+38     	; 0x18d8 <vfprintf+0x306>
    18b2:	20 ff       	sbrs	r18, 0
    18b4:	06 c0       	rjmp	.+12     	; 0x18c2 <vfprintf+0x2f0>
    18b6:	5a 2c       	mov	r5, r10
    18b8:	73 14       	cp	r7, r3
    18ba:	18 f4       	brcc	.+6      	; 0x18c2 <vfprintf+0x2f0>
    18bc:	53 0c       	add	r5, r3
    18be:	57 18       	sub	r5, r7
    18c0:	73 2c       	mov	r7, r3
    18c2:	73 14       	cp	r7, r3
    18c4:	68 f4       	brcc	.+26     	; 0x18e0 <vfprintf+0x30e>
    18c6:	b7 01       	movw	r22, r14
    18c8:	80 e2       	ldi	r24, 0x20	; 32
    18ca:	90 e0       	ldi	r25, 0x00	; 0
    18cc:	2c 87       	std	Y+12, r18	; 0x0c
    18ce:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <fputc>
    18d2:	73 94       	inc	r7
    18d4:	2c 85       	ldd	r18, Y+12	; 0x0c
    18d6:	f5 cf       	rjmp	.-22     	; 0x18c2 <vfprintf+0x2f0>
    18d8:	73 14       	cp	r7, r3
    18da:	10 f4       	brcc	.+4      	; 0x18e0 <vfprintf+0x30e>
    18dc:	37 18       	sub	r3, r7
    18de:	01 c0       	rjmp	.+2      	; 0x18e2 <vfprintf+0x310>
    18e0:	31 2c       	mov	r3, r1
    18e2:	24 ff       	sbrs	r18, 4
    18e4:	12 c0       	rjmp	.+36     	; 0x190a <vfprintf+0x338>
    18e6:	b7 01       	movw	r22, r14
    18e8:	80 e3       	ldi	r24, 0x30	; 48
    18ea:	90 e0       	ldi	r25, 0x00	; 0
    18ec:	2c 87       	std	Y+12, r18	; 0x0c
    18ee:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <fputc>
    18f2:	2c 85       	ldd	r18, Y+12	; 0x0c
    18f4:	22 ff       	sbrs	r18, 2
    18f6:	17 c0       	rjmp	.+46     	; 0x1926 <vfprintf+0x354>
    18f8:	21 ff       	sbrs	r18, 1
    18fa:	03 c0       	rjmp	.+6      	; 0x1902 <vfprintf+0x330>
    18fc:	88 e5       	ldi	r24, 0x58	; 88
    18fe:	90 e0       	ldi	r25, 0x00	; 0
    1900:	02 c0       	rjmp	.+4      	; 0x1906 <vfprintf+0x334>
    1902:	88 e7       	ldi	r24, 0x78	; 120
    1904:	90 e0       	ldi	r25, 0x00	; 0
    1906:	b7 01       	movw	r22, r14
    1908:	0c c0       	rjmp	.+24     	; 0x1922 <vfprintf+0x350>
    190a:	82 2f       	mov	r24, r18
    190c:	86 78       	andi	r24, 0x86	; 134
    190e:	59 f0       	breq	.+22     	; 0x1926 <vfprintf+0x354>
    1910:	21 fd       	sbrc	r18, 1
    1912:	02 c0       	rjmp	.+4      	; 0x1918 <vfprintf+0x346>
    1914:	80 e2       	ldi	r24, 0x20	; 32
    1916:	01 c0       	rjmp	.+2      	; 0x191a <vfprintf+0x348>
    1918:	8b e2       	ldi	r24, 0x2B	; 43
    191a:	27 fd       	sbrc	r18, 7
    191c:	8d e2       	ldi	r24, 0x2D	; 45
    191e:	b7 01       	movw	r22, r14
    1920:	90 e0       	ldi	r25, 0x00	; 0
    1922:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <fputc>
    1926:	a5 14       	cp	r10, r5
    1928:	38 f4       	brcc	.+14     	; 0x1938 <vfprintf+0x366>
    192a:	b7 01       	movw	r22, r14
    192c:	80 e3       	ldi	r24, 0x30	; 48
    192e:	90 e0       	ldi	r25, 0x00	; 0
    1930:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <fputc>
    1934:	5a 94       	dec	r5
    1936:	f7 cf       	rjmp	.-18     	; 0x1926 <vfprintf+0x354>
    1938:	aa 94       	dec	r10
    193a:	f4 01       	movw	r30, r8
    193c:	ea 0d       	add	r30, r10
    193e:	f1 1d       	adc	r31, r1
    1940:	80 81       	ld	r24, Z
    1942:	b7 01       	movw	r22, r14
    1944:	90 e0       	ldi	r25, 0x00	; 0
    1946:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <fputc>
    194a:	a1 10       	cpse	r10, r1
    194c:	f5 cf       	rjmp	.-22     	; 0x1938 <vfprintf+0x366>
    194e:	33 20       	and	r3, r3
    1950:	09 f4       	brne	.+2      	; 0x1954 <vfprintf+0x382>
    1952:	51 ce       	rjmp	.-862    	; 0x15f6 <vfprintf+0x24>
    1954:	b7 01       	movw	r22, r14
    1956:	80 e2       	ldi	r24, 0x20	; 32
    1958:	90 e0       	ldi	r25, 0x00	; 0
    195a:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <fputc>
    195e:	3a 94       	dec	r3
    1960:	f6 cf       	rjmp	.-20     	; 0x194e <vfprintf+0x37c>
    1962:	f7 01       	movw	r30, r14
    1964:	86 81       	ldd	r24, Z+6	; 0x06
    1966:	97 81       	ldd	r25, Z+7	; 0x07
    1968:	02 c0       	rjmp	.+4      	; 0x196e <vfprintf+0x39c>
    196a:	8f ef       	ldi	r24, 0xFF	; 255
    196c:	9f ef       	ldi	r25, 0xFF	; 255
    196e:	2c 96       	adiw	r28, 0x0c	; 12
    1970:	e2 e1       	ldi	r30, 0x12	; 18
    1972:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__epilogue_restores__>

00001976 <strnlen_P>:
    1976:	fc 01       	movw	r30, r24
    1978:	05 90       	lpm	r0, Z+
    197a:	61 50       	subi	r22, 0x01	; 1
    197c:	70 40       	sbci	r23, 0x00	; 0
    197e:	01 10       	cpse	r0, r1
    1980:	d8 f7       	brcc	.-10     	; 0x1978 <strnlen_P+0x2>
    1982:	80 95       	com	r24
    1984:	90 95       	com	r25
    1986:	8e 0f       	add	r24, r30
    1988:	9f 1f       	adc	r25, r31
    198a:	08 95       	ret

0000198c <strnlen>:
    198c:	fc 01       	movw	r30, r24
    198e:	61 50       	subi	r22, 0x01	; 1
    1990:	70 40       	sbci	r23, 0x00	; 0
    1992:	01 90       	ld	r0, Z+
    1994:	01 10       	cpse	r0, r1
    1996:	d8 f7       	brcc	.-10     	; 0x198e <strnlen+0x2>
    1998:	80 95       	com	r24
    199a:	90 95       	com	r25
    199c:	8e 0f       	add	r24, r30
    199e:	9f 1f       	adc	r25, r31
    19a0:	08 95       	ret

000019a2 <fputc>:
    19a2:	0f 93       	push	r16
    19a4:	1f 93       	push	r17
    19a6:	cf 93       	push	r28
    19a8:	df 93       	push	r29
    19aa:	18 2f       	mov	r17, r24
    19ac:	09 2f       	mov	r16, r25
    19ae:	eb 01       	movw	r28, r22
    19b0:	8b 81       	ldd	r24, Y+3	; 0x03
    19b2:	81 fd       	sbrc	r24, 1
    19b4:	03 c0       	rjmp	.+6      	; 0x19bc <fputc+0x1a>
    19b6:	8f ef       	ldi	r24, 0xFF	; 255
    19b8:	9f ef       	ldi	r25, 0xFF	; 255
    19ba:	20 c0       	rjmp	.+64     	; 0x19fc <fputc+0x5a>
    19bc:	82 ff       	sbrs	r24, 2
    19be:	10 c0       	rjmp	.+32     	; 0x19e0 <fputc+0x3e>
    19c0:	4e 81       	ldd	r20, Y+6	; 0x06
    19c2:	5f 81       	ldd	r21, Y+7	; 0x07
    19c4:	2c 81       	ldd	r18, Y+4	; 0x04
    19c6:	3d 81       	ldd	r19, Y+5	; 0x05
    19c8:	42 17       	cp	r20, r18
    19ca:	53 07       	cpc	r21, r19
    19cc:	7c f4       	brge	.+30     	; 0x19ec <fputc+0x4a>
    19ce:	e8 81       	ld	r30, Y
    19d0:	f9 81       	ldd	r31, Y+1	; 0x01
    19d2:	9f 01       	movw	r18, r30
    19d4:	2f 5f       	subi	r18, 0xFF	; 255
    19d6:	3f 4f       	sbci	r19, 0xFF	; 255
    19d8:	39 83       	std	Y+1, r19	; 0x01
    19da:	28 83       	st	Y, r18
    19dc:	10 83       	st	Z, r17
    19de:	06 c0       	rjmp	.+12     	; 0x19ec <fputc+0x4a>
    19e0:	e8 85       	ldd	r30, Y+8	; 0x08
    19e2:	f9 85       	ldd	r31, Y+9	; 0x09
    19e4:	81 2f       	mov	r24, r17
    19e6:	09 95       	icall
    19e8:	89 2b       	or	r24, r25
    19ea:	29 f7       	brne	.-54     	; 0x19b6 <fputc+0x14>
    19ec:	2e 81       	ldd	r18, Y+6	; 0x06
    19ee:	3f 81       	ldd	r19, Y+7	; 0x07
    19f0:	2f 5f       	subi	r18, 0xFF	; 255
    19f2:	3f 4f       	sbci	r19, 0xFF	; 255
    19f4:	3f 83       	std	Y+7, r19	; 0x07
    19f6:	2e 83       	std	Y+6, r18	; 0x06
    19f8:	81 2f       	mov	r24, r17
    19fa:	90 2f       	mov	r25, r16
    19fc:	df 91       	pop	r29
    19fe:	cf 91       	pop	r28
    1a00:	1f 91       	pop	r17
    1a02:	0f 91       	pop	r16
    1a04:	08 95       	ret

00001a06 <__ultoa_invert>:
    1a06:	fa 01       	movw	r30, r20
    1a08:	aa 27       	eor	r26, r26
    1a0a:	28 30       	cpi	r18, 0x08	; 8
    1a0c:	51 f1       	breq	.+84     	; 0x1a62 <__ultoa_invert+0x5c>
    1a0e:	20 31       	cpi	r18, 0x10	; 16
    1a10:	81 f1       	breq	.+96     	; 0x1a72 <__ultoa_invert+0x6c>
    1a12:	e8 94       	clt
    1a14:	6f 93       	push	r22
    1a16:	6e 7f       	andi	r22, 0xFE	; 254
    1a18:	6e 5f       	subi	r22, 0xFE	; 254
    1a1a:	7f 4f       	sbci	r23, 0xFF	; 255
    1a1c:	8f 4f       	sbci	r24, 0xFF	; 255
    1a1e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a20:	af 4f       	sbci	r26, 0xFF	; 255
    1a22:	b1 e0       	ldi	r27, 0x01	; 1
    1a24:	3e d0       	rcall	.+124    	; 0x1aa2 <__ultoa_invert+0x9c>
    1a26:	b4 e0       	ldi	r27, 0x04	; 4
    1a28:	3c d0       	rcall	.+120    	; 0x1aa2 <__ultoa_invert+0x9c>
    1a2a:	67 0f       	add	r22, r23
    1a2c:	78 1f       	adc	r23, r24
    1a2e:	89 1f       	adc	r24, r25
    1a30:	9a 1f       	adc	r25, r26
    1a32:	a1 1d       	adc	r26, r1
    1a34:	68 0f       	add	r22, r24
    1a36:	79 1f       	adc	r23, r25
    1a38:	8a 1f       	adc	r24, r26
    1a3a:	91 1d       	adc	r25, r1
    1a3c:	a1 1d       	adc	r26, r1
    1a3e:	6a 0f       	add	r22, r26
    1a40:	71 1d       	adc	r23, r1
    1a42:	81 1d       	adc	r24, r1
    1a44:	91 1d       	adc	r25, r1
    1a46:	a1 1d       	adc	r26, r1
    1a48:	20 d0       	rcall	.+64     	; 0x1a8a <__ultoa_invert+0x84>
    1a4a:	09 f4       	brne	.+2      	; 0x1a4e <__ultoa_invert+0x48>
    1a4c:	68 94       	set
    1a4e:	3f 91       	pop	r19
    1a50:	2a e0       	ldi	r18, 0x0A	; 10
    1a52:	26 9f       	mul	r18, r22
    1a54:	11 24       	eor	r1, r1
    1a56:	30 19       	sub	r19, r0
    1a58:	30 5d       	subi	r19, 0xD0	; 208
    1a5a:	31 93       	st	Z+, r19
    1a5c:	de f6       	brtc	.-74     	; 0x1a14 <__ultoa_invert+0xe>
    1a5e:	cf 01       	movw	r24, r30
    1a60:	08 95       	ret
    1a62:	46 2f       	mov	r20, r22
    1a64:	47 70       	andi	r20, 0x07	; 7
    1a66:	40 5d       	subi	r20, 0xD0	; 208
    1a68:	41 93       	st	Z+, r20
    1a6a:	b3 e0       	ldi	r27, 0x03	; 3
    1a6c:	0f d0       	rcall	.+30     	; 0x1a8c <__ultoa_invert+0x86>
    1a6e:	c9 f7       	brne	.-14     	; 0x1a62 <__ultoa_invert+0x5c>
    1a70:	f6 cf       	rjmp	.-20     	; 0x1a5e <__ultoa_invert+0x58>
    1a72:	46 2f       	mov	r20, r22
    1a74:	4f 70       	andi	r20, 0x0F	; 15
    1a76:	40 5d       	subi	r20, 0xD0	; 208
    1a78:	4a 33       	cpi	r20, 0x3A	; 58
    1a7a:	18 f0       	brcs	.+6      	; 0x1a82 <__ultoa_invert+0x7c>
    1a7c:	49 5d       	subi	r20, 0xD9	; 217
    1a7e:	31 fd       	sbrc	r19, 1
    1a80:	40 52       	subi	r20, 0x20	; 32
    1a82:	41 93       	st	Z+, r20
    1a84:	02 d0       	rcall	.+4      	; 0x1a8a <__ultoa_invert+0x84>
    1a86:	a9 f7       	brne	.-22     	; 0x1a72 <__ultoa_invert+0x6c>
    1a88:	ea cf       	rjmp	.-44     	; 0x1a5e <__ultoa_invert+0x58>
    1a8a:	b4 e0       	ldi	r27, 0x04	; 4
    1a8c:	a6 95       	lsr	r26
    1a8e:	97 95       	ror	r25
    1a90:	87 95       	ror	r24
    1a92:	77 95       	ror	r23
    1a94:	67 95       	ror	r22
    1a96:	ba 95       	dec	r27
    1a98:	c9 f7       	brne	.-14     	; 0x1a8c <__ultoa_invert+0x86>
    1a9a:	00 97       	sbiw	r24, 0x00	; 0
    1a9c:	61 05       	cpc	r22, r1
    1a9e:	71 05       	cpc	r23, r1
    1aa0:	08 95       	ret
    1aa2:	9b 01       	movw	r18, r22
    1aa4:	ac 01       	movw	r20, r24
    1aa6:	0a 2e       	mov	r0, r26
    1aa8:	06 94       	lsr	r0
    1aaa:	57 95       	ror	r21
    1aac:	47 95       	ror	r20
    1aae:	37 95       	ror	r19
    1ab0:	27 95       	ror	r18
    1ab2:	ba 95       	dec	r27
    1ab4:	c9 f7       	brne	.-14     	; 0x1aa8 <__ultoa_invert+0xa2>
    1ab6:	62 0f       	add	r22, r18
    1ab8:	73 1f       	adc	r23, r19
    1aba:	84 1f       	adc	r24, r20
    1abc:	95 1f       	adc	r25, r21
    1abe:	a0 1d       	adc	r26, r0
    1ac0:	08 95       	ret

00001ac2 <__prologue_saves__>:
    1ac2:	2f 92       	push	r2
    1ac4:	3f 92       	push	r3
    1ac6:	4f 92       	push	r4
    1ac8:	5f 92       	push	r5
    1aca:	6f 92       	push	r6
    1acc:	7f 92       	push	r7
    1ace:	8f 92       	push	r8
    1ad0:	9f 92       	push	r9
    1ad2:	af 92       	push	r10
    1ad4:	bf 92       	push	r11
    1ad6:	cf 92       	push	r12
    1ad8:	df 92       	push	r13
    1ada:	ef 92       	push	r14
    1adc:	ff 92       	push	r15
    1ade:	0f 93       	push	r16
    1ae0:	1f 93       	push	r17
    1ae2:	cf 93       	push	r28
    1ae4:	df 93       	push	r29
    1ae6:	cd b7       	in	r28, 0x3d	; 61
    1ae8:	de b7       	in	r29, 0x3e	; 62
    1aea:	ca 1b       	sub	r28, r26
    1aec:	db 0b       	sbc	r29, r27
    1aee:	0f b6       	in	r0, 0x3f	; 63
    1af0:	f8 94       	cli
    1af2:	de bf       	out	0x3e, r29	; 62
    1af4:	0f be       	out	0x3f, r0	; 63
    1af6:	cd bf       	out	0x3d, r28	; 61
    1af8:	09 94       	ijmp

00001afa <__epilogue_restores__>:
    1afa:	2a 88       	ldd	r2, Y+18	; 0x12
    1afc:	39 88       	ldd	r3, Y+17	; 0x11
    1afe:	48 88       	ldd	r4, Y+16	; 0x10
    1b00:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b02:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b04:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b06:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b08:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b0a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b0c:	b9 84       	ldd	r11, Y+9	; 0x09
    1b0e:	c8 84       	ldd	r12, Y+8	; 0x08
    1b10:	df 80       	ldd	r13, Y+7	; 0x07
    1b12:	ee 80       	ldd	r14, Y+6	; 0x06
    1b14:	fd 80       	ldd	r15, Y+5	; 0x05
    1b16:	0c 81       	ldd	r16, Y+4	; 0x04
    1b18:	1b 81       	ldd	r17, Y+3	; 0x03
    1b1a:	aa 81       	ldd	r26, Y+2	; 0x02
    1b1c:	b9 81       	ldd	r27, Y+1	; 0x01
    1b1e:	ce 0f       	add	r28, r30
    1b20:	d1 1d       	adc	r29, r1
    1b22:	0f b6       	in	r0, 0x3f	; 63
    1b24:	f8 94       	cli
    1b26:	de bf       	out	0x3e, r29	; 62
    1b28:	0f be       	out	0x3f, r0	; 63
    1b2a:	cd bf       	out	0x3d, r28	; 61
    1b2c:	ed 01       	movw	r28, r26
    1b2e:	08 95       	ret

00001b30 <_exit>:
    1b30:	f8 94       	cli

00001b32 <__stop_program>:
    1b32:	ff cf       	rjmp	.-2      	; 0x1b32 <__stop_program>
