
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001952  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000032a  00800060  00001952  000019e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000015a  0080038a  0080038a  00001d10  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001d10  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000120  00000000  00000000  00001d6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002de3  00000000  00000000  00001e8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000037e  00000000  00000000  00004c6f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000872  00000000  00000000  00004fed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000404  00000000  00000000  00005860  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000044a  00000000  00000000  00005c64  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000e3c  00000000  00000000  000060ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000110  00000000  00000000  00006eea  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 8c 00 	jmp	0x118	; 0x118 <__vector_13>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	13 e0       	ldi	r17, 0x03	; 3
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e5       	ldi	r30, 0x52	; 82
      68:	f9 e1       	ldi	r31, 0x19	; 25
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	aa 38       	cpi	r26, 0x8A	; 138
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	24 e0       	ldi	r18, 0x04	; 4
      78:	aa e8       	ldi	r26, 0x8A	; 138
      7a:	b3 e0       	ldi	r27, 0x03	; 3
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a4 3e       	cpi	r26, 0xE4	; 228
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 8d 07 	call	0xf1a	; 0xf1a <main>
      8a:	0c 94 a7 0c 	jmp	0x194e	; 0x194e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <read_adc>:
	pinChange(D3,0);
	
	if(a & 16)
	pinChange(D4,1);
	else
	pinChange(D4,0);
      92:	80 64       	ori	r24, 0x40	; 64
      94:	87 b9       	out	0x07, r24	; 7
      96:	83 e0       	ldi	r24, 0x03	; 3
      98:	8a 95       	dec	r24

	if(a & 32)
      9a:	f1 f7       	brne	.-4      	; 0x98 <read_adc+0x6>
      9c:	00 00       	nop
	pinChange(D5,1);
      9e:	36 9a       	sbi	0x06, 6	; 6
      a0:	34 9b       	sbis	0x06, 4	; 6
      a2:	fe cf       	rjmp	.-4      	; 0xa0 <read_adc+0xe>
      a4:	34 9a       	sbi	0x06, 4	; 6
      a6:	84 b1       	in	r24, 0x04	; 4
      a8:	95 b1       	in	r25, 0x05	; 5
      aa:	08 95       	ret

000000ac <UART_ON>:
	else
	pinChange(D5,0);
      ac:	cf 92       	push	r12
      ae:	df 92       	push	r13
      b0:	ef 92       	push	r14
      b2:	ff 92       	push	r15
      b4:	cf 93       	push	r28
      b6:	df 93       	push	r29
	
	if(a & 64)
      b8:	ec 01       	movw	r28, r24
      ba:	70 e0       	ldi	r23, 0x00	; 0
	pinChange(D6,1);
      bc:	80 e0       	ldi	r24, 0x00	; 0
      be:	90 e0       	ldi	r25, 0x00	; 0
      c0:	0e 94 c6 08 	call	0x118c	; 0x118c <__floatsisf>
      c4:	6b 01       	movw	r12, r22
      c6:	7c 01       	movw	r14, r24
      c8:	be 01       	movw	r22, r28
	else
	pinChange(D6,0);
      ca:	80 e0       	ldi	r24, 0x00	; 0
      cc:	90 e0       	ldi	r25, 0x00	; 0
      ce:	0e 94 c4 08 	call	0x1188	; 0x1188 <__floatunsisf>
      d2:	2d eb       	ldi	r18, 0xBD	; 189
      d4:	37 e3       	ldi	r19, 0x37	; 55
	
	if(a & 128)
      d6:	46 e8       	ldi	r20, 0x86	; 134
      d8:	58 e3       	ldi	r21, 0x38	; 56
	pinChange(D7,1);
      da:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__mulsf3>
      de:	9b 01       	movw	r18, r22
      e0:	ac 01       	movw	r20, r24
      e2:	c7 01       	movw	r24, r14
      e4:	b6 01       	movw	r22, r12
      e6:	0e 94 30 08 	call	0x1060	; 0x1060 <__divsf3>
	else
	pinChange(D7,0);
      ea:	0e 94 98 08 	call	0x1130	; 0x1130 <__fixunssfsi>
      ee:	61 50       	subi	r22, 0x01	; 1
      f0:	69 b9       	out	0x09, r22	; 9
      f2:	10 bc       	out	0x20, r1	; 32
}
      f4:	8a b1       	in	r24, 0x0a	; 10
      f6:	88 69       	ori	r24, 0x98	; 152
	unsigned char x;
	x=fosc/(0.000064*boud);
	x-=1;
	UBRRL=x;
	UBRRH=x>>8;
	UCSRB |=(1 << TXEN) | (1 << RXEN) | (1 << RXC);
      f8:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= (1 << URSEL) | (1 << UCSZ0) | (1 << UCSZ1) ;
      fa:	80 b5       	in	r24, 0x20	; 32
      fc:	86 68       	ori	r24, 0x86	; 134
      fe:	80 bd       	out	0x20, r24	; 32
	
	sei();
     100:	78 94       	sei
}
     102:	df 91       	pop	r29
     104:	cf 91       	pop	r28
     106:	ff 90       	pop	r15
     108:	ef 90       	pop	r14
     10a:	df 90       	pop	r13
     10c:	cf 90       	pop	r12
     10e:	08 95       	ret

00000110 <Tx_putc>:


void Tx_putc(char send)
{
	while ((UCSRA & (1 << UDRE)) == 0);
     110:	5d 9b       	sbis	0x0b, 5	; 11
     112:	fe cf       	rjmp	.-4      	; 0x110 <Tx_putc>
	UDR = send;
     114:	8c b9       	out	0x0c, r24	; 12
     116:	08 95       	ret

00000118 <__vector_13>:
}

ISR(USART_RXC_vect)
{
     118:	1f 92       	push	r1
     11a:	0f 92       	push	r0
     11c:	0f b6       	in	r0, 0x3f	; 63
     11e:	0f 92       	push	r0
     120:	11 24       	eor	r1, r1
     122:	2f 93       	push	r18
     124:	8f 93       	push	r24
     126:	9f 93       	push	r25
     128:	ef 93       	push	r30
     12a:	ff 93       	push	r31
	Recieve = UDR;
     12c:	2c b1       	in	r18, 0x0c	; 12
     12e:	20 93 7b 04 	sts	0x047B, r18
	Temp[i] = Recieve;
     132:	80 91 8a 03 	lds	r24, 0x038A
     136:	90 91 8b 03 	lds	r25, 0x038B
     13a:	fc 01       	movw	r30, r24
     13c:	e0 52       	subi	r30, 0x20	; 32
     13e:	fc 4f       	sbci	r31, 0xFC	; 252
     140:	20 83       	st	Z, r18
	i++;
     142:	01 96       	adiw	r24, 0x01	; 1
     144:	90 93 8b 03 	sts	0x038B, r25
     148:	80 93 8a 03 	sts	0x038A, r24
}
     14c:	ff 91       	pop	r31
     14e:	ef 91       	pop	r30
     150:	9f 91       	pop	r25
     152:	8f 91       	pop	r24
     154:	2f 91       	pop	r18
     156:	0f 90       	pop	r0
     158:	0f be       	out	0x3f, r0	; 63
     15a:	0f 90       	pop	r0
     15c:	1f 90       	pop	r1
     15e:	18 95       	reti

00000160 <Tx_puts>:

void Tx_puts(unsigned char name[])
{
     160:	dc 01       	movw	r26, r24
	unsigned char z=0;
	for(z=0;z<strlen(name);z++)
     162:	20 e0       	ldi	r18, 0x00	; 0
     164:	08 c0       	rjmp	.+16     	; 0x176 <Tx_puts+0x16>
	{
		while ((UCSRA & (1 << UDRE)) == 0);
     166:	5d 9b       	sbis	0x0b, 5	; 11
     168:	fe cf       	rjmp	.-4      	; 0x166 <Tx_puts+0x6>
		UDR=name[z];
     16a:	fd 01       	movw	r30, r26
     16c:	e8 0f       	add	r30, r24
     16e:	f9 1f       	adc	r31, r25
     170:	80 81       	ld	r24, Z
     172:	8c b9       	out	0x0c, r24	; 12
}

void Tx_puts(unsigned char name[])
{
	unsigned char z=0;
	for(z=0;z<strlen(name);z++)
     174:	2f 5f       	subi	r18, 0xFF	; 255
     176:	82 2f       	mov	r24, r18
     178:	90 e0       	ldi	r25, 0x00	; 0
     17a:	fd 01       	movw	r30, r26
     17c:	01 90       	ld	r0, Z+
     17e:	00 20       	and	r0, r0
     180:	e9 f7       	brne	.-6      	; 0x17c <Tx_puts+0x1c>
     182:	31 97       	sbiw	r30, 0x01	; 1
     184:	ea 1b       	sub	r30, r26
     186:	fb 0b       	sbc	r31, r27
     188:	8e 17       	cp	r24, r30
     18a:	9f 07       	cpc	r25, r31
     18c:	60 f3       	brcs	.-40     	; 0x166 <Tx_puts+0x6>
	{
		while ((UCSRA & (1 << UDRE)) == 0);
		UDR=name[z];
	}
	return;
}
     18e:	08 95       	ret

00000190 <pinChange>:

#include<util/delay.h>

void pinChange(int a, int b)
{
	if(b == 0)
     190:	67 2b       	or	r22, r23
     192:	09 f0       	breq	.+2      	; 0x196 <pinChange+0x6>
     194:	9f c0       	rjmp	.+318    	; 0x2d4 <pinChange+0x144>
	{
		if(a == eS_PORTA0)
     196:	00 97       	sbiw	r24, 0x00	; 0
     198:	11 f4       	brne	.+4      	; 0x19e <pinChange+0xe>
		  PORTA &= ~(1<<PA0);
     19a:	d8 98       	cbi	0x1b, 0	; 27
     19c:	08 95       	ret
		else if(a == eS_PORTA1)
     19e:	81 30       	cpi	r24, 0x01	; 1
     1a0:	91 05       	cpc	r25, r1
     1a2:	11 f4       	brne	.+4      	; 0x1a8 <pinChange+0x18>
		  PORTA &= ~(1<<PA1); 
     1a4:	d9 98       	cbi	0x1b, 1	; 27
     1a6:	08 95       	ret
		else if(a == eS_PORTA2)
     1a8:	82 30       	cpi	r24, 0x02	; 2
     1aa:	91 05       	cpc	r25, r1
     1ac:	11 f4       	brne	.+4      	; 0x1b2 <pinChange+0x22>
		  PORTA &= ~(1<<PA2);
     1ae:	da 98       	cbi	0x1b, 2	; 27
     1b0:	08 95       	ret
		else if(a == eS_PORTA3)
     1b2:	83 30       	cpi	r24, 0x03	; 3
     1b4:	91 05       	cpc	r25, r1
     1b6:	11 f4       	brne	.+4      	; 0x1bc <pinChange+0x2c>
		  PORTA &= ~(1<<PA3); 
     1b8:	db 98       	cbi	0x1b, 3	; 27
     1ba:	08 95       	ret
		else if(a == eS_PORTA4)
     1bc:	84 30       	cpi	r24, 0x04	; 4
     1be:	91 05       	cpc	r25, r1
     1c0:	11 f4       	brne	.+4      	; 0x1c6 <pinChange+0x36>
		  PORTA &= ~(1<<PA4); 
     1c2:	dc 98       	cbi	0x1b, 4	; 27
     1c4:	08 95       	ret
		else if(a == eS_PORTA5)
     1c6:	85 30       	cpi	r24, 0x05	; 5
     1c8:	91 05       	cpc	r25, r1
     1ca:	11 f4       	brne	.+4      	; 0x1d0 <pinChange+0x40>
		  PORTA &= ~(1<<PA5); 
     1cc:	dd 98       	cbi	0x1b, 5	; 27
     1ce:	08 95       	ret
		else if(a == eS_PORTA6)
     1d0:	86 30       	cpi	r24, 0x06	; 6
     1d2:	91 05       	cpc	r25, r1
     1d4:	11 f4       	brne	.+4      	; 0x1da <pinChange+0x4a>
		  PORTA &= ~(1<<PA6);  
     1d6:	de 98       	cbi	0x1b, 6	; 27
     1d8:	08 95       	ret
		else if(a == eS_PORTA7)
     1da:	87 30       	cpi	r24, 0x07	; 7
     1dc:	91 05       	cpc	r25, r1
     1de:	11 f4       	brne	.+4      	; 0x1e4 <pinChange+0x54>
		  PORTA &= ~(1<<PA7);
     1e0:	df 98       	cbi	0x1b, 7	; 27
     1e2:	08 95       	ret
		else if(a == eS_PORTB0)
     1e4:	8a 30       	cpi	r24, 0x0A	; 10
     1e6:	91 05       	cpc	r25, r1
     1e8:	11 f4       	brne	.+4      	; 0x1ee <pinChange+0x5e>
		  PORTB &= ~(1<<PB0);  
     1ea:	c0 98       	cbi	0x18, 0	; 24
     1ec:	08 95       	ret
		else if(a == eS_PORTB1)
     1ee:	8b 30       	cpi	r24, 0x0B	; 11
     1f0:	91 05       	cpc	r25, r1
     1f2:	11 f4       	brne	.+4      	; 0x1f8 <pinChange+0x68>
		  PORTB &= ~(1<<PB1);
     1f4:	c1 98       	cbi	0x18, 1	; 24
     1f6:	08 95       	ret
		else if(a == eS_PORTB2)
     1f8:	8c 30       	cpi	r24, 0x0C	; 12
     1fa:	91 05       	cpc	r25, r1
     1fc:	11 f4       	brne	.+4      	; 0x202 <pinChange+0x72>
		  PORTB &= ~(1<<PB2);  
     1fe:	c2 98       	cbi	0x18, 2	; 24
     200:	08 95       	ret
		else if(a == eS_PORTB3)
     202:	8d 30       	cpi	r24, 0x0D	; 13
     204:	91 05       	cpc	r25, r1
     206:	11 f4       	brne	.+4      	; 0x20c <pinChange+0x7c>
		  PORTB &= ~(1<<PB3);  
     208:	c3 98       	cbi	0x18, 3	; 24
     20a:	08 95       	ret
		else if(a == eS_PORTB4)
     20c:	8e 30       	cpi	r24, 0x0E	; 14
     20e:	91 05       	cpc	r25, r1
     210:	11 f4       	brne	.+4      	; 0x216 <pinChange+0x86>
		  PORTB &= ~(1<<PB4);  
     212:	c4 98       	cbi	0x18, 4	; 24
     214:	08 95       	ret
		else if(a == eS_PORTB5)
     216:	8f 30       	cpi	r24, 0x0F	; 15
     218:	91 05       	cpc	r25, r1
     21a:	11 f4       	brne	.+4      	; 0x220 <pinChange+0x90>
		  PORTB &= ~(1<<PB5);  
     21c:	c5 98       	cbi	0x18, 5	; 24
     21e:	08 95       	ret
		else if(a == eS_PORTB6)
     220:	80 31       	cpi	r24, 0x10	; 16
     222:	91 05       	cpc	r25, r1
     224:	11 f4       	brne	.+4      	; 0x22a <pinChange+0x9a>
		  PORTB &= ~(1<<PB6);  
     226:	c6 98       	cbi	0x18, 6	; 24
     228:	08 95       	ret
		else if(a == eS_PORTB7)
     22a:	81 31       	cpi	r24, 0x11	; 17
     22c:	91 05       	cpc	r25, r1
     22e:	11 f4       	brne	.+4      	; 0x234 <pinChange+0xa4>
		  PORTB &= ~(1<<PB7);
     230:	c7 98       	cbi	0x18, 7	; 24
     232:	08 95       	ret
		else if(a == eS_PORTC0)
     234:	84 31       	cpi	r24, 0x14	; 20
     236:	91 05       	cpc	r25, r1
     238:	11 f4       	brne	.+4      	; 0x23e <pinChange+0xae>
		  PORTC &= ~(1<<PC0);   
     23a:	a8 98       	cbi	0x15, 0	; 21
     23c:	08 95       	ret
		else if(a == eS_PORTC1)
     23e:	85 31       	cpi	r24, 0x15	; 21
     240:	91 05       	cpc	r25, r1
     242:	11 f4       	brne	.+4      	; 0x248 <pinChange+0xb8>
		  PORTC &= ~(1<<PC1); 
     244:	a9 98       	cbi	0x15, 1	; 21
     246:	08 95       	ret
		else if(a == eS_PORTC2)
     248:	86 31       	cpi	r24, 0x16	; 22
     24a:	91 05       	cpc	r25, r1
     24c:	11 f4       	brne	.+4      	; 0x252 <pinChange+0xc2>
		  PORTC &= ~(1<<PC2);
     24e:	aa 98       	cbi	0x15, 2	; 21
     250:	08 95       	ret
		else if(a == eS_PORTC3)
     252:	87 31       	cpi	r24, 0x17	; 23
     254:	91 05       	cpc	r25, r1
     256:	11 f4       	brne	.+4      	; 0x25c <pinChange+0xcc>
		  PORTC &= ~(1<<PC3);   
     258:	ab 98       	cbi	0x15, 3	; 21
     25a:	08 95       	ret
		else if(a == eS_PORTC4)
     25c:	88 31       	cpi	r24, 0x18	; 24
     25e:	91 05       	cpc	r25, r1
     260:	11 f4       	brne	.+4      	; 0x266 <pinChange+0xd6>
		  PORTC &= ~(1<<PC4);  
     262:	ac 98       	cbi	0x15, 4	; 21
     264:	08 95       	ret
		else if(a == eS_PORTC5)
     266:	89 31       	cpi	r24, 0x19	; 25
     268:	91 05       	cpc	r25, r1
     26a:	11 f4       	brne	.+4      	; 0x270 <pinChange+0xe0>
		  PORTC &= ~(1<<PC5);  
     26c:	ad 98       	cbi	0x15, 5	; 21
     26e:	08 95       	ret
        else if(a == eS_PORTC6)
     270:	8a 31       	cpi	r24, 0x1A	; 26
     272:	91 05       	cpc	r25, r1
     274:	11 f4       	brne	.+4      	; 0x27a <pinChange+0xea>
          PORTC &= ~(1<<PC6);		
     276:	ae 98       	cbi	0x15, 6	; 21
     278:	08 95       	ret
		else if(a == eS_PORTC7)
     27a:	8b 31       	cpi	r24, 0x1B	; 27
     27c:	91 05       	cpc	r25, r1
     27e:	11 f4       	brne	.+4      	; 0x284 <pinChange+0xf4>
		  PORTC &= ~(1<<PC7);
     280:	af 98       	cbi	0x15, 7	; 21
     282:	08 95       	ret
		else if(a == eS_PORTD0)
     284:	8e 31       	cpi	r24, 0x1E	; 30
     286:	91 05       	cpc	r25, r1
     288:	11 f4       	brne	.+4      	; 0x28e <pinChange+0xfe>
		  PORTD &= ~(1<<PD0);
     28a:	90 98       	cbi	0x12, 0	; 18
     28c:	08 95       	ret
		else if(a == eS_PORTD1)
     28e:	8f 31       	cpi	r24, 0x1F	; 31
     290:	91 05       	cpc	r25, r1
     292:	11 f4       	brne	.+4      	; 0x298 <pinChange+0x108>
		  PORTD &= ~(1<<PD1);  
     294:	91 98       	cbi	0x12, 1	; 18
     296:	08 95       	ret
		else if(a == eS_PORTD2)
     298:	80 32       	cpi	r24, 0x20	; 32
     29a:	91 05       	cpc	r25, r1
     29c:	11 f4       	brne	.+4      	; 0x2a2 <pinChange+0x112>
		  PORTD &= ~(1<<PD2);
     29e:	92 98       	cbi	0x12, 2	; 18
     2a0:	08 95       	ret
		else if(a == eS_PORTD3)
     2a2:	81 32       	cpi	r24, 0x21	; 33
     2a4:	91 05       	cpc	r25, r1
     2a6:	11 f4       	brne	.+4      	; 0x2ac <pinChange+0x11c>
		  PORTD &= ~(1<<PD3);
     2a8:	93 98       	cbi	0x12, 3	; 18
     2aa:	08 95       	ret
		else if(a == eS_PORTD4)
     2ac:	82 32       	cpi	r24, 0x22	; 34
     2ae:	91 05       	cpc	r25, r1
     2b0:	11 f4       	brne	.+4      	; 0x2b6 <pinChange+0x126>
		  PORTD &= ~(1<<PD4);
     2b2:	94 98       	cbi	0x12, 4	; 18
     2b4:	08 95       	ret
		else if(a == eS_PORTD5)
     2b6:	83 32       	cpi	r24, 0x23	; 35
     2b8:	91 05       	cpc	r25, r1
     2ba:	11 f4       	brne	.+4      	; 0x2c0 <pinChange+0x130>
		  PORTD &= ~(1<<PD5);
     2bc:	95 98       	cbi	0x12, 5	; 18
     2be:	08 95       	ret
		else if(a == eS_PORTD6)
     2c0:	84 32       	cpi	r24, 0x24	; 36
     2c2:	91 05       	cpc	r25, r1
     2c4:	11 f4       	brne	.+4      	; 0x2ca <pinChange+0x13a>
		  PORTD &= ~(1<<PD6);   
     2c6:	96 98       	cbi	0x12, 6	; 18
     2c8:	08 95       	ret
		else if(a == eS_PORTD7)
     2ca:	85 97       	sbiw	r24, 0x25	; 37
     2cc:	09 f0       	breq	.+2      	; 0x2d0 <pinChange+0x140>
     2ce:	9f c0       	rjmp	.+318    	; 0x40e <pinChange+0x27e>
		  PORTD &= ~(1<<PD7);           
     2d0:	97 98       	cbi	0x12, 7	; 18
     2d2:	08 95       	ret
	}
	else
	{
		if(a == eS_PORTA0)
     2d4:	00 97       	sbiw	r24, 0x00	; 0
     2d6:	11 f4       	brne	.+4      	; 0x2dc <pinChange+0x14c>
		  PORTA |= (1<<PA0);
     2d8:	d8 9a       	sbi	0x1b, 0	; 27
     2da:	08 95       	ret
		else if(a == eS_PORTA1)
     2dc:	81 30       	cpi	r24, 0x01	; 1
     2de:	91 05       	cpc	r25, r1
     2e0:	11 f4       	brne	.+4      	; 0x2e6 <pinChange+0x156>
		  PORTA |= (1<<PA1);
     2e2:	d9 9a       	sbi	0x1b, 1	; 27
     2e4:	08 95       	ret
		else if(a == eS_PORTA2)
     2e6:	82 30       	cpi	r24, 0x02	; 2
     2e8:	91 05       	cpc	r25, r1
     2ea:	11 f4       	brne	.+4      	; 0x2f0 <pinChange+0x160>
		  PORTA |= (1<<PA2);
     2ec:	da 9a       	sbi	0x1b, 2	; 27
     2ee:	08 95       	ret
		else if(a == eS_PORTA3)
     2f0:	83 30       	cpi	r24, 0x03	; 3
     2f2:	91 05       	cpc	r25, r1
     2f4:	11 f4       	brne	.+4      	; 0x2fa <pinChange+0x16a>
		  PORTA |= (1<<PA3);
     2f6:	db 9a       	sbi	0x1b, 3	; 27
     2f8:	08 95       	ret
		else if(a == eS_PORTA4)
     2fa:	84 30       	cpi	r24, 0x04	; 4
     2fc:	91 05       	cpc	r25, r1
     2fe:	11 f4       	brne	.+4      	; 0x304 <pinChange+0x174>
		  PORTA |= (1<<PA4);
     300:	dc 9a       	sbi	0x1b, 4	; 27
     302:	08 95       	ret
		else if(a == eS_PORTA5)
     304:	85 30       	cpi	r24, 0x05	; 5
     306:	91 05       	cpc	r25, r1
     308:	11 f4       	brne	.+4      	; 0x30e <pinChange+0x17e>
		  PORTA |= (1<<PA5);
     30a:	dd 9a       	sbi	0x1b, 5	; 27
     30c:	08 95       	ret
		else if(a == eS_PORTA6)
     30e:	86 30       	cpi	r24, 0x06	; 6
     310:	91 05       	cpc	r25, r1
     312:	11 f4       	brne	.+4      	; 0x318 <pinChange+0x188>
		  PORTA |= (1<<PA6);
     314:	de 9a       	sbi	0x1b, 6	; 27
     316:	08 95       	ret
		else if(a == eS_PORTA7)
     318:	87 30       	cpi	r24, 0x07	; 7
     31a:	91 05       	cpc	r25, r1
     31c:	11 f4       	brne	.+4      	; 0x322 <pinChange+0x192>
		  PORTA |= (1<<PA7);
     31e:	df 9a       	sbi	0x1b, 7	; 27
     320:	08 95       	ret
		else if(a == eS_PORTB0)
     322:	8a 30       	cpi	r24, 0x0A	; 10
     324:	91 05       	cpc	r25, r1
     326:	11 f4       	brne	.+4      	; 0x32c <pinChange+0x19c>
	  	  PORTB |= (1<<PB0);
     328:	c0 9a       	sbi	0x18, 0	; 24
     32a:	08 95       	ret
		else if(a == eS_PORTB1)
     32c:	8b 30       	cpi	r24, 0x0B	; 11
     32e:	91 05       	cpc	r25, r1
     330:	11 f4       	brne	.+4      	; 0x336 <pinChange+0x1a6>
		  PORTB |= (1<<PB1);
     332:	c1 9a       	sbi	0x18, 1	; 24
     334:	08 95       	ret
		else if(a == eS_PORTB2)
     336:	8c 30       	cpi	r24, 0x0C	; 12
     338:	91 05       	cpc	r25, r1
     33a:	11 f4       	brne	.+4      	; 0x340 <pinChange+0x1b0>
		  PORTB |= (1<<PB2);
     33c:	c2 9a       	sbi	0x18, 2	; 24
     33e:	08 95       	ret
		else if(a == eS_PORTB3)
     340:	8d 30       	cpi	r24, 0x0D	; 13
     342:	91 05       	cpc	r25, r1
     344:	11 f4       	brne	.+4      	; 0x34a <pinChange+0x1ba>
		  PORTB |= (1<<PB3);
     346:	c3 9a       	sbi	0x18, 3	; 24
     348:	08 95       	ret
		else if(a == eS_PORTB4)
     34a:	8e 30       	cpi	r24, 0x0E	; 14
     34c:	91 05       	cpc	r25, r1
     34e:	11 f4       	brne	.+4      	; 0x354 <pinChange+0x1c4>
		  PORTB |= (1<<PB4);
     350:	c4 9a       	sbi	0x18, 4	; 24
     352:	08 95       	ret
		else if(a == eS_PORTB5)
     354:	8f 30       	cpi	r24, 0x0F	; 15
     356:	91 05       	cpc	r25, r1
     358:	11 f4       	brne	.+4      	; 0x35e <pinChange+0x1ce>
		  PORTB |= (1<<PB5);
     35a:	c5 9a       	sbi	0x18, 5	; 24
     35c:	08 95       	ret
		else if(a == eS_PORTB6)
     35e:	80 31       	cpi	r24, 0x10	; 16
     360:	91 05       	cpc	r25, r1
     362:	11 f4       	brne	.+4      	; 0x368 <pinChange+0x1d8>
		  PORTB |= (1<<PB6);
     364:	c6 9a       	sbi	0x18, 6	; 24
     366:	08 95       	ret
		else if(a == eS_PORTB7)
     368:	81 31       	cpi	r24, 0x11	; 17
     36a:	91 05       	cpc	r25, r1
     36c:	11 f4       	brne	.+4      	; 0x372 <pinChange+0x1e2>
		  PORTB |= (1<<PB7);
     36e:	c7 9a       	sbi	0x18, 7	; 24
     370:	08 95       	ret
		else if(a == eS_PORTC0)
     372:	84 31       	cpi	r24, 0x14	; 20
     374:	91 05       	cpc	r25, r1
     376:	11 f4       	brne	.+4      	; 0x37c <pinChange+0x1ec>
		  PORTC |= (1<<PC0);
     378:	a8 9a       	sbi	0x15, 0	; 21
     37a:	08 95       	ret
		else if(a == eS_PORTC1)
     37c:	85 31       	cpi	r24, 0x15	; 21
     37e:	91 05       	cpc	r25, r1
     380:	11 f4       	brne	.+4      	; 0x386 <pinChange+0x1f6>
		  PORTC |= (1<<PC1);
     382:	a9 9a       	sbi	0x15, 1	; 21
     384:	08 95       	ret
		else if(a == eS_PORTC2)
     386:	86 31       	cpi	r24, 0x16	; 22
     388:	91 05       	cpc	r25, r1
     38a:	11 f4       	brne	.+4      	; 0x390 <pinChange+0x200>
	  	  PORTC |= (1<<PC2);
     38c:	aa 9a       	sbi	0x15, 2	; 21
     38e:	08 95       	ret
		else if(a == eS_PORTC3)
     390:	87 31       	cpi	r24, 0x17	; 23
     392:	91 05       	cpc	r25, r1
     394:	11 f4       	brne	.+4      	; 0x39a <pinChange+0x20a>
		  PORTC |= (1<<PC3);
     396:	ab 9a       	sbi	0x15, 3	; 21
     398:	08 95       	ret
		else if(a == eS_PORTC4)
     39a:	88 31       	cpi	r24, 0x18	; 24
     39c:	91 05       	cpc	r25, r1
     39e:	11 f4       	brne	.+4      	; 0x3a4 <pinChange+0x214>
		  PORTC |= (1<<PC4);
     3a0:	ac 9a       	sbi	0x15, 4	; 21
     3a2:	08 95       	ret
		else if(a == eS_PORTC5)
     3a4:	89 31       	cpi	r24, 0x19	; 25
     3a6:	91 05       	cpc	r25, r1
     3a8:	11 f4       	brne	.+4      	; 0x3ae <pinChange+0x21e>
		  PORTC |= (1<<PC5);
     3aa:	ad 9a       	sbi	0x15, 5	; 21
     3ac:	08 95       	ret
		else if(a == eS_PORTC6)
     3ae:	8a 31       	cpi	r24, 0x1A	; 26
     3b0:	91 05       	cpc	r25, r1
     3b2:	11 f4       	brne	.+4      	; 0x3b8 <pinChange+0x228>
		  PORTC |= (1<<PC6);  
     3b4:	ae 9a       	sbi	0x15, 6	; 21
     3b6:	08 95       	ret
		else if(a == eS_PORTC7)
     3b8:	8b 31       	cpi	r24, 0x1B	; 27
     3ba:	91 05       	cpc	r25, r1
     3bc:	11 f4       	brne	.+4      	; 0x3c2 <pinChange+0x232>
		  PORTC |= (1<<PC7);
     3be:	af 9a       	sbi	0x15, 7	; 21
     3c0:	08 95       	ret
		else if(a == eS_PORTD0)
     3c2:	8e 31       	cpi	r24, 0x1E	; 30
     3c4:	91 05       	cpc	r25, r1
     3c6:	11 f4       	brne	.+4      	; 0x3cc <pinChange+0x23c>
		  PORTD |= (1<<PD0);
     3c8:	90 9a       	sbi	0x12, 0	; 18
     3ca:	08 95       	ret
		else if(a == eS_PORTD1)
     3cc:	8f 31       	cpi	r24, 0x1F	; 31
     3ce:	91 05       	cpc	r25, r1
     3d0:	11 f4       	brne	.+4      	; 0x3d6 <pinChange+0x246>
		  PORTD |= (1<<PD1);
     3d2:	91 9a       	sbi	0x12, 1	; 18
     3d4:	08 95       	ret
		else if(a == eS_PORTD2)
     3d6:	80 32       	cpi	r24, 0x20	; 32
     3d8:	91 05       	cpc	r25, r1
     3da:	11 f4       	brne	.+4      	; 0x3e0 <pinChange+0x250>
		  PORTD |= (1<<PD2);
     3dc:	92 9a       	sbi	0x12, 2	; 18
     3de:	08 95       	ret
		else if(a == eS_PORTD3)
     3e0:	81 32       	cpi	r24, 0x21	; 33
     3e2:	91 05       	cpc	r25, r1
     3e4:	11 f4       	brne	.+4      	; 0x3ea <pinChange+0x25a>
		  PORTD |= (1<<PD3);
     3e6:	93 9a       	sbi	0x12, 3	; 18
     3e8:	08 95       	ret
		else if(a == eS_PORTD4)
     3ea:	82 32       	cpi	r24, 0x22	; 34
     3ec:	91 05       	cpc	r25, r1
     3ee:	11 f4       	brne	.+4      	; 0x3f4 <pinChange+0x264>
		  PORTD |= (1<<PD4);
     3f0:	94 9a       	sbi	0x12, 4	; 18
     3f2:	08 95       	ret
		else if(a == eS_PORTD5)
     3f4:	83 32       	cpi	r24, 0x23	; 35
     3f6:	91 05       	cpc	r25, r1
     3f8:	11 f4       	brne	.+4      	; 0x3fe <pinChange+0x26e>
		  PORTD |= (1<<PD5);
     3fa:	95 9a       	sbi	0x12, 5	; 18
     3fc:	08 95       	ret
		else if(a == eS_PORTD6)
     3fe:	84 32       	cpi	r24, 0x24	; 36
     400:	91 05       	cpc	r25, r1
     402:	11 f4       	brne	.+4      	; 0x408 <pinChange+0x278>
		  PORTD |= (1<<PD6);
     404:	96 9a       	sbi	0x12, 6	; 18
     406:	08 95       	ret
		else if(a == eS_PORTD7)
     408:	85 97       	sbiw	r24, 0x25	; 37
     40a:	09 f4       	brne	.+2      	; 0x40e <pinChange+0x27e>
		  PORTD |= (1<<PD7);
     40c:	97 9a       	sbi	0x12, 7	; 18
     40e:	08 95       	ret

00000410 <Lcd4_Port>:
//End LCD 8 Bit Interfacing Functions

//LCD 4 Bit Interfacing Functions

void Lcd4_Port(char a)
{
     410:	cf 93       	push	r28
     412:	c8 2f       	mov	r28, r24
	if(a & 1)
     414:	80 ff       	sbrs	r24, 0
     416:	07 c0       	rjmp	.+14     	; 0x426 <Lcd4_Port+0x16>
	pinChange(D4,1);
     418:	61 e0       	ldi	r22, 0x01	; 1
     41a:	70 e0       	ldi	r23, 0x00	; 0
     41c:	82 e2       	ldi	r24, 0x22	; 34
     41e:	90 e0       	ldi	r25, 0x00	; 0
     420:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     424:	06 c0       	rjmp	.+12     	; 0x432 <Lcd4_Port+0x22>
	else
	pinChange(D4,0);
     426:	60 e0       	ldi	r22, 0x00	; 0
     428:	70 e0       	ldi	r23, 0x00	; 0
     42a:	82 e2       	ldi	r24, 0x22	; 34
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
	
	if(a & 2)
     432:	c1 ff       	sbrs	r28, 1
     434:	07 c0       	rjmp	.+14     	; 0x444 <Lcd4_Port+0x34>
	pinChange(D5,1);
     436:	61 e0       	ldi	r22, 0x01	; 1
     438:	70 e0       	ldi	r23, 0x00	; 0
     43a:	83 e2       	ldi	r24, 0x23	; 35
     43c:	90 e0       	ldi	r25, 0x00	; 0
     43e:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     442:	06 c0       	rjmp	.+12     	; 0x450 <Lcd4_Port+0x40>
	else
	pinChange(D5,0);
     444:	60 e0       	ldi	r22, 0x00	; 0
     446:	70 e0       	ldi	r23, 0x00	; 0
     448:	83 e2       	ldi	r24, 0x23	; 35
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
	
	if(a & 4)
     450:	c2 ff       	sbrs	r28, 2
     452:	07 c0       	rjmp	.+14     	; 0x462 <Lcd4_Port+0x52>
	pinChange(D6,1);
     454:	61 e0       	ldi	r22, 0x01	; 1
     456:	70 e0       	ldi	r23, 0x00	; 0
     458:	84 e2       	ldi	r24, 0x24	; 36
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     460:	06 c0       	rjmp	.+12     	; 0x46e <Lcd4_Port+0x5e>
	else
	pinChange(D6,0);
     462:	60 e0       	ldi	r22, 0x00	; 0
     464:	70 e0       	ldi	r23, 0x00	; 0
     466:	84 e2       	ldi	r24, 0x24	; 36
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
	
	if(a & 8)
     46e:	c3 ff       	sbrs	r28, 3
     470:	07 c0       	rjmp	.+14     	; 0x480 <Lcd4_Port+0x70>
	pinChange(D7,1);
     472:	61 e0       	ldi	r22, 0x01	; 1
     474:	70 e0       	ldi	r23, 0x00	; 0
     476:	85 e2       	ldi	r24, 0x25	; 37
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     47e:	06 c0       	rjmp	.+12     	; 0x48c <Lcd4_Port+0x7c>
	else
	pinChange(D7,0);
     480:	60 e0       	ldi	r22, 0x00	; 0
     482:	70 e0       	ldi	r23, 0x00	; 0
     484:	85 e2       	ldi	r24, 0x25	; 37
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
}
     48c:	cf 91       	pop	r28
     48e:	08 95       	ret

00000490 <Lcd4_Cmd>:
void Lcd4_Cmd(char a)
{
     490:	cf 93       	push	r28
     492:	c8 2f       	mov	r28, r24
	pinChange(RS,0);             // => RS = 0
     494:	60 e0       	ldi	r22, 0x00	; 0
     496:	70 e0       	ldi	r23, 0x00	; 0
     498:	80 e2       	ldi	r24, 0x20	; 32
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
	Lcd4_Port(a);
     4a0:	8c 2f       	mov	r24, r28
     4a2:	0e 94 08 02 	call	0x410	; 0x410 <Lcd4_Port>
	pinChange(EN,1);            // => E = 1
     4a6:	61 e0       	ldi	r22, 0x01	; 1
     4a8:	70 e0       	ldi	r23, 0x00	; 0
     4aa:	81 e2       	ldi	r24, 0x21	; 33
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4b2:	89 ef       	ldi	r24, 0xF9	; 249
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	01 97       	sbiw	r24, 0x01	; 1
     4b8:	f1 f7       	brne	.-4      	; 0x4b6 <Lcd4_Cmd+0x26>
     4ba:	00 c0       	rjmp	.+0      	; 0x4bc <Lcd4_Cmd+0x2c>
     4bc:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);             // => E = 0
     4be:	60 e0       	ldi	r22, 0x00	; 0
     4c0:	70 e0       	ldi	r23, 0x00	; 0
     4c2:	81 e2       	ldi	r24, 0x21	; 33
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     4ca:	89 ef       	ldi	r24, 0xF9	; 249
     4cc:	90 e0       	ldi	r25, 0x00	; 0
     4ce:	01 97       	sbiw	r24, 0x01	; 1
     4d0:	f1 f7       	brne	.-4      	; 0x4ce <Lcd4_Cmd+0x3e>
     4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <Lcd4_Cmd+0x44>
     4d4:	00 00       	nop
	_delay_ms(1);
}
     4d6:	cf 91       	pop	r28
     4d8:	08 95       	ret

000004da <Lcd4_Clear>:

void Lcd4_Clear()
{
	Lcd4_Cmd(0);
     4da:	80 e0       	ldi	r24, 0x00	; 0
     4dc:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	Lcd4_Cmd(1);
     4e0:	81 e0       	ldi	r24, 0x01	; 1
     4e2:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
     4e6:	08 95       	ret

000004e8 <Lcd4_Set_Cursor>:
}

void Lcd4_Set_Cursor(char a, char b)
{
     4e8:	cf 93       	push	r28
     4ea:	c6 2f       	mov	r28, r22
	char temp,z,y;
	if(a == 1)
     4ec:	81 30       	cpi	r24, 0x01	; 1
     4ee:	59 f4       	brne	.+22     	; 0x506 <Lcd4_Set_Cursor+0x1e>
	{
		temp = 0x80 + b;
     4f0:	80 e8       	ldi	r24, 0x80	; 128
     4f2:	86 0f       	add	r24, r22
		z = temp>>4;
		y = (0x80+b) & 0x0F;
		Lcd4_Cmd(z);
     4f4:	82 95       	swap	r24
     4f6:	8f 70       	andi	r24, 0x0F	; 15
     4f8:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
		Lcd4_Cmd(y);
     4fc:	8c 2f       	mov	r24, r28
     4fe:	8f 70       	andi	r24, 0x0F	; 15
     500:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
     504:	0c c0       	rjmp	.+24     	; 0x51e <Lcd4_Set_Cursor+0x36>
	}
	else if(a == 2)
     506:	82 30       	cpi	r24, 0x02	; 2
     508:	51 f4       	brne	.+20     	; 0x51e <Lcd4_Set_Cursor+0x36>
	{
		temp = 0xC0 + b;
     50a:	80 ec       	ldi	r24, 0xC0	; 192
     50c:	86 0f       	add	r24, r22
		z = temp>>4;
		y = (0xC0+b) & 0x0F;
		Lcd4_Cmd(z);
     50e:	82 95       	swap	r24
     510:	8f 70       	andi	r24, 0x0F	; 15
     512:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
		Lcd4_Cmd(y);
     516:	8c 2f       	mov	r24, r28
     518:	8f 70       	andi	r24, 0x0F	; 15
     51a:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	}
}
     51e:	cf 91       	pop	r28
     520:	08 95       	ret

00000522 <Lcd4_Init>:

void Lcd4_Init()
{
	Lcd4_Port(0x00);
     522:	80 e0       	ldi	r24, 0x00	; 0
     524:	0e 94 08 02 	call	0x410	; 0x410 <Lcd4_Port>
     528:	87 e8       	ldi	r24, 0x87	; 135
     52a:	93 e1       	ldi	r25, 0x13	; 19
     52c:	01 97       	sbiw	r24, 0x01	; 1
     52e:	f1 f7       	brne	.-4      	; 0x52c <Lcd4_Init+0xa>
     530:	00 c0       	rjmp	.+0      	; 0x532 <Lcd4_Init+0x10>
     532:	00 00       	nop
	_delay_ms(20);
	///////////// Reset process from datasheet /////////
	Lcd4_Cmd(0x03);
     534:	83 e0       	ldi	r24, 0x03	; 3
     536:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
     53a:	81 ee       	ldi	r24, 0xE1	; 225
     53c:	94 e0       	ldi	r25, 0x04	; 4
     53e:	01 97       	sbiw	r24, 0x01	; 1
     540:	f1 f7       	brne	.-4      	; 0x53e <Lcd4_Init+0x1c>
     542:	00 c0       	rjmp	.+0      	; 0x544 <Lcd4_Init+0x22>
     544:	00 00       	nop
	_delay_ms(5);
	Lcd4_Cmd(0x03);
     546:	83 e0       	ldi	r24, 0x03	; 3
     548:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
     54c:	8d eb       	ldi	r24, 0xBD	; 189
     54e:	9a e0       	ldi	r25, 0x0A	; 10
     550:	01 97       	sbiw	r24, 0x01	; 1
     552:	f1 f7       	brne	.-4      	; 0x550 <Lcd4_Init+0x2e>
     554:	00 c0       	rjmp	.+0      	; 0x556 <Lcd4_Init+0x34>
     556:	00 00       	nop
	_delay_ms(11);
	Lcd4_Cmd(0x03);
     558:	83 e0       	ldi	r24, 0x03	; 3
     55a:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	/////////////////////////////////////////////////////
	Lcd4_Cmd(0x02);
     55e:	82 e0       	ldi	r24, 0x02	; 2
     560:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	Lcd4_Cmd(0x02);
     564:	82 e0       	ldi	r24, 0x02	; 2
     566:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	Lcd4_Cmd(0x08);
     56a:	88 e0       	ldi	r24, 0x08	; 8
     56c:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	Lcd4_Cmd(0x00);
     570:	80 e0       	ldi	r24, 0x00	; 0
     572:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	Lcd4_Cmd(0x0C);
     576:	8c e0       	ldi	r24, 0x0C	; 12
     578:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	Lcd4_Cmd(0x00);
     57c:	80 e0       	ldi	r24, 0x00	; 0
     57e:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
	Lcd4_Cmd(0x06);
     582:	86 e0       	ldi	r24, 0x06	; 6
     584:	0e 94 48 02 	call	0x490	; 0x490 <Lcd4_Cmd>
     588:	08 95       	ret

0000058a <Lcd4_Write_Char>:
}

void Lcd4_Write_Char(char a)
{
     58a:	cf 93       	push	r28
     58c:	c8 2f       	mov	r28, r24
	char temp,y;
	temp = a&0x0F;
	y = a&0xF0;
	pinChange(RS,1);             // => RS = 1
     58e:	61 e0       	ldi	r22, 0x01	; 1
     590:	70 e0       	ldi	r23, 0x00	; 0
     592:	80 e2       	ldi	r24, 0x20	; 32
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
	Lcd4_Port(y>>4);             //Data transfer
     59a:	8c 2f       	mov	r24, r28
     59c:	82 95       	swap	r24
     59e:	8f 70       	andi	r24, 0x0F	; 15
     5a0:	0e 94 08 02 	call	0x410	; 0x410 <Lcd4_Port>
	pinChange(EN,1);
     5a4:	61 e0       	ldi	r22, 0x01	; 1
     5a6:	70 e0       	ldi	r23, 0x00	; 0
     5a8:	81 e2       	ldi	r24, 0x21	; 33
     5aa:	90 e0       	ldi	r25, 0x00	; 0
     5ac:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     5b0:	89 ef       	ldi	r24, 0xF9	; 249
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	01 97       	sbiw	r24, 0x01	; 1
     5b6:	f1 f7       	brne	.-4      	; 0x5b4 <Lcd4_Write_Char+0x2a>
     5b8:	00 c0       	rjmp	.+0      	; 0x5ba <Lcd4_Write_Char+0x30>
     5ba:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);
     5bc:	60 e0       	ldi	r22, 0x00	; 0
     5be:	70 e0       	ldi	r23, 0x00	; 0
     5c0:	81 e2       	ldi	r24, 0x21	; 33
     5c2:	90 e0       	ldi	r25, 0x00	; 0
     5c4:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     5c8:	89 ef       	ldi	r24, 0xF9	; 249
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	01 97       	sbiw	r24, 0x01	; 1
     5ce:	f1 f7       	brne	.-4      	; 0x5cc <Lcd4_Write_Char+0x42>
     5d0:	00 c0       	rjmp	.+0      	; 0x5d2 <Lcd4_Write_Char+0x48>
     5d2:	00 00       	nop
	_delay_ms(1);
	Lcd4_Port(temp);
     5d4:	8c 2f       	mov	r24, r28
     5d6:	8f 70       	andi	r24, 0x0F	; 15
     5d8:	0e 94 08 02 	call	0x410	; 0x410 <Lcd4_Port>
	pinChange(EN,1);
     5dc:	61 e0       	ldi	r22, 0x01	; 1
     5de:	70 e0       	ldi	r23, 0x00	; 0
     5e0:	81 e2       	ldi	r24, 0x21	; 33
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     5e8:	89 ef       	ldi	r24, 0xF9	; 249
     5ea:	90 e0       	ldi	r25, 0x00	; 0
     5ec:	01 97       	sbiw	r24, 0x01	; 1
     5ee:	f1 f7       	brne	.-4      	; 0x5ec <Lcd4_Write_Char+0x62>
     5f0:	00 c0       	rjmp	.+0      	; 0x5f2 <Lcd4_Write_Char+0x68>
     5f2:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);
     5f4:	60 e0       	ldi	r22, 0x00	; 0
     5f6:	70 e0       	ldi	r23, 0x00	; 0
     5f8:	81 e2       	ldi	r24, 0x21	; 33
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     600:	89 ef       	ldi	r24, 0xF9	; 249
     602:	90 e0       	ldi	r25, 0x00	; 0
     604:	01 97       	sbiw	r24, 0x01	; 1
     606:	f1 f7       	brne	.-4      	; 0x604 <Lcd4_Write_Char+0x7a>
     608:	00 c0       	rjmp	.+0      	; 0x60a <Lcd4_Write_Char+0x80>
     60a:	00 00       	nop
	_delay_ms(1);
}
     60c:	cf 91       	pop	r28
     60e:	08 95       	ret

00000610 <Lcd4_Write_String>:

void Lcd4_Write_String(char *a)
{
     610:	cf 93       	push	r28
     612:	df 93       	push	r29
     614:	ec 01       	movw	r28, r24
	int i;
	for(i=0;a[i]!='\0';i++)
     616:	88 81       	ld	r24, Y
     618:	88 23       	and	r24, r24
     61a:	31 f0       	breq	.+12     	; 0x628 <Lcd4_Write_String+0x18>
     61c:	21 96       	adiw	r28, 0x01	; 1
	Lcd4_Write_Char(a[i]);
     61e:	0e 94 c5 02 	call	0x58a	; 0x58a <Lcd4_Write_Char>
}

void Lcd4_Write_String(char *a)
{
	int i;
	for(i=0;a[i]!='\0';i++)
     622:	89 91       	ld	r24, Y+
     624:	81 11       	cpse	r24, r1
     626:	fb cf       	rjmp	.-10     	; 0x61e <Lcd4_Write_String+0xe>
	Lcd4_Write_Char(a[i]);
}
     628:	df 91       	pop	r29
     62a:	cf 91       	pop	r28
     62c:	08 95       	ret

0000062e <GSM_Send>:
	TC = C;
	TD = D;
	return ;
}
void GSM_Send (char Number[],char Messsge[])
{
     62e:	cf 93       	push	r28
     630:	df 93       	push	r29
     632:	c6 2f       	mov	r28, r22
     634:	d7 2f       	mov	r29, r23
	//---------------------GSM Send A Message ---------------------------------------------
	
	sprintf(msg3,"AT+CMGS=%c%s%c%c",DoubleQuote,Number,DoubleQuote,Enter);
     636:	1f 92       	push	r1
     638:	2d e0       	ldi	r18, 0x0D	; 13
     63a:	2f 93       	push	r18
     63c:	1f 92       	push	r1
     63e:	22 e2       	ldi	r18, 0x22	; 34
     640:	2f 93       	push	r18
     642:	9f 93       	push	r25
     644:	8f 93       	push	r24
     646:	1f 92       	push	r1
     648:	2f 93       	push	r18
     64a:	84 e6       	ldi	r24, 0x64	; 100
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	9f 93       	push	r25
     650:	8f 93       	push	r24
     652:	8c e8       	ldi	r24, 0x8C	; 140
     654:	93 e0       	ldi	r25, 0x03	; 3
     656:	9f 93       	push	r25
     658:	8f 93       	push	r24
     65a:	0e 94 d6 09 	call	0x13ac	; 0x13ac <sprintf>
	sprintf(msg4,"%s%c",Messsge,CTRLZ);
     65e:	1f 92       	push	r1
     660:	8a e1       	ldi	r24, 0x1A	; 26
     662:	8f 93       	push	r24
     664:	df 93       	push	r29
     666:	cf 93       	push	r28
     668:	85 e7       	ldi	r24, 0x75	; 117
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	9f 93       	push	r25
     66e:	8f 93       	push	r24
     670:	81 eb       	ldi	r24, 0xB1	; 177
     672:	94 e0       	ldi	r25, 0x04	; 4
     674:	9f 93       	push	r25
     676:	8f 93       	push	r24
     678:	0e 94 d6 09 	call	0x13ac	; 0x13ac <sprintf>
	
	Tx_puts(msg1);
     67c:	8e e6       	ldi	r24, 0x6E	; 110
     67e:	93 e0       	ldi	r25, 0x03	; 3
     680:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     684:	2f e9       	ldi	r18, 0x9F	; 159
     686:	86 e8       	ldi	r24, 0x86	; 134
     688:	91 e0       	ldi	r25, 0x01	; 1
     68a:	21 50       	subi	r18, 0x01	; 1
     68c:	80 40       	sbci	r24, 0x00	; 0
     68e:	90 40       	sbci	r25, 0x00	; 0
     690:	e1 f7       	brne	.-8      	; 0x68a <GSM_Send+0x5c>
     692:	00 c0       	rjmp	.+0      	; 0x694 <GSM_Send+0x66>
     694:	00 00       	nop
	_delay_ms(500);
	Tx_puts(msg2);
     696:	83 e6       	ldi	r24, 0x63	; 99
     698:	93 e0       	ldi	r25, 0x03	; 3
     69a:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     69e:	2f e9       	ldi	r18, 0x9F	; 159
     6a0:	86 e8       	ldi	r24, 0x86	; 134
     6a2:	91 e0       	ldi	r25, 0x01	; 1
     6a4:	21 50       	subi	r18, 0x01	; 1
     6a6:	80 40       	sbci	r24, 0x00	; 0
     6a8:	90 40       	sbci	r25, 0x00	; 0
     6aa:	e1 f7       	brne	.-8      	; 0x6a4 <GSM_Send+0x76>
     6ac:	00 c0       	rjmp	.+0      	; 0x6ae <GSM_Send+0x80>
     6ae:	00 00       	nop
	_delay_ms(500);
	Tx_puts(msg3);
     6b0:	8c e8       	ldi	r24, 0x8C	; 140
     6b2:	93 e0       	ldi	r25, 0x03	; 3
     6b4:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     6b8:	2f e9       	ldi	r18, 0x9F	; 159
     6ba:	86 e8       	ldi	r24, 0x86	; 134
     6bc:	91 e0       	ldi	r25, 0x01	; 1
     6be:	21 50       	subi	r18, 0x01	; 1
     6c0:	80 40       	sbci	r24, 0x00	; 0
     6c2:	90 40       	sbci	r25, 0x00	; 0
     6c4:	e1 f7       	brne	.-8      	; 0x6be <GSM_Send+0x90>
     6c6:	00 c0       	rjmp	.+0      	; 0x6c8 <GSM_Send+0x9a>
     6c8:	00 00       	nop
	_delay_ms(500);
	Tx_puts(msg4);
     6ca:	81 eb       	ldi	r24, 0xB1	; 177
     6cc:	94 e0       	ldi	r25, 0x04	; 4
     6ce:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
	Tx_putc(Enter);
     6d2:	8d e0       	ldi	r24, 0x0D	; 13
     6d4:	0e 94 88 00 	call	0x110	; 0x110 <Tx_putc>
     6d8:	2f e7       	ldi	r18, 0x7F	; 127
     6da:	8a e1       	ldi	r24, 0x1A	; 26
     6dc:	96 e0       	ldi	r25, 0x06	; 6
     6de:	21 50       	subi	r18, 0x01	; 1
     6e0:	80 40       	sbci	r24, 0x00	; 0
     6e2:	90 40       	sbci	r25, 0x00	; 0
     6e4:	e1 f7       	brne	.-8      	; 0x6de <GSM_Send+0xb0>
     6e6:	00 c0       	rjmp	.+0      	; 0x6e8 <GSM_Send+0xba>
     6e8:	00 00       	nop
	_delay_ms(2000);

	Lcd4_Clear();
     6ea:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
     6ee:	60 e0       	ldi	r22, 0x00	; 0
     6f0:	70 e0       	ldi	r23, 0x00	; 0
     6f2:	81 e0       	ldi	r24, 0x01	; 1
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	Lcd4_Write_String("Message Sent");
     6fa:	8a e7       	ldi	r24, 0x7A	; 122
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
     702:	2f e3       	ldi	r18, 0x3F	; 63
     704:	8d e0       	ldi	r24, 0x0D	; 13
     706:	93 e0       	ldi	r25, 0x03	; 3
     708:	21 50       	subi	r18, 0x01	; 1
     70a:	80 40       	sbci	r24, 0x00	; 0
     70c:	90 40       	sbci	r25, 0x00	; 0
     70e:	e1 f7       	brne	.-8      	; 0x708 <GSM_Send+0xda>
     710:	00 c0       	rjmp	.+0      	; 0x712 <GSM_Send+0xe4>
     712:	00 00       	nop
	_delay_ms(1000);
	Lcd4_Clear();
     714:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
     718:	8d b7       	in	r24, 0x3d	; 61
     71a:	9e b7       	in	r25, 0x3e	; 62
     71c:	44 96       	adiw	r24, 0x14	; 20
     71e:	0f b6       	in	r0, 0x3f	; 63
     720:	f8 94       	cli
     722:	9e bf       	out	0x3e, r25	; 62
     724:	0f be       	out	0x3f, r0	; 63
     726:	8d bf       	out	0x3d, r24	; 61
	return;
	//----------------------------------------------------------------------------------------
}
     728:	df 91       	pop	r29
     72a:	cf 91       	pop	r28
     72c:	08 95       	ret

0000072e <showResult>:
	}
	
}

void showResult (char A, char B , char C, char D)
{
     72e:	0f 93       	push	r16
     730:	1f 93       	push	r17
     732:	cf 93       	push	r28
     734:	df 93       	push	r29
     736:	c8 2f       	mov	r28, r24
     738:	d6 2f       	mov	r29, r22
     73a:	14 2f       	mov	r17, r20
     73c:	02 2f       	mov	r16, r18
	if (A != TA || B != TB || C != TC || D != TD)
     73e:	80 91 63 00 	lds	r24, 0x0063
     742:	c8 13       	cpse	r28, r24
     744:	0c c0       	rjmp	.+24     	; 0x75e <showResult+0x30>
     746:	80 91 62 00 	lds	r24, 0x0062
     74a:	68 13       	cpse	r22, r24
     74c:	08 c0       	rjmp	.+16     	; 0x75e <showResult+0x30>
     74e:	80 91 61 00 	lds	r24, 0x0061
     752:	48 13       	cpse	r20, r24
     754:	04 c0       	rjmp	.+8      	; 0x75e <showResult+0x30>
     756:	80 91 60 00 	lds	r24, 0x0060
     75a:	28 17       	cp	r18, r24
     75c:	c9 f1       	breq	.+114    	; 0x7d0 <showResult+0xa2>
	{
		if (A == '1')
     75e:	c1 33       	cpi	r28, 0x31	; 49
     760:	11 f4       	brne	.+4      	; 0x766 <showResult+0x38>
		{
			WRITE_PORTB_BIT0(1);
     762:	c0 9a       	sbi	0x18, 0	; 24
     764:	03 c0       	rjmp	.+6      	; 0x76c <showResult+0x3e>
		}
		if (A == '0')
     766:	c0 33       	cpi	r28, 0x30	; 48
     768:	09 f4       	brne	.+2      	; 0x76c <showResult+0x3e>
		{
			WRITE_PORTB_BIT0(0);
     76a:	c0 98       	cbi	0x18, 0	; 24
		}
		if (B == '1')
     76c:	d1 33       	cpi	r29, 0x31	; 49
     76e:	11 f4       	brne	.+4      	; 0x774 <showResult+0x46>
		{
			WRITE_PORTB_BIT1(1);
     770:	c1 9a       	sbi	0x18, 1	; 24
     772:	03 c0       	rjmp	.+6      	; 0x77a <showResult+0x4c>
		}
		if (B == '0')
     774:	d0 33       	cpi	r29, 0x30	; 48
     776:	09 f4       	brne	.+2      	; 0x77a <showResult+0x4c>
		{
			WRITE_PORTB_BIT1(0);
     778:	c1 98       	cbi	0x18, 1	; 24
		}
		if (C == '1')
     77a:	11 33       	cpi	r17, 0x31	; 49
     77c:	11 f4       	brne	.+4      	; 0x782 <showResult+0x54>
		{
			WRITE_PORTB_BIT2(1);
     77e:	c2 9a       	sbi	0x18, 2	; 24
     780:	03 c0       	rjmp	.+6      	; 0x788 <showResult+0x5a>
		}
		if (C == '0')
     782:	10 33       	cpi	r17, 0x30	; 48
     784:	09 f4       	brne	.+2      	; 0x788 <showResult+0x5a>
		{
			WRITE_PORTB_BIT2(0);
     786:	c2 98       	cbi	0x18, 2	; 24
		}
		if (D == '1')
     788:	01 33       	cpi	r16, 0x31	; 49
     78a:	11 f4       	brne	.+4      	; 0x790 <showResult+0x62>
		{
			WRITE_PORTB_BIT3(1);
     78c:	c3 9a       	sbi	0x18, 3	; 24
     78e:	03 c0       	rjmp	.+6      	; 0x796 <showResult+0x68>
		}
		if (D == '0')
     790:	00 33       	cpi	r16, 0x30	; 48
     792:	09 f4       	brne	.+2      	; 0x796 <showResult+0x68>
		{
			WRITE_PORTB_BIT3(0);
     794:	c3 98       	cbi	0x18, 3	; 24
		}
		
		GSM_Send("09300093455","New Changes Are Made.");
     796:	67 e8       	ldi	r22, 0x87	; 135
     798:	70 e0       	ldi	r23, 0x00	; 0
     79a:	8d e9       	ldi	r24, 0x9D	; 157
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	0e 94 17 03 	call	0x62e	; 0x62e <GSM_Send>
		Lcd4_Clear();
     7a2:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
		Lcd4_Set_Cursor(1,0);
     7a6:	60 e0       	ldi	r22, 0x00	; 0
     7a8:	70 e0       	ldi	r23, 0x00	; 0
     7aa:	81 e0       	ldi	r24, 0x01	; 1
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
		Lcd4_Write_String("Changes Are Made");
     7b2:	89 ea       	ldi	r24, 0xA9	; 169
     7b4:	90 e0       	ldi	r25, 0x00	; 0
     7b6:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
     7ba:	2f e3       	ldi	r18, 0x3F	; 63
     7bc:	8d e0       	ldi	r24, 0x0D	; 13
     7be:	93 e0       	ldi	r25, 0x03	; 3
     7c0:	21 50       	subi	r18, 0x01	; 1
     7c2:	80 40       	sbci	r24, 0x00	; 0
     7c4:	90 40       	sbci	r25, 0x00	; 0
     7c6:	e1 f7       	brne	.-8      	; 0x7c0 <showResult+0x92>
     7c8:	00 c0       	rjmp	.+0      	; 0x7ca <showResult+0x9c>
     7ca:	00 00       	nop
		_delay_ms(1000);
		Lcd4_Clear();
     7cc:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	}
	
	TA = A;
     7d0:	c0 93 63 00 	sts	0x0063, r28
	TB = B;
     7d4:	d0 93 62 00 	sts	0x0062, r29
	TC = C;
     7d8:	10 93 61 00 	sts	0x0061, r17
	TD = D;
     7dc:	00 93 60 00 	sts	0x0060, r16
	return ;
}
     7e0:	df 91       	pop	r29
     7e2:	cf 91       	pop	r28
     7e4:	1f 91       	pop	r17
     7e6:	0f 91       	pop	r16
     7e8:	08 95       	ret

000007ea <GPRS_Connect>:
void GPRS_Connect()
{
	
	//---------------------GPRS Initialization--------------------------------------------------------

	Lcd4_Clear();
     7ea:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
     7ee:	60 e0       	ldi	r22, 0x00	; 0
     7f0:	70 e0       	ldi	r23, 0x00	; 0
     7f2:	81 e0       	ldi	r24, 0x01	; 1
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	Lcd4_Write_String("GPRS Connection");
     7fa:	8a eb       	ldi	r24, 0xBA	; 186
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>

	Tx_puts("AT\r");
     802:	8a ec       	ldi	r24, 0xCA	; 202
     804:	90 e0       	ldi	r25, 0x00	; 0
     806:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     80a:	2f e9       	ldi	r18, 0x9F	; 159
     80c:	86 e8       	ldi	r24, 0x86	; 134
     80e:	91 e0       	ldi	r25, 0x01	; 1
     810:	21 50       	subi	r18, 0x01	; 1
     812:	80 40       	sbci	r24, 0x00	; 0
     814:	90 40       	sbci	r25, 0x00	; 0
     816:	e1 f7       	brne	.-8      	; 0x810 <GPRS_Connect+0x26>
     818:	00 c0       	rjmp	.+0      	; 0x81a <GPRS_Connect+0x30>
     81a:	00 00       	nop
	_delay_ms(500);
	Tx_puts("AT\r");
     81c:	8a ec       	ldi	r24, 0xCA	; 202
     81e:	90 e0       	ldi	r25, 0x00	; 0
     820:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     824:	2f e9       	ldi	r18, 0x9F	; 159
     826:	86 e8       	ldi	r24, 0x86	; 134
     828:	91 e0       	ldi	r25, 0x01	; 1
     82a:	21 50       	subi	r18, 0x01	; 1
     82c:	80 40       	sbci	r24, 0x00	; 0
     82e:	90 40       	sbci	r25, 0x00	; 0
     830:	e1 f7       	brne	.-8      	; 0x82a <GPRS_Connect+0x40>
     832:	00 c0       	rjmp	.+0      	; 0x834 <GPRS_Connect+0x4a>
     834:	00 00       	nop
	_delay_ms(500);
	Tx_puts("AT\r");
     836:	8a ec       	ldi	r24, 0xCA	; 202
     838:	90 e0       	ldi	r25, 0x00	; 0
     83a:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     83e:	2f e9       	ldi	r18, 0x9F	; 159
     840:	86 e8       	ldi	r24, 0x86	; 134
     842:	91 e0       	ldi	r25, 0x01	; 1
     844:	21 50       	subi	r18, 0x01	; 1
     846:	80 40       	sbci	r24, 0x00	; 0
     848:	90 40       	sbci	r25, 0x00	; 0
     84a:	e1 f7       	brne	.-8      	; 0x844 <GPRS_Connect+0x5a>
     84c:	00 c0       	rjmp	.+0      	; 0x84e <GPRS_Connect+0x64>
     84e:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Gprs1);
     850:	84 e4       	ldi	r24, 0x44	; 68
     852:	93 e0       	ldi	r25, 0x03	; 3
     854:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     858:	2f e9       	ldi	r18, 0x9F	; 159
     85a:	86 e8       	ldi	r24, 0x86	; 134
     85c:	91 e0       	ldi	r25, 0x01	; 1
     85e:	21 50       	subi	r18, 0x01	; 1
     860:	80 40       	sbci	r24, 0x00	; 0
     862:	90 40       	sbci	r25, 0x00	; 0
     864:	e1 f7       	brne	.-8      	; 0x85e <GPRS_Connect+0x74>
     866:	00 c0       	rjmp	.+0      	; 0x868 <__stack+0x9>
     868:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Gprs2);
     86a:	8a e2       	ldi	r24, 0x2A	; 42
     86c:	93 e0       	ldi	r25, 0x03	; 3
     86e:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     872:	2f e9       	ldi	r18, 0x9F	; 159
     874:	86 e8       	ldi	r24, 0x86	; 134
     876:	91 e0       	ldi	r25, 0x01	; 1
     878:	21 50       	subi	r18, 0x01	; 1
     87a:	80 40       	sbci	r24, 0x00	; 0
     87c:	90 40       	sbci	r25, 0x00	; 0
     87e:	e1 f7       	brne	.-8      	; 0x878 <__stack+0x19>
     880:	00 c0       	rjmp	.+0      	; 0x882 <__stack+0x23>
     882:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Gprs3);
     884:	8c e1       	ldi	r24, 0x1C	; 28
     886:	93 e0       	ldi	r25, 0x03	; 3
     888:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     88c:	2f e3       	ldi	r18, 0x3F	; 63
     88e:	82 e4       	ldi	r24, 0x42	; 66
     890:	9f e0       	ldi	r25, 0x0F	; 15
     892:	21 50       	subi	r18, 0x01	; 1
     894:	80 40       	sbci	r24, 0x00	; 0
     896:	90 40       	sbci	r25, 0x00	; 0
     898:	e1 f7       	brne	.-8      	; 0x892 <__stack+0x33>
     89a:	00 c0       	rjmp	.+0      	; 0x89c <__stack+0x3d>
     89c:	00 00       	nop
	_delay_ms(5000);
	Tx_puts(Gprs4);
     89e:	8e e0       	ldi	r24, 0x0E	; 14
     8a0:	93 e0       	ldi	r25, 0x03	; 3
     8a2:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     8a6:	2f e9       	ldi	r18, 0x9F	; 159
     8a8:	86 e8       	ldi	r24, 0x86	; 134
     8aa:	91 e0       	ldi	r25, 0x01	; 1
     8ac:	21 50       	subi	r18, 0x01	; 1
     8ae:	80 40       	sbci	r24, 0x00	; 0
     8b0:	90 40       	sbci	r25, 0x00	; 0
     8b2:	e1 f7       	brne	.-8      	; 0x8ac <__stack+0x4d>
     8b4:	00 c0       	rjmp	.+0      	; 0x8b6 <__stack+0x57>
     8b6:	00 00       	nop
	_delay_ms(500);
	
	Lcd4_Clear();
     8b8:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
     8bc:	08 95       	ret

000008be <FTP_connect>:

void FTP_connect()
{
	//---------------------FTP Initialization----------------------------------------------------------
	
	Lcd4_Clear();
     8be:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
     8c2:	60 e0       	ldi	r22, 0x00	; 0
     8c4:	70 e0       	ldi	r23, 0x00	; 0
     8c6:	81 e0       	ldi	r24, 0x01	; 1
     8c8:	90 e0       	ldi	r25, 0x00	; 0
     8ca:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	Lcd4_Write_String("FTP Connection");
     8ce:	8e ec       	ldi	r24, 0xCE	; 206
     8d0:	90 e0       	ldi	r25, 0x00	; 0
     8d2:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>

	
	Tx_puts("AT\r");
     8d6:	8a ec       	ldi	r24, 0xCA	; 202
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     8de:	2f e9       	ldi	r18, 0x9F	; 159
     8e0:	86 e8       	ldi	r24, 0x86	; 134
     8e2:	91 e0       	ldi	r25, 0x01	; 1
     8e4:	21 50       	subi	r18, 0x01	; 1
     8e6:	80 40       	sbci	r24, 0x00	; 0
     8e8:	90 40       	sbci	r25, 0x00	; 0
     8ea:	e1 f7       	brne	.-8      	; 0x8e4 <FTP_connect+0x26>
     8ec:	00 c0       	rjmp	.+0      	; 0x8ee <FTP_connect+0x30>
     8ee:	00 00       	nop
	_delay_ms(500);
	Tx_puts("AT\r");
     8f0:	8a ec       	ldi	r24, 0xCA	; 202
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     8f8:	2f e9       	ldi	r18, 0x9F	; 159
     8fa:	86 e8       	ldi	r24, 0x86	; 134
     8fc:	91 e0       	ldi	r25, 0x01	; 1
     8fe:	21 50       	subi	r18, 0x01	; 1
     900:	80 40       	sbci	r24, 0x00	; 0
     902:	90 40       	sbci	r25, 0x00	; 0
     904:	e1 f7       	brne	.-8      	; 0x8fe <FTP_connect+0x40>
     906:	00 c0       	rjmp	.+0      	; 0x908 <FTP_connect+0x4a>
     908:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Ftp1);
     90a:	81 e0       	ldi	r24, 0x01	; 1
     90c:	93 e0       	ldi	r25, 0x03	; 3
     90e:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     912:	2f e9       	ldi	r18, 0x9F	; 159
     914:	86 e8       	ldi	r24, 0x86	; 134
     916:	91 e0       	ldi	r25, 0x01	; 1
     918:	21 50       	subi	r18, 0x01	; 1
     91a:	80 40       	sbci	r24, 0x00	; 0
     91c:	90 40       	sbci	r25, 0x00	; 0
     91e:	e1 f7       	brne	.-8      	; 0x918 <FTP_connect+0x5a>
     920:	00 c0       	rjmp	.+0      	; 0x922 <FTP_connect+0x64>
     922:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Ftp2);
     924:	82 ee       	ldi	r24, 0xE2	; 226
     926:	92 e0       	ldi	r25, 0x02	; 2
     928:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     92c:	2f e9       	ldi	r18, 0x9F	; 159
     92e:	86 e8       	ldi	r24, 0x86	; 134
     930:	91 e0       	ldi	r25, 0x01	; 1
     932:	21 50       	subi	r18, 0x01	; 1
     934:	80 40       	sbci	r24, 0x00	; 0
     936:	90 40       	sbci	r25, 0x00	; 0
     938:	e1 f7       	brne	.-8      	; 0x932 <FTP_connect+0x74>
     93a:	00 c0       	rjmp	.+0      	; 0x93c <FTP_connect+0x7e>
     93c:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Ftp3);
     93e:	82 ec       	ldi	r24, 0xC2	; 194
     940:	92 e0       	ldi	r25, 0x02	; 2
     942:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     946:	2f e9       	ldi	r18, 0x9F	; 159
     948:	86 e8       	ldi	r24, 0x86	; 134
     94a:	91 e0       	ldi	r25, 0x01	; 1
     94c:	21 50       	subi	r18, 0x01	; 1
     94e:	80 40       	sbci	r24, 0x00	; 0
     950:	90 40       	sbci	r25, 0x00	; 0
     952:	e1 f7       	brne	.-8      	; 0x94c <FTP_connect+0x8e>
     954:	00 c0       	rjmp	.+0      	; 0x956 <FTP_connect+0x98>
     956:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Ftp4);
     958:	8d ea       	ldi	r24, 0xAD	; 173
     95a:	92 e0       	ldi	r25, 0x02	; 2
     95c:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     960:	2f e9       	ldi	r18, 0x9F	; 159
     962:	86 e8       	ldi	r24, 0x86	; 134
     964:	91 e0       	ldi	r25, 0x01	; 1
     966:	21 50       	subi	r18, 0x01	; 1
     968:	80 40       	sbci	r24, 0x00	; 0
     96a:	90 40       	sbci	r25, 0x00	; 0
     96c:	e1 f7       	brne	.-8      	; 0x966 <FTP_connect+0xa8>
     96e:	00 c0       	rjmp	.+0      	; 0x970 <FTP_connect+0xb2>
     970:	00 00       	nop
	_delay_ms(500);
	
	Lcd4_Clear();
     972:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
     976:	08 95       	ret

00000978 <Download_start>:
void Download_start()
{
	
	//---------------------Download Initialization----------------------------------------------------------

	Lcd4_Clear();
     978:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
     97c:	60 e0       	ldi	r22, 0x00	; 0
     97e:	70 e0       	ldi	r23, 0x00	; 0
     980:	81 e0       	ldi	r24, 0x01	; 1
     982:	90 e0       	ldi	r25, 0x00	; 0
     984:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	Lcd4_Write_String("Downloading ...");
     988:	8d ed       	ldi	r24, 0xDD	; 221
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
	
	Tx_puts("AT\r");
     990:	8a ec       	ldi	r24, 0xCA	; 202
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     998:	2f e9       	ldi	r18, 0x9F	; 159
     99a:	86 e8       	ldi	r24, 0x86	; 134
     99c:	91 e0       	ldi	r25, 0x01	; 1
     99e:	21 50       	subi	r18, 0x01	; 1
     9a0:	80 40       	sbci	r24, 0x00	; 0
     9a2:	90 40       	sbci	r25, 0x00	; 0
     9a4:	e1 f7       	brne	.-8      	; 0x99e <Download_start+0x26>
     9a6:	00 c0       	rjmp	.+0      	; 0x9a8 <Download_start+0x30>
     9a8:	00 00       	nop
	_delay_ms(500);
	Tx_puts("AT\r");
     9aa:	8a ec       	ldi	r24, 0xCA	; 202
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     9b2:	2f e9       	ldi	r18, 0x9F	; 159
     9b4:	86 e8       	ldi	r24, 0x86	; 134
     9b6:	91 e0       	ldi	r25, 0x01	; 1
     9b8:	21 50       	subi	r18, 0x01	; 1
     9ba:	80 40       	sbci	r24, 0x00	; 0
     9bc:	90 40       	sbci	r25, 0x00	; 0
     9be:	e1 f7       	brne	.-8      	; 0x9b8 <Download_start+0x40>
     9c0:	00 c0       	rjmp	.+0      	; 0x9c2 <Download_start+0x4a>
     9c2:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Dwnld1);
     9c4:	85 e3       	ldi	r24, 0x35	; 53
     9c6:	92 e0       	ldi	r25, 0x02	; 2
     9c8:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     9cc:	2f e9       	ldi	r18, 0x9F	; 159
     9ce:	86 e8       	ldi	r24, 0x86	; 134
     9d0:	91 e0       	ldi	r25, 0x01	; 1
     9d2:	21 50       	subi	r18, 0x01	; 1
     9d4:	80 40       	sbci	r24, 0x00	; 0
     9d6:	90 40       	sbci	r25, 0x00	; 0
     9d8:	e1 f7       	brne	.-8      	; 0x9d2 <Download_start+0x5a>
     9da:	00 c0       	rjmp	.+0      	; 0x9dc <Download_start+0x64>
     9dc:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Dwnld2);
     9de:	82 e2       	ldi	r24, 0x22	; 34
     9e0:	92 e0       	ldi	r25, 0x02	; 2
     9e2:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     9e6:	2f e9       	ldi	r18, 0x9F	; 159
     9e8:	86 e8       	ldi	r24, 0x86	; 134
     9ea:	91 e0       	ldi	r25, 0x01	; 1
     9ec:	21 50       	subi	r18, 0x01	; 1
     9ee:	80 40       	sbci	r24, 0x00	; 0
     9f0:	90 40       	sbci	r25, 0x00	; 0
     9f2:	e1 f7       	brne	.-8      	; 0x9ec <Download_start+0x74>
     9f4:	00 c0       	rjmp	.+0      	; 0x9f6 <Download_start+0x7e>
     9f6:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Dwnld3);
     9f8:	85 e1       	ldi	r24, 0x15	; 21
     9fa:	92 e0       	ldi	r25, 0x02	; 2
     9fc:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     a00:	2f e7       	ldi	r18, 0x7F	; 127
     a02:	86 e9       	ldi	r24, 0x96	; 150
     a04:	98 e9       	ldi	r25, 0x98	; 152
     a06:	21 50       	subi	r18, 0x01	; 1
     a08:	80 40       	sbci	r24, 0x00	; 0
     a0a:	90 40       	sbci	r25, 0x00	; 0
     a0c:	e1 f7       	brne	.-8      	; 0xa06 <Download_start+0x8e>
     a0e:	00 c0       	rjmp	.+0      	; 0xa10 <Download_start+0x98>
     a10:	00 00       	nop
	_delay_ms(50000);
	Tx_puts(Dwnld4);
     a12:	83 e0       	ldi	r24, 0x03	; 3
     a14:	92 e0       	ldi	r25, 0x02	; 2
     a16:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     a1a:	2f e7       	ldi	r18, 0x7F	; 127
     a1c:	84 e8       	ldi	r24, 0x84	; 132
     a1e:	9e e1       	ldi	r25, 0x1E	; 30
     a20:	21 50       	subi	r18, 0x01	; 1
     a22:	80 40       	sbci	r24, 0x00	; 0
     a24:	90 40       	sbci	r25, 0x00	; 0
     a26:	e1 f7       	brne	.-8      	; 0xa20 <Download_start+0xa8>
     a28:	00 c0       	rjmp	.+0      	; 0xa2a <Download_start+0xb2>
     a2a:	00 00       	nop
	_delay_ms(10000);
	
	//sprintf (Changes, "%s", strstr (Temp, "Changes"));
	
	Lcd4_Clear();
     a2c:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
     a30:	60 e0       	ldi	r22, 0x00	; 0
     a32:	70 e0       	ldi	r23, 0x00	; 0
     a34:	81 e0       	ldi	r24, 0x01	; 1
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	Lcd4_Write_String("Download Complete");
     a3c:	8d ee       	ldi	r24, 0xED	; 237
     a3e:	90 e0       	ldi	r25, 0x00	; 0
     a40:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
     a44:	2f e3       	ldi	r18, 0x3F	; 63
     a46:	8d e0       	ldi	r24, 0x0D	; 13
     a48:	93 e0       	ldi	r25, 0x03	; 3
     a4a:	21 50       	subi	r18, 0x01	; 1
     a4c:	80 40       	sbci	r24, 0x00	; 0
     a4e:	90 40       	sbci	r25, 0x00	; 0
     a50:	e1 f7       	brne	.-8      	; 0xa4a <Download_start+0xd2>
     a52:	00 c0       	rjmp	.+0      	; 0xa54 <Download_start+0xdc>
     a54:	00 00       	nop
	_delay_ms(1000);
	Lcd4_Clear();
     a56:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
     a5a:	08 95       	ret

00000a5c <Upload_start>:

void Upload_start()
{
	//---------------------Upload Initialization----------------------------------------------
	
	Lcd4_Clear();
     a5c:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
     a60:	60 e0       	ldi	r22, 0x00	; 0
     a62:	70 e0       	ldi	r23, 0x00	; 0
     a64:	81 e0       	ldi	r24, 0x01	; 1
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	Lcd4_Write_String("Uploading ...");
     a6c:	8f ef       	ldi	r24, 0xFF	; 255
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
	
	
	Temperature = read_adc(0);
     a74:	80 e0       	ldi	r24, 0x00	; 0
     a76:	0e 94 49 00 	call	0x92	; 0x92 <read_adc>
	Temperature = Temperature/2 - 352;
     a7a:	99 23       	and	r25, r25
     a7c:	0c f4       	brge	.+2      	; 0xa80 <Upload_start+0x24>
     a7e:	01 96       	adiw	r24, 0x01	; 1
     a80:	95 95       	asr	r25
     a82:	87 95       	ror	r24
     a84:	80 56       	subi	r24, 0x60	; 96
     a86:	91 40       	sbci	r25, 0x01	; 1
     a88:	90 93 ab 03 	sts	0x03AB, r25
     a8c:	80 93 aa 03 	sts	0x03AA, r24
	
	switch (TA)
     a90:	20 91 63 00 	lds	r18, 0x0063
     a94:	20 33       	cpi	r18, 0x30	; 48
     a96:	49 f0       	breq	.+18     	; 0xaaa <Upload_start+0x4e>
     a98:	21 33       	cpi	r18, 0x31	; 49
     a9a:	69 f4       	brne	.+26     	; 0xab6 <Upload_start+0x5a>
	{
		case '1':
		TTA = "ON";
     a9c:	24 ee       	ldi	r18, 0xE4	; 228
     a9e:	31 e0       	ldi	r19, 0x01	; 1
     aa0:	30 93 7d 04 	sts	0x047D, r19
     aa4:	20 93 7c 04 	sts	0x047C, r18
		break;
     aa8:	06 c0       	rjmp	.+12     	; 0xab6 <Upload_start+0x5a>
		case '0':
		TTA = "OFF";
     aaa:	2d e0       	ldi	r18, 0x0D	; 13
     aac:	31 e0       	ldi	r19, 0x01	; 1
     aae:	30 93 7d 04 	sts	0x047D, r19
     ab2:	20 93 7c 04 	sts	0x047C, r18
		break;
	}
	
	switch (TB)
     ab6:	20 91 62 00 	lds	r18, 0x0062
     aba:	20 33       	cpi	r18, 0x30	; 48
     abc:	49 f0       	breq	.+18     	; 0xad0 <Upload_start+0x74>
     abe:	21 33       	cpi	r18, 0x31	; 49
     ac0:	69 f4       	brne	.+26     	; 0xadc <Upload_start+0x80>
	{
		case '1':
		TTB = "ON";
     ac2:	24 ee       	ldi	r18, 0xE4	; 228
     ac4:	31 e0       	ldi	r19, 0x01	; 1
     ac6:	30 93 ad 03 	sts	0x03AD, r19
     aca:	20 93 ac 03 	sts	0x03AC, r18
		break;
     ace:	06 c0       	rjmp	.+12     	; 0xadc <Upload_start+0x80>
		case '0':
		TTB = "OFF";
     ad0:	2d e0       	ldi	r18, 0x0D	; 13
     ad2:	31 e0       	ldi	r19, 0x01	; 1
     ad4:	30 93 ad 03 	sts	0x03AD, r19
     ad8:	20 93 ac 03 	sts	0x03AC, r18
		break;
	}
	switch (TC)
     adc:	20 91 61 00 	lds	r18, 0x0061
     ae0:	20 33       	cpi	r18, 0x30	; 48
     ae2:	49 f0       	breq	.+18     	; 0xaf6 <Upload_start+0x9a>
     ae4:	21 33       	cpi	r18, 0x31	; 49
     ae6:	69 f4       	brne	.+26     	; 0xb02 <Upload_start+0xa6>
	{
		case '1':
		TTC = "ON";
     ae8:	24 ee       	ldi	r18, 0xE4	; 228
     aea:	31 e0       	ldi	r19, 0x01	; 1
     aec:	30 93 e4 03 	sts	0x03E4, r19
     af0:	20 93 e3 03 	sts	0x03E3, r18
		break;
     af4:	06 c0       	rjmp	.+12     	; 0xb02 <Upload_start+0xa6>
		case '0':
		TTC = "OFF";
     af6:	2d e0       	ldi	r18, 0x0D	; 13
     af8:	31 e0       	ldi	r19, 0x01	; 1
     afa:	30 93 e4 03 	sts	0x03E4, r19
     afe:	20 93 e3 03 	sts	0x03E3, r18
		break;
	}
	switch (TD)
     b02:	20 91 60 00 	lds	r18, 0x0060
     b06:	20 33       	cpi	r18, 0x30	; 48
     b08:	49 f0       	breq	.+18     	; 0xb1c <Upload_start+0xc0>
     b0a:	21 33       	cpi	r18, 0x31	; 49
     b0c:	69 f4       	brne	.+26     	; 0xb28 <Upload_start+0xcc>
	{
		case '1':
		TTD = "ON";
     b0e:	24 ee       	ldi	r18, 0xE4	; 228
     b10:	31 e0       	ldi	r19, 0x01	; 1
     b12:	30 93 e2 03 	sts	0x03E2, r19
     b16:	20 93 e1 03 	sts	0x03E1, r18
		break;
     b1a:	06 c0       	rjmp	.+12     	; 0xb28 <Upload_start+0xcc>
		case '0':
		TTD = "OFF";
     b1c:	2d e0       	ldi	r18, 0x0D	; 13
     b1e:	31 e0       	ldi	r19, 0x01	; 1
     b20:	30 93 e2 03 	sts	0x03E2, r19
     b24:	20 93 e1 03 	sts	0x03E1, r18
		break;
	}

	sprintf(Information,"LED1 %s LED2 %s LED3 %s LED4 %s Temperature %d      ",TTA,TTB,TTC,TTD,Temperature);
     b28:	9f 93       	push	r25
     b2a:	8f 93       	push	r24
     b2c:	80 91 e2 03 	lds	r24, 0x03E2
     b30:	8f 93       	push	r24
     b32:	80 91 e1 03 	lds	r24, 0x03E1
     b36:	8f 93       	push	r24
     b38:	80 91 e4 03 	lds	r24, 0x03E4
     b3c:	8f 93       	push	r24
     b3e:	80 91 e3 03 	lds	r24, 0x03E3
     b42:	8f 93       	push	r24
     b44:	80 91 ad 03 	lds	r24, 0x03AD
     b48:	8f 93       	push	r24
     b4a:	80 91 ac 03 	lds	r24, 0x03AC
     b4e:	8f 93       	push	r24
     b50:	80 91 7d 04 	lds	r24, 0x047D
     b54:	8f 93       	push	r24
     b56:	80 91 7c 04 	lds	r24, 0x047C
     b5a:	8f 93       	push	r24
     b5c:	81 e1       	ldi	r24, 0x11	; 17
     b5e:	91 e0       	ldi	r25, 0x01	; 1
     b60:	9f 93       	push	r25
     b62:	8f 93       	push	r24
     b64:	8e ea       	ldi	r24, 0xAE	; 174
     b66:	93 e0       	ldi	r25, 0x03	; 3
     b68:	9f 93       	push	r25
     b6a:	8f 93       	push	r24
     b6c:	0e 94 d6 09 	call	0x13ac	; 0x13ac <sprintf>
	
	Tx_puts("AT\r");
     b70:	8a ec       	ldi	r24, 0xCA	; 202
     b72:	90 e0       	ldi	r25, 0x00	; 0
     b74:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     b78:	2f e9       	ldi	r18, 0x9F	; 159
     b7a:	86 e8       	ldi	r24, 0x86	; 134
     b7c:	91 e0       	ldi	r25, 0x01	; 1
     b7e:	21 50       	subi	r18, 0x01	; 1
     b80:	80 40       	sbci	r24, 0x00	; 0
     b82:	90 40       	sbci	r25, 0x00	; 0
     b84:	e1 f7       	brne	.-8      	; 0xb7e <Upload_start+0x122>
     b86:	00 c0       	rjmp	.+0      	; 0xb88 <Upload_start+0x12c>
     b88:	00 00       	nop
	_delay_ms(500);
	Tx_puts("AT\r");
     b8a:	8a ec       	ldi	r24, 0xCA	; 202
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     b92:	2f e9       	ldi	r18, 0x9F	; 159
     b94:	86 e8       	ldi	r24, 0x86	; 134
     b96:	91 e0       	ldi	r25, 0x01	; 1
     b98:	21 50       	subi	r18, 0x01	; 1
     b9a:	80 40       	sbci	r24, 0x00	; 0
     b9c:	90 40       	sbci	r25, 0x00	; 0
     b9e:	e1 f7       	brne	.-8      	; 0xb98 <Upload_start+0x13c>
     ba0:	00 c0       	rjmp	.+0      	; 0xba2 <Upload_start+0x146>
     ba2:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Upld1);
     ba4:	81 e9       	ldi	r24, 0x91	; 145
     ba6:	92 e0       	ldi	r25, 0x02	; 2
     ba8:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     bac:	2f e9       	ldi	r18, 0x9F	; 159
     bae:	86 e8       	ldi	r24, 0x86	; 134
     bb0:	91 e0       	ldi	r25, 0x01	; 1
     bb2:	21 50       	subi	r18, 0x01	; 1
     bb4:	80 40       	sbci	r24, 0x00	; 0
     bb6:	90 40       	sbci	r25, 0x00	; 0
     bb8:	e1 f7       	brne	.-8      	; 0xbb2 <Upload_start+0x156>
     bba:	00 c0       	rjmp	.+0      	; 0xbbc <Upload_start+0x160>
     bbc:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Upld2);
     bbe:	8e e7       	ldi	r24, 0x7E	; 126
     bc0:	92 e0       	ldi	r25, 0x02	; 2
     bc2:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     bc6:	2f e9       	ldi	r18, 0x9F	; 159
     bc8:	86 e8       	ldi	r24, 0x86	; 134
     bca:	91 e0       	ldi	r25, 0x01	; 1
     bcc:	21 50       	subi	r18, 0x01	; 1
     bce:	80 40       	sbci	r24, 0x00	; 0
     bd0:	90 40       	sbci	r25, 0x00	; 0
     bd2:	e1 f7       	brne	.-8      	; 0xbcc <Upload_start+0x170>
     bd4:	00 c0       	rjmp	.+0      	; 0xbd6 <Upload_start+0x17a>
     bd6:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Upld3);
     bd8:	81 e7       	ldi	r24, 0x71	; 113
     bda:	92 e0       	ldi	r25, 0x02	; 2
     bdc:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     be0:	2f e7       	ldi	r18, 0x7F	; 127
     be2:	8d e8       	ldi	r24, 0x8D	; 141
     be4:	9b e5       	ldi	r25, 0x5B	; 91
     be6:	21 50       	subi	r18, 0x01	; 1
     be8:	80 40       	sbci	r24, 0x00	; 0
     bea:	90 40       	sbci	r25, 0x00	; 0
     bec:	e1 f7       	brne	.-8      	; 0xbe6 <Upload_start+0x18a>
     bee:	00 c0       	rjmp	.+0      	; 0xbf0 <Upload_start+0x194>
     bf0:	00 00       	nop
	_delay_ms(30000);
	Tx_puts(Upld4);
     bf2:	81 e6       	ldi	r24, 0x61	; 97
     bf4:	92 e0       	ldi	r25, 0x02	; 2
     bf6:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     bfa:	2f e9       	ldi	r18, 0x9F	; 159
     bfc:	86 e8       	ldi	r24, 0x86	; 134
     bfe:	91 e0       	ldi	r25, 0x01	; 1
     c00:	21 50       	subi	r18, 0x01	; 1
     c02:	80 40       	sbci	r24, 0x00	; 0
     c04:	90 40       	sbci	r25, 0x00	; 0
     c06:	e1 f7       	brne	.-8      	; 0xc00 <Upload_start+0x1a4>
     c08:	00 c0       	rjmp	.+0      	; 0xc0a <Upload_start+0x1ae>
     c0a:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Information);
     c0c:	8e ea       	ldi	r24, 0xAE	; 174
     c0e:	93 e0       	ldi	r25, 0x03	; 3
     c10:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     c14:	2f e9       	ldi	r18, 0x9F	; 159
     c16:	86 e8       	ldi	r24, 0x86	; 134
     c18:	91 e0       	ldi	r25, 0x01	; 1
     c1a:	21 50       	subi	r18, 0x01	; 1
     c1c:	80 40       	sbci	r24, 0x00	; 0
     c1e:	90 40       	sbci	r25, 0x00	; 0
     c20:	e1 f7       	brne	.-8      	; 0xc1a <Upload_start+0x1be>
     c22:	00 c0       	rjmp	.+0      	; 0xc24 <Upload_start+0x1c8>
     c24:	00 00       	nop
	_delay_ms(500);
	Tx_puts(Upld6);
     c26:	82 e5       	ldi	r24, 0x52	; 82
     c28:	92 e0       	ldi	r25, 0x02	; 2
     c2a:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
     c2e:	2f e9       	ldi	r18, 0x9F	; 159
     c30:	86 e8       	ldi	r24, 0x86	; 134
     c32:	91 e0       	ldi	r25, 0x01	; 1
     c34:	21 50       	subi	r18, 0x01	; 1
     c36:	80 40       	sbci	r24, 0x00	; 0
     c38:	90 40       	sbci	r25, 0x00	; 0
     c3a:	e1 f7       	brne	.-8      	; 0xc34 <Upload_start+0x1d8>
     c3c:	00 c0       	rjmp	.+0      	; 0xc3e <Upload_start+0x1e2>
     c3e:	00 00       	nop
	_delay_ms(500);
	
	Lcd4_Clear();
     c40:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
     c44:	60 e0       	ldi	r22, 0x00	; 0
     c46:	70 e0       	ldi	r23, 0x00	; 0
     c48:	81 e0       	ldi	r24, 0x01	; 1
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	Lcd4_Write_String("Upload Complete");
     c50:	86 e4       	ldi	r24, 0x46	; 70
     c52:	91 e0       	ldi	r25, 0x01	; 1
     c54:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
     c58:	2f e3       	ldi	r18, 0x3F	; 63
     c5a:	8d e0       	ldi	r24, 0x0D	; 13
     c5c:	93 e0       	ldi	r25, 0x03	; 3
     c5e:	21 50       	subi	r18, 0x01	; 1
     c60:	80 40       	sbci	r24, 0x00	; 0
     c62:	90 40       	sbci	r25, 0x00	; 0
     c64:	e1 f7       	brne	.-8      	; 0xc5e <Upload_start+0x202>
     c66:	00 c0       	rjmp	.+0      	; 0xc68 <Upload_start+0x20c>
     c68:	00 00       	nop
	_delay_ms(1000);
	Lcd4_Clear();
     c6a:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
     c6e:	8d b7       	in	r24, 0x3d	; 61
     c70:	9e b7       	in	r25, 0x3e	; 62
     c72:	0e 96       	adiw	r24, 0x0e	; 14
     c74:	0f b6       	in	r0, 0x3f	; 63
     c76:	f8 94       	cli
     c78:	9e bf       	out	0x3e, r25	; 62
     c7a:	0f be       	out	0x3f, r0	; 63
     c7c:	8d bf       	out	0x3d, r24	; 61
     c7e:	08 95       	ret

00000c80 <__vector_11>:
	}
	return;
}

ISR(TIMER0_OVF_vect)
{
     c80:	1f 92       	push	r1
     c82:	0f 92       	push	r0
     c84:	0f b6       	in	r0, 0x3f	; 63
     c86:	0f 92       	push	r0
     c88:	11 24       	eor	r1, r1
     c8a:	0f 93       	push	r16
     c8c:	1f 93       	push	r17
     c8e:	2f 93       	push	r18
     c90:	3f 93       	push	r19
     c92:	4f 93       	push	r20
     c94:	5f 93       	push	r21
     c96:	6f 93       	push	r22
     c98:	7f 93       	push	r23
     c9a:	8f 93       	push	r24
     c9c:	9f 93       	push	r25
     c9e:	af 93       	push	r26
     ca0:	bf 93       	push	r27
     ca2:	cf 93       	push	r28
     ca4:	df 93       	push	r29
     ca6:	ef 93       	push	r30
     ca8:	ff 93       	push	r31
	count++;
     caa:	80 91 7e 04 	lds	r24, 0x047E
     cae:	8f 5f       	subi	r24, 0xFF	; 255
     cb0:	80 93 7e 04 	sts	0x047E, r24
	if(count == 30)
     cb4:	80 91 7e 04 	lds	r24, 0x047E
     cb8:	8e 31       	cpi	r24, 0x1E	; 30
     cba:	09 f0       	breq	.+2      	; 0xcbe <__vector_11+0x3e>
     cbc:	19 c1       	rjmp	.+562    	; 0xef0 <__vector_11+0x270>
	{
		Lcd4_Write_String("END OF TIMER");
     cbe:	86 e5       	ldi	r24, 0x56	; 86
     cc0:	91 e0       	ldi	r25, 0x01	; 1
     cc2:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
     cc6:	2f e3       	ldi	r18, 0x3F	; 63
     cc8:	8d e0       	ldi	r24, 0x0D	; 13
     cca:	93 e0       	ldi	r25, 0x03	; 3
     ccc:	21 50       	subi	r18, 0x01	; 1
     cce:	80 40       	sbci	r24, 0x00	; 0
     cd0:	90 40       	sbci	r25, 0x00	; 0
     cd2:	e1 f7       	brne	.-8      	; 0xccc <__vector_11+0x4c>
     cd4:	00 c0       	rjmp	.+0      	; 0xcd6 <__vector_11+0x56>
     cd6:	00 00       	nop
		_delay_ms(1000);
		Lcd4_Clear();
     cd8:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
		
		char *ptr = Temp;
		char *ptr1 = Temp;

		char *prevptr = NULL;
     cdc:	d0 e0       	ldi	r29, 0x00	; 0
     cde:	c0 e0       	ldi	r28, 0x00	; 0
	{
		Lcd4_Write_String("END OF TIMER");
		_delay_ms(1000);
		Lcd4_Clear();
		
		char *ptr = Temp;
     ce0:	20 ee       	ldi	r18, 0xE0	; 224
     ce2:	33 e0       	ldi	r19, 0x03	; 3
		char *ptr1 = Temp;

		char *prevptr = NULL;
		char *prevptr1 = NULL;

		while( (ptr = strstr(ptr,chkmsg1)))
     ce4:	05 c0       	rjmp	.+10     	; 0xcf0 <__vector_11+0x70>
		{
			prevptr = ptr++;
     ce6:	9c 01       	movw	r18, r24
     ce8:	2f 5f       	subi	r18, 0xFF	; 255
     cea:	3f 4f       	sbci	r19, 0xFF	; 255
     cec:	d8 2f       	mov	r29, r24
     cee:	c9 2f       	mov	r28, r25
		char *ptr1 = Temp;

		char *prevptr = NULL;
		char *prevptr1 = NULL;

		while( (ptr = strstr(ptr,chkmsg1)))
     cf0:	64 e7       	ldi	r22, 0x74	; 116
     cf2:	73 e0       	ldi	r23, 0x03	; 3
     cf4:	c9 01       	movw	r24, r18
     cf6:	0e 94 bc 09 	call	0x1378	; 0x1378 <strstr>
     cfa:	00 97       	sbiw	r24, 0x00	; 0
     cfc:	a1 f7       	brne	.-24     	; 0xce6 <__vector_11+0x66>
     cfe:	00 e0       	ldi	r16, 0x00	; 0
     d00:	10 e0       	ldi	r17, 0x00	; 0
     d02:	20 ee       	ldi	r18, 0xE0	; 224
     d04:	33 e0       	ldi	r19, 0x03	; 3
     d06:	05 c0       	rjmp	.+10     	; 0xd12 <__vector_11+0x92>
			prevptr = ptr++;
		}
		
		while( (ptr1 = strstr(ptr1,"Changes")))
		{
			prevptr1 = ptr1++;
     d08:	9c 01       	movw	r18, r24
     d0a:	2f 5f       	subi	r18, 0xFF	; 255
     d0c:	3f 4f       	sbci	r19, 0xFF	; 255
     d0e:	08 2f       	mov	r16, r24
     d10:	19 2f       	mov	r17, r25
		while( (ptr = strstr(ptr,chkmsg1)))
		{
			prevptr = ptr++;
		}
		
		while( (ptr1 = strstr(ptr1,"Changes")))
     d12:	63 e6       	ldi	r22, 0x63	; 99
     d14:	71 e0       	ldi	r23, 0x01	; 1
     d16:	c9 01       	movw	r24, r18
     d18:	0e 94 bc 09 	call	0x1378	; 0x1378 <strstr>
     d1c:	00 97       	sbiw	r24, 0x00	; 0
     d1e:	a1 f7       	brne	.-24     	; 0xd08 <__vector_11+0x88>
		{
			prevptr1 = ptr1++;
		}
		
		sprintf (chkmsg2, "%s", prevptr);
     d20:	6d 2f       	mov	r22, r29
     d22:	7c 2f       	mov	r23, r28
     d24:	89 e4       	ldi	r24, 0x49	; 73
     d26:	94 e0       	ldi	r25, 0x04	; 4
     d28:	0e 94 b5 09 	call	0x136a	; 0x136a <strcpy>
		if (chkmsg2[49] == 'C' && chkmsg2[50] == 'M' && chkmsg2[51] == 'D')
     d2c:	80 91 7a 04 	lds	r24, 0x047A
     d30:	83 34       	cpi	r24, 0x43	; 67
     d32:	f9 f4       	brne	.+62     	; 0xd72 <__vector_11+0xf2>
     d34:	90 91 7b 04 	lds	r25, 0x047B
     d38:	9d 34       	cpi	r25, 0x4D	; 77
     d3a:	09 f0       	breq	.+2      	; 0xd3e <__vector_11+0xbe>
     d3c:	5b c0       	rjmp	.+182    	; 0xdf4 <__vector_11+0x174>
     d3e:	90 91 7c 04 	lds	r25, 0x047C
     d42:	94 34       	cpi	r25, 0x44	; 68
     d44:	09 f0       	breq	.+2      	; 0xd48 <__vector_11+0xc8>
     d46:	56 c0       	rjmp	.+172    	; 0xdf4 <__vector_11+0x174>
		{
			showResult(chkmsg2[53],chkmsg2[54],chkmsg2[55],chkmsg2[56]);
     d48:	20 91 81 04 	lds	r18, 0x0481
     d4c:	30 e0       	ldi	r19, 0x00	; 0
     d4e:	40 91 80 04 	lds	r20, 0x0480
     d52:	50 e0       	ldi	r21, 0x00	; 0
     d54:	60 91 7f 04 	lds	r22, 0x047F
     d58:	70 e0       	ldi	r23, 0x00	; 0
     d5a:	80 91 7e 04 	lds	r24, 0x047E
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	0e 94 97 03 	call	0x72e	; 0x72e <showResult>
			i=0;
     d64:	10 92 8b 03 	sts	0x038B, r1
     d68:	10 92 8a 03 	sts	0x038A, r1
			count=0;
     d6c:	10 92 7e 04 	sts	0x047E, r1
			return;
     d70:	bf c0       	rjmp	.+382    	; 0xef0 <__vector_11+0x270>
		}
		
		if (chkmsg2[49] == 'D' && chkmsg2[50] == 'W' && chkmsg2[51] == 'N' && chkmsg2[52] == 'L'&& chkmsg2[53] == 'D')
     d72:	84 34       	cpi	r24, 0x44	; 68
     d74:	09 f5       	brne	.+66     	; 0xdb8 <__vector_11+0x138>
     d76:	80 91 7b 04 	lds	r24, 0x047B
     d7a:	87 35       	cpi	r24, 0x57	; 87
     d7c:	09 f0       	breq	.+2      	; 0xd80 <__vector_11+0x100>
     d7e:	8b c0       	rjmp	.+278    	; 0xe96 <__vector_11+0x216>
     d80:	80 91 7c 04 	lds	r24, 0x047C
     d84:	8e 34       	cpi	r24, 0x4E	; 78
     d86:	09 f0       	breq	.+2      	; 0xd8a <__vector_11+0x10a>
     d88:	86 c0       	rjmp	.+268    	; 0xe96 <__vector_11+0x216>
     d8a:	80 91 7d 04 	lds	r24, 0x047D
     d8e:	8c 34       	cpi	r24, 0x4C	; 76
     d90:	09 f0       	breq	.+2      	; 0xd94 <__vector_11+0x114>
     d92:	81 c0       	rjmp	.+258    	; 0xe96 <__vector_11+0x216>
     d94:	80 91 7e 04 	lds	r24, 0x047E
     d98:	84 34       	cpi	r24, 0x44	; 68
     d9a:	09 f0       	breq	.+2      	; 0xd9e <__vector_11+0x11e>
     d9c:	7c c0       	rjmp	.+248    	; 0xe96 <__vector_11+0x216>
		{
			GPRS_Connect();
     d9e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <GPRS_Connect>
			FTP_connect();
     da2:	0e 94 5f 04 	call	0x8be	; 0x8be <FTP_connect>
			Download_start();
     da6:	0e 94 bc 04 	call	0x978	; 0x978 <Download_start>
			i=0;
     daa:	10 92 8b 03 	sts	0x038B, r1
     dae:	10 92 8a 03 	sts	0x038A, r1
			count=0;
     db2:	10 92 7e 04 	sts	0x047E, r1
			return;
     db6:	9c c0       	rjmp	.+312    	; 0xef0 <__vector_11+0x270>
		}
		
		if (chkmsg2[49] == 'U' && chkmsg2[50] == 'P' && chkmsg2[51] == 'L' && chkmsg2[52] == 'D')
     db8:	85 35       	cpi	r24, 0x55	; 85
     dba:	e1 f4       	brne	.+56     	; 0xdf4 <__vector_11+0x174>
     dbc:	80 91 7b 04 	lds	r24, 0x047B
     dc0:	80 35       	cpi	r24, 0x50	; 80
     dc2:	09 f0       	breq	.+2      	; 0xdc6 <__vector_11+0x146>
     dc4:	68 c0       	rjmp	.+208    	; 0xe96 <__vector_11+0x216>
     dc6:	80 91 7c 04 	lds	r24, 0x047C
     dca:	8c 34       	cpi	r24, 0x4C	; 76
     dcc:	09 f0       	breq	.+2      	; 0xdd0 <__vector_11+0x150>
     dce:	63 c0       	rjmp	.+198    	; 0xe96 <__vector_11+0x216>
     dd0:	80 91 7d 04 	lds	r24, 0x047D
     dd4:	84 34       	cpi	r24, 0x44	; 68
     dd6:	09 f0       	breq	.+2      	; 0xdda <__vector_11+0x15a>
     dd8:	5e c0       	rjmp	.+188    	; 0xe96 <__vector_11+0x216>
		{
			GPRS_Connect();
     dda:	0e 94 f5 03 	call	0x7ea	; 0x7ea <GPRS_Connect>
			FTP_connect();
     dde:	0e 94 5f 04 	call	0x8be	; 0x8be <FTP_connect>
			Upload_start();
     de2:	0e 94 2e 05 	call	0xa5c	; 0xa5c <Upload_start>
			i=0;
     de6:	10 92 8b 03 	sts	0x038B, r1
     dea:	10 92 8a 03 	sts	0x038A, r1
			count=0;
     dee:	10 92 7e 04 	sts	0x047E, r1
			return;
     df2:	7e c0       	rjmp	.+252    	; 0xef0 <__vector_11+0x270>
		}
		
		if (chkmsg2[49] == 'I' && chkmsg2[50] == 'N' && chkmsg2[51] == 'F' && chkmsg2[52] == 'O')
     df4:	89 34       	cpi	r24, 0x49	; 73
     df6:	09 f0       	breq	.+2      	; 0xdfa <__vector_11+0x17a>
     df8:	4e c0       	rjmp	.+156    	; 0xe96 <__vector_11+0x216>
     dfa:	80 91 7b 04 	lds	r24, 0x047B
     dfe:	8e 34       	cpi	r24, 0x4E	; 78
     e00:	09 f0       	breq	.+2      	; 0xe04 <__vector_11+0x184>
     e02:	49 c0       	rjmp	.+146    	; 0xe96 <__vector_11+0x216>
     e04:	80 91 7c 04 	lds	r24, 0x047C
     e08:	86 34       	cpi	r24, 0x46	; 70
     e0a:	09 f0       	breq	.+2      	; 0xe0e <__vector_11+0x18e>
     e0c:	44 c0       	rjmp	.+136    	; 0xe96 <__vector_11+0x216>
     e0e:	80 91 7d 04 	lds	r24, 0x047D
     e12:	8f 34       	cpi	r24, 0x4F	; 79
     e14:	09 f0       	breq	.+2      	; 0xe18 <__vector_11+0x198>
     e16:	3f c0       	rjmp	.+126    	; 0xe96 <__vector_11+0x216>
		{
			Temperature = read_adc(0);
     e18:	80 e0       	ldi	r24, 0x00	; 0
     e1a:	0e 94 49 00 	call	0x92	; 0x92 <read_adc>
			Temperature = Temperature/2 - 352;
     e1e:	99 23       	and	r25, r25
     e20:	0c f4       	brge	.+2      	; 0xe24 <__vector_11+0x1a4>
     e22:	01 96       	adiw	r24, 0x01	; 1
     e24:	95 95       	asr	r25
     e26:	87 95       	ror	r24
     e28:	80 56       	subi	r24, 0x60	; 96
     e2a:	91 40       	sbci	r25, 0x01	; 1
     e2c:	90 93 ab 03 	sts	0x03AB, r25
     e30:	80 93 aa 03 	sts	0x03AA, r24
			sprintf(Information,"LED1 = %c , LED2 = %c , LED3 = %c , LED4 = %c  , Temperature is %d ",TA,TB,TC,TD,Temperature);
     e34:	9f 93       	push	r25
     e36:	8f 93       	push	r24
     e38:	80 91 60 00 	lds	r24, 0x0060
     e3c:	1f 92       	push	r1
     e3e:	8f 93       	push	r24
     e40:	80 91 61 00 	lds	r24, 0x0061
     e44:	1f 92       	push	r1
     e46:	8f 93       	push	r24
     e48:	80 91 62 00 	lds	r24, 0x0062
     e4c:	1f 92       	push	r1
     e4e:	8f 93       	push	r24
     e50:	80 91 63 00 	lds	r24, 0x0063
     e54:	1f 92       	push	r1
     e56:	8f 93       	push	r24
     e58:	8b e6       	ldi	r24, 0x6B	; 107
     e5a:	91 e0       	ldi	r25, 0x01	; 1
     e5c:	9f 93       	push	r25
     e5e:	8f 93       	push	r24
     e60:	8e ea       	ldi	r24, 0xAE	; 174
     e62:	93 e0       	ldi	r25, 0x03	; 3
     e64:	9f 93       	push	r25
     e66:	8f 93       	push	r24
     e68:	0e 94 d6 09 	call	0x13ac	; 0x13ac <sprintf>
			GSM_Send("09300093455",Information);
     e6c:	6e ea       	ldi	r22, 0xAE	; 174
     e6e:	73 e0       	ldi	r23, 0x03	; 3
     e70:	8d e9       	ldi	r24, 0x9D	; 157
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	0e 94 17 03 	call	0x62e	; 0x62e <GSM_Send>
			i=0;
     e78:	10 92 8b 03 	sts	0x038B, r1
     e7c:	10 92 8a 03 	sts	0x038A, r1
			count=0;
     e80:	10 92 7e 04 	sts	0x047E, r1
			return;
     e84:	8d b7       	in	r24, 0x3d	; 61
     e86:	9e b7       	in	r25, 0x3e	; 62
     e88:	0e 96       	adiw	r24, 0x0e	; 14
     e8a:	0f b6       	in	r0, 0x3f	; 63
     e8c:	f8 94       	cli
     e8e:	9e bf       	out	0x3e, r25	; 62
     e90:	0f be       	out	0x3f, r0	; 63
     e92:	8d bf       	out	0x3d, r24	; 61
     e94:	2d c0       	rjmp	.+90     	; 0xef0 <__vector_11+0x270>
		}
		
		sprintf (Changes, "%s", prevptr1);
     e96:	60 2f       	mov	r22, r16
     e98:	71 2f       	mov	r23, r17
     e9a:	85 ee       	ldi	r24, 0xE5	; 229
     e9c:	93 e0       	ldi	r25, 0x03	; 3
     e9e:	0e 94 b5 09 	call	0x136a	; 0x136a <strcpy>
		if (Changes[10] == 'C' && Changes[11] == 'M' && Changes[12] == 'D')
     ea2:	80 91 ef 03 	lds	r24, 0x03EF
     ea6:	83 34       	cpi	r24, 0x43	; 67
     ea8:	e9 f4       	brne	.+58     	; 0xee4 <__vector_11+0x264>
     eaa:	80 91 f0 03 	lds	r24, 0x03F0
     eae:	8d 34       	cpi	r24, 0x4D	; 77
     eb0:	c9 f4       	brne	.+50     	; 0xee4 <__vector_11+0x264>
     eb2:	80 91 f1 03 	lds	r24, 0x03F1
     eb6:	84 34       	cpi	r24, 0x44	; 68
     eb8:	a9 f4       	brne	.+42     	; 0xee4 <__vector_11+0x264>
		{
			showResult(Changes[14],Changes[15],Changes[16],Changes[17]);
     eba:	20 91 f6 03 	lds	r18, 0x03F6
     ebe:	30 e0       	ldi	r19, 0x00	; 0
     ec0:	40 91 f5 03 	lds	r20, 0x03F5
     ec4:	50 e0       	ldi	r21, 0x00	; 0
     ec6:	60 91 f4 03 	lds	r22, 0x03F4
     eca:	70 e0       	ldi	r23, 0x00	; 0
     ecc:	80 91 f3 03 	lds	r24, 0x03F3
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	0e 94 97 03 	call	0x72e	; 0x72e <showResult>
			i=0;
     ed6:	10 92 8b 03 	sts	0x038B, r1
     eda:	10 92 8a 03 	sts	0x038A, r1
			count=0;
     ede:	10 92 7e 04 	sts	0x047E, r1
			return;
     ee2:	06 c0       	rjmp	.+12     	; 0xef0 <__vector_11+0x270>
		}
		
		i=0;
     ee4:	10 92 8b 03 	sts	0x038B, r1
     ee8:	10 92 8a 03 	sts	0x038A, r1
		count=0;
     eec:	10 92 7e 04 	sts	0x047E, r1
	}
	
}
     ef0:	ff 91       	pop	r31
     ef2:	ef 91       	pop	r30
     ef4:	df 91       	pop	r29
     ef6:	cf 91       	pop	r28
     ef8:	bf 91       	pop	r27
     efa:	af 91       	pop	r26
     efc:	9f 91       	pop	r25
     efe:	8f 91       	pop	r24
     f00:	7f 91       	pop	r23
     f02:	6f 91       	pop	r22
     f04:	5f 91       	pop	r21
     f06:	4f 91       	pop	r20
     f08:	3f 91       	pop	r19
     f0a:	2f 91       	pop	r18
     f0c:	1f 91       	pop	r17
     f0e:	0f 91       	pop	r16
     f10:	0f 90       	pop	r0
     f12:	0f be       	out	0x3f, r0	; 63
     f14:	0f 90       	pop	r0
     f16:	1f 90       	pop	r1
     f18:	18 95       	reti

00000f1a <main>:
#include "SIM900.h"
#include "lcd.h"


int main(void)
{
     f1a:	cf 93       	push	r28
     f1c:	df 93       	push	r29
     f1e:	cd b7       	in	r28, 0x3d	; 61
     f20:	de b7       	in	r29, 0x3e	; 62
     f22:	64 97       	sbiw	r28, 0x14	; 20
     f24:	0f b6       	in	r0, 0x3f	; 63
     f26:	f8 94       	cli
     f28:	de bf       	out	0x3e, r29	; 62
     f2a:	0f be       	out	0x3f, r0	; 63
     f2c:	cd bf       	out	0x3d, r28	; 61
	
	DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) ;
     f2e:	8c ef       	ldi	r24, 0xFC	; 252
     f30:	81 bb       	out	0x11, r24	; 17
	char buffer[20];
	int k;
	Lcd4_Init();
     f32:	0e 94 91 02 	call	0x522	; 0x522 <Lcd4_Init>
	UART_ON(9600,8);
     f36:	68 e0       	ldi	r22, 0x08	; 8
     f38:	80 e8       	ldi	r24, 0x80	; 128
     f3a:	95 e2       	ldi	r25, 0x25	; 37
     f3c:	0e 94 56 00 	call	0xac	; 0xac <UART_ON>
	Lcd4_Write_String("electroSome LCD Hello World");
	Lcd4_Clear();
	Lcd4_Write_Char('e');
	*/
	
	 Lcd4_Clear();
     f40:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	 Lcd4_Set_Cursor(1,5);
     f44:	65 e0       	ldi	r22, 0x05	; 5
     f46:	81 e0       	ldi	r24, 0x01	; 1
     f48:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	 Lcd4_Write_String("Welcome");
     f4c:	88 ec       	ldi	r24, 0xC8	; 200
     f4e:	91 e0       	ldi	r25, 0x01	; 1
     f50:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
     f54:	2f e9       	ldi	r18, 0x9F	; 159
     f56:	86 e8       	ldi	r24, 0x86	; 134
     f58:	91 e0       	ldi	r25, 0x01	; 1
     f5a:	21 50       	subi	r18, 0x01	; 1
     f5c:	80 40       	sbci	r24, 0x00	; 0
     f5e:	90 40       	sbci	r25, 0x00	; 0
     f60:	e1 f7       	brne	.-8      	; 0xf5a <main+0x40>
     f62:	00 c0       	rjmp	.+0      	; 0xf64 <main+0x4a>
     f64:	00 00       	nop
	 _delay_ms(500);
	 Lcd4_Set_Cursor(2,0);
     f66:	60 e0       	ldi	r22, 0x00	; 0
     f68:	82 e0       	ldi	r24, 0x02	; 2
     f6a:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	 Lcd4_Write_String("Loading");
     f6e:	80 ed       	ldi	r24, 0xD0	; 208
     f70:	91 e0       	ldi	r25, 0x01	; 1
     f72:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
	 
	 for (k=0;k<101;k+=1)
     f76:	00 e0       	ldi	r16, 0x00	; 0
     f78:	10 e0       	ldi	r17, 0x00	; 0
	 {
		 Lcd4_Set_Cursor(2,12);
		 sprintf(buffer,"%d",k);
     f7a:	0f 2e       	mov	r0, r31
     f7c:	f8 ed       	ldi	r31, 0xD8	; 216
     f7e:	cf 2e       	mov	r12, r31
     f80:	f1 e0       	ldi	r31, 0x01	; 1
     f82:	df 2e       	mov	r13, r31
     f84:	f0 2d       	mov	r31, r0
     f86:	ce 01       	movw	r24, r28
     f88:	01 96       	adiw	r24, 0x01	; 1
     f8a:	7c 01       	movw	r14, r24
	 Lcd4_Set_Cursor(2,0);
	 Lcd4_Write_String("Loading");
	 
	 for (k=0;k<101;k+=1)
	 {
		 Lcd4_Set_Cursor(2,12);
     f8c:	6c e0       	ldi	r22, 0x0C	; 12
     f8e:	82 e0       	ldi	r24, 0x02	; 2
     f90:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
		 sprintf(buffer,"%d",k);
     f94:	1f 93       	push	r17
     f96:	0f 93       	push	r16
     f98:	df 92       	push	r13
     f9a:	cf 92       	push	r12
     f9c:	ff 92       	push	r15
     f9e:	ef 92       	push	r14
     fa0:	0e 94 d6 09 	call	0x13ac	; 0x13ac <sprintf>
		 Lcd4_Write_String(buffer);
     fa4:	c7 01       	movw	r24, r14
     fa6:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
		 Lcd4_Set_Cursor(2,15);
     faa:	6f e0       	ldi	r22, 0x0F	; 15
     fac:	82 e0       	ldi	r24, 0x02	; 2
     fae:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
		 Lcd4_Write_String("%");
     fb2:	8b ed       	ldi	r24, 0xDB	; 219
     fb4:	91 e0       	ldi	r25, 0x01	; 1
     fb6:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
     fba:	8f e4       	ldi	r24, 0x4F	; 79
     fbc:	93 ec       	ldi	r25, 0xC3	; 195
     fbe:	01 97       	sbiw	r24, 0x01	; 1
     fc0:	f1 f7       	brne	.-4      	; 0xfbe <main+0xa4>
     fc2:	00 c0       	rjmp	.+0      	; 0xfc4 <main+0xaa>
     fc4:	00 00       	nop
	 Lcd4_Write_String("Welcome");
	 _delay_ms(500);
	 Lcd4_Set_Cursor(2,0);
	 Lcd4_Write_String("Loading");
	 
	 for (k=0;k<101;k+=1)
     fc6:	0f 5f       	subi	r16, 0xFF	; 255
     fc8:	1f 4f       	sbci	r17, 0xFF	; 255
     fca:	0f 90       	pop	r0
     fcc:	0f 90       	pop	r0
     fce:	0f 90       	pop	r0
     fd0:	0f 90       	pop	r0
     fd2:	0f 90       	pop	r0
     fd4:	0f 90       	pop	r0
     fd6:	05 36       	cpi	r16, 0x65	; 101
     fd8:	11 05       	cpc	r17, r1
     fda:	c1 f6       	brne	.-80     	; 0xf8c <main+0x72>
     fdc:	9f eb       	ldi	r25, 0xBF	; 191
     fde:	27 e2       	ldi	r18, 0x27	; 39
     fe0:	89 e0       	ldi	r24, 0x09	; 9
     fe2:	91 50       	subi	r25, 0x01	; 1
     fe4:	20 40       	sbci	r18, 0x00	; 0
     fe6:	80 40       	sbci	r24, 0x00	; 0
     fe8:	e1 f7       	brne	.-8      	; 0xfe2 <main+0xc8>
     fea:	00 c0       	rjmp	.+0      	; 0xfec <main+0xd2>
     fec:	00 00       	nop
		 Lcd4_Set_Cursor(2,15);
		 Lcd4_Write_String("%");
		 _delay_ms(200);
	 }
	 _delay_ms(3000);
	 Lcd4_Clear();
     fee:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	
	
	DDRB  = 0xFF ;
     ff2:	8f ef       	ldi	r24, 0xFF	; 255
     ff4:	87 bb       	out	0x17, r24	; 23
	PORTB = 0xFF ;
     ff6:	88 bb       	out	0x18, r24	; 24
	
	
	// Prescaler = FCPU/1024
	TCCR0|=(1<<CS02)|(1<<CS00);
     ff8:	83 b7       	in	r24, 0x33	; 51
     ffa:	85 60       	ori	r24, 0x05	; 5
     ffc:	83 bf       	out	0x33, r24	; 51

	//Enable Overflow Interrupt Enable
	TIMSK|=(1<<TOIE0);
     ffe:	89 b7       	in	r24, 0x39	; 57
    1000:	81 60       	ori	r24, 0x01	; 1
    1002:	89 bf       	out	0x39, r24	; 57

	//Initialize Counter
	TCNT0=0;
    1004:	12 be       	out	0x32, r1	; 50
	
	ADMUX=ADC_VREF_TYPE & 0xff;
    1006:	80 e4       	ldi	r24, 0x40	; 64
    1008:	87 b9       	out	0x07, r24	; 7
	ADCSRA=0x83;
    100a:	83 e8       	ldi	r24, 0x83	; 131
    100c:	86 b9       	out	0x06, r24	; 6
	

	//---------------------Send Module ON Notification to Admin ------------------------------
	
	Lcd4_Set_Cursor(1,0);
    100e:	60 e0       	ldi	r22, 0x00	; 0
    1010:	81 e0       	ldi	r24, 0x01	; 1
    1012:	0e 94 74 02 	call	0x4e8	; 0x4e8 <Lcd4_Set_Cursor>
	Lcd4_Write_String("Module ON");
    1016:	8d ed       	ldi	r24, 0xDD	; 221
    1018:	91 e0       	ldi	r25, 0x01	; 1
    101a:	0e 94 08 03 	call	0x610	; 0x610 <Lcd4_Write_String>
    101e:	9f e3       	ldi	r25, 0x3F	; 63
    1020:	2d e0       	ldi	r18, 0x0D	; 13
    1022:	83 e0       	ldi	r24, 0x03	; 3
    1024:	91 50       	subi	r25, 0x01	; 1
    1026:	20 40       	sbci	r18, 0x00	; 0
    1028:	80 40       	sbci	r24, 0x00	; 0
    102a:	e1 f7       	brne	.-8      	; 0x1024 <main+0x10a>
    102c:	00 c0       	rjmp	.+0      	; 0x102e <main+0x114>
    102e:	00 00       	nop
	_delay_ms(1000);
	Lcd4_Clear();
    1030:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
	
	GSM_Send("09300093455","Hello Admin, Module is on .");
    1034:	67 ee       	ldi	r22, 0xE7	; 231
    1036:	71 e0       	ldi	r23, 0x01	; 1
    1038:	8d e9       	ldi	r24, 0x9D	; 157
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	0e 94 17 03 	call	0x62e	; 0x62e <GSM_Send>
	
	Tx_puts("AT\r");
    1040:	8a ec       	ldi	r24, 0xCA	; 202
    1042:	90 e0       	ldi	r25, 0x00	; 0
    1044:	0e 94 b0 00 	call	0x160	; 0x160 <Tx_puts>
    1048:	9f e9       	ldi	r25, 0x9F	; 159
    104a:	26 e8       	ldi	r18, 0x86	; 134
    104c:	81 e0       	ldi	r24, 0x01	; 1
    104e:	91 50       	subi	r25, 0x01	; 1
    1050:	20 40       	sbci	r18, 0x00	; 0
    1052:	80 40       	sbci	r24, 0x00	; 0
    1054:	e1 f7       	brne	.-8      	; 0x104e <main+0x134>
    1056:	00 c0       	rjmp	.+0      	; 0x1058 <main+0x13e>
    1058:	00 00       	nop
	
	//	Dial_Number("+989300093455");
		
	//-----------------------------------------------------------------------------------------
	
	Lcd4_Clear();
    105a:	0e 94 6d 02 	call	0x4da	; 0x4da <Lcd4_Clear>
    105e:	ff cf       	rjmp	.-2      	; 0x105e <main+0x144>

00001060 <__divsf3>:
    1060:	0c d0       	rcall	.+24     	; 0x107a <__divsf3x>
    1062:	e6 c0       	rjmp	.+460    	; 0x1230 <__fp_round>
    1064:	de d0       	rcall	.+444    	; 0x1222 <__fp_pscB>
    1066:	40 f0       	brcs	.+16     	; 0x1078 <__divsf3+0x18>
    1068:	d5 d0       	rcall	.+426    	; 0x1214 <__fp_pscA>
    106a:	30 f0       	brcs	.+12     	; 0x1078 <__divsf3+0x18>
    106c:	21 f4       	brne	.+8      	; 0x1076 <__divsf3+0x16>
    106e:	5f 3f       	cpi	r21, 0xFF	; 255
    1070:	19 f0       	breq	.+6      	; 0x1078 <__divsf3+0x18>
    1072:	c7 c0       	rjmp	.+398    	; 0x1202 <__fp_inf>
    1074:	51 11       	cpse	r21, r1
    1076:	10 c1       	rjmp	.+544    	; 0x1298 <__fp_szero>
    1078:	ca c0       	rjmp	.+404    	; 0x120e <__fp_nan>

0000107a <__divsf3x>:
    107a:	eb d0       	rcall	.+470    	; 0x1252 <__fp_split3>
    107c:	98 f3       	brcs	.-26     	; 0x1064 <__divsf3+0x4>

0000107e <__divsf3_pse>:
    107e:	99 23       	and	r25, r25
    1080:	c9 f3       	breq	.-14     	; 0x1074 <__divsf3+0x14>
    1082:	55 23       	and	r21, r21
    1084:	b1 f3       	breq	.-20     	; 0x1072 <__divsf3+0x12>
    1086:	95 1b       	sub	r25, r21
    1088:	55 0b       	sbc	r21, r21
    108a:	bb 27       	eor	r27, r27
    108c:	aa 27       	eor	r26, r26
    108e:	62 17       	cp	r22, r18
    1090:	73 07       	cpc	r23, r19
    1092:	84 07       	cpc	r24, r20
    1094:	38 f0       	brcs	.+14     	; 0x10a4 <__divsf3_pse+0x26>
    1096:	9f 5f       	subi	r25, 0xFF	; 255
    1098:	5f 4f       	sbci	r21, 0xFF	; 255
    109a:	22 0f       	add	r18, r18
    109c:	33 1f       	adc	r19, r19
    109e:	44 1f       	adc	r20, r20
    10a0:	aa 1f       	adc	r26, r26
    10a2:	a9 f3       	breq	.-22     	; 0x108e <__divsf3_pse+0x10>
    10a4:	33 d0       	rcall	.+102    	; 0x110c <__divsf3_pse+0x8e>
    10a6:	0e 2e       	mov	r0, r30
    10a8:	3a f0       	brmi	.+14     	; 0x10b8 <__divsf3_pse+0x3a>
    10aa:	e0 e8       	ldi	r30, 0x80	; 128
    10ac:	30 d0       	rcall	.+96     	; 0x110e <__divsf3_pse+0x90>
    10ae:	91 50       	subi	r25, 0x01	; 1
    10b0:	50 40       	sbci	r21, 0x00	; 0
    10b2:	e6 95       	lsr	r30
    10b4:	00 1c       	adc	r0, r0
    10b6:	ca f7       	brpl	.-14     	; 0x10aa <__divsf3_pse+0x2c>
    10b8:	29 d0       	rcall	.+82     	; 0x110c <__divsf3_pse+0x8e>
    10ba:	fe 2f       	mov	r31, r30
    10bc:	27 d0       	rcall	.+78     	; 0x110c <__divsf3_pse+0x8e>
    10be:	66 0f       	add	r22, r22
    10c0:	77 1f       	adc	r23, r23
    10c2:	88 1f       	adc	r24, r24
    10c4:	bb 1f       	adc	r27, r27
    10c6:	26 17       	cp	r18, r22
    10c8:	37 07       	cpc	r19, r23
    10ca:	48 07       	cpc	r20, r24
    10cc:	ab 07       	cpc	r26, r27
    10ce:	b0 e8       	ldi	r27, 0x80	; 128
    10d0:	09 f0       	breq	.+2      	; 0x10d4 <__divsf3_pse+0x56>
    10d2:	bb 0b       	sbc	r27, r27
    10d4:	80 2d       	mov	r24, r0
    10d6:	bf 01       	movw	r22, r30
    10d8:	ff 27       	eor	r31, r31
    10da:	93 58       	subi	r25, 0x83	; 131
    10dc:	5f 4f       	sbci	r21, 0xFF	; 255
    10de:	2a f0       	brmi	.+10     	; 0x10ea <__divsf3_pse+0x6c>
    10e0:	9e 3f       	cpi	r25, 0xFE	; 254
    10e2:	51 05       	cpc	r21, r1
    10e4:	68 f0       	brcs	.+26     	; 0x1100 <__divsf3_pse+0x82>
    10e6:	8d c0       	rjmp	.+282    	; 0x1202 <__fp_inf>
    10e8:	d7 c0       	rjmp	.+430    	; 0x1298 <__fp_szero>
    10ea:	5f 3f       	cpi	r21, 0xFF	; 255
    10ec:	ec f3       	brlt	.-6      	; 0x10e8 <__divsf3_pse+0x6a>
    10ee:	98 3e       	cpi	r25, 0xE8	; 232
    10f0:	dc f3       	brlt	.-10     	; 0x10e8 <__divsf3_pse+0x6a>
    10f2:	86 95       	lsr	r24
    10f4:	77 95       	ror	r23
    10f6:	67 95       	ror	r22
    10f8:	b7 95       	ror	r27
    10fa:	f7 95       	ror	r31
    10fc:	9f 5f       	subi	r25, 0xFF	; 255
    10fe:	c9 f7       	brne	.-14     	; 0x10f2 <__divsf3_pse+0x74>
    1100:	88 0f       	add	r24, r24
    1102:	91 1d       	adc	r25, r1
    1104:	96 95       	lsr	r25
    1106:	87 95       	ror	r24
    1108:	97 f9       	bld	r25, 7
    110a:	08 95       	ret
    110c:	e1 e0       	ldi	r30, 0x01	; 1
    110e:	66 0f       	add	r22, r22
    1110:	77 1f       	adc	r23, r23
    1112:	88 1f       	adc	r24, r24
    1114:	bb 1f       	adc	r27, r27
    1116:	62 17       	cp	r22, r18
    1118:	73 07       	cpc	r23, r19
    111a:	84 07       	cpc	r24, r20
    111c:	ba 07       	cpc	r27, r26
    111e:	20 f0       	brcs	.+8      	; 0x1128 <__divsf3_pse+0xaa>
    1120:	62 1b       	sub	r22, r18
    1122:	73 0b       	sbc	r23, r19
    1124:	84 0b       	sbc	r24, r20
    1126:	ba 0b       	sbc	r27, r26
    1128:	ee 1f       	adc	r30, r30
    112a:	88 f7       	brcc	.-30     	; 0x110e <__divsf3_pse+0x90>
    112c:	e0 95       	com	r30
    112e:	08 95       	ret

00001130 <__fixunssfsi>:
    1130:	98 d0       	rcall	.+304    	; 0x1262 <__fp_splitA>
    1132:	88 f0       	brcs	.+34     	; 0x1156 <__fixunssfsi+0x26>
    1134:	9f 57       	subi	r25, 0x7F	; 127
    1136:	90 f0       	brcs	.+36     	; 0x115c <__fixunssfsi+0x2c>
    1138:	b9 2f       	mov	r27, r25
    113a:	99 27       	eor	r25, r25
    113c:	b7 51       	subi	r27, 0x17	; 23
    113e:	a0 f0       	brcs	.+40     	; 0x1168 <__fixunssfsi+0x38>
    1140:	d1 f0       	breq	.+52     	; 0x1176 <__fixunssfsi+0x46>
    1142:	66 0f       	add	r22, r22
    1144:	77 1f       	adc	r23, r23
    1146:	88 1f       	adc	r24, r24
    1148:	99 1f       	adc	r25, r25
    114a:	1a f0       	brmi	.+6      	; 0x1152 <__fixunssfsi+0x22>
    114c:	ba 95       	dec	r27
    114e:	c9 f7       	brne	.-14     	; 0x1142 <__fixunssfsi+0x12>
    1150:	12 c0       	rjmp	.+36     	; 0x1176 <__fixunssfsi+0x46>
    1152:	b1 30       	cpi	r27, 0x01	; 1
    1154:	81 f0       	breq	.+32     	; 0x1176 <__fixunssfsi+0x46>
    1156:	9f d0       	rcall	.+318    	; 0x1296 <__fp_zero>
    1158:	b1 e0       	ldi	r27, 0x01	; 1
    115a:	08 95       	ret
    115c:	9c c0       	rjmp	.+312    	; 0x1296 <__fp_zero>
    115e:	67 2f       	mov	r22, r23
    1160:	78 2f       	mov	r23, r24
    1162:	88 27       	eor	r24, r24
    1164:	b8 5f       	subi	r27, 0xF8	; 248
    1166:	39 f0       	breq	.+14     	; 0x1176 <__fixunssfsi+0x46>
    1168:	b9 3f       	cpi	r27, 0xF9	; 249
    116a:	cc f3       	brlt	.-14     	; 0x115e <__fixunssfsi+0x2e>
    116c:	86 95       	lsr	r24
    116e:	77 95       	ror	r23
    1170:	67 95       	ror	r22
    1172:	b3 95       	inc	r27
    1174:	d9 f7       	brne	.-10     	; 0x116c <__fixunssfsi+0x3c>
    1176:	3e f4       	brtc	.+14     	; 0x1186 <__fixunssfsi+0x56>
    1178:	90 95       	com	r25
    117a:	80 95       	com	r24
    117c:	70 95       	com	r23
    117e:	61 95       	neg	r22
    1180:	7f 4f       	sbci	r23, 0xFF	; 255
    1182:	8f 4f       	sbci	r24, 0xFF	; 255
    1184:	9f 4f       	sbci	r25, 0xFF	; 255
    1186:	08 95       	ret

00001188 <__floatunsisf>:
    1188:	e8 94       	clt
    118a:	09 c0       	rjmp	.+18     	; 0x119e <__floatsisf+0x12>

0000118c <__floatsisf>:
    118c:	97 fb       	bst	r25, 7
    118e:	3e f4       	brtc	.+14     	; 0x119e <__floatsisf+0x12>
    1190:	90 95       	com	r25
    1192:	80 95       	com	r24
    1194:	70 95       	com	r23
    1196:	61 95       	neg	r22
    1198:	7f 4f       	sbci	r23, 0xFF	; 255
    119a:	8f 4f       	sbci	r24, 0xFF	; 255
    119c:	9f 4f       	sbci	r25, 0xFF	; 255
    119e:	99 23       	and	r25, r25
    11a0:	a9 f0       	breq	.+42     	; 0x11cc <__floatsisf+0x40>
    11a2:	f9 2f       	mov	r31, r25
    11a4:	96 e9       	ldi	r25, 0x96	; 150
    11a6:	bb 27       	eor	r27, r27
    11a8:	93 95       	inc	r25
    11aa:	f6 95       	lsr	r31
    11ac:	87 95       	ror	r24
    11ae:	77 95       	ror	r23
    11b0:	67 95       	ror	r22
    11b2:	b7 95       	ror	r27
    11b4:	f1 11       	cpse	r31, r1
    11b6:	f8 cf       	rjmp	.-16     	; 0x11a8 <__floatsisf+0x1c>
    11b8:	fa f4       	brpl	.+62     	; 0x11f8 <__floatsisf+0x6c>
    11ba:	bb 0f       	add	r27, r27
    11bc:	11 f4       	brne	.+4      	; 0x11c2 <__floatsisf+0x36>
    11be:	60 ff       	sbrs	r22, 0
    11c0:	1b c0       	rjmp	.+54     	; 0x11f8 <__floatsisf+0x6c>
    11c2:	6f 5f       	subi	r22, 0xFF	; 255
    11c4:	7f 4f       	sbci	r23, 0xFF	; 255
    11c6:	8f 4f       	sbci	r24, 0xFF	; 255
    11c8:	9f 4f       	sbci	r25, 0xFF	; 255
    11ca:	16 c0       	rjmp	.+44     	; 0x11f8 <__floatsisf+0x6c>
    11cc:	88 23       	and	r24, r24
    11ce:	11 f0       	breq	.+4      	; 0x11d4 <__floatsisf+0x48>
    11d0:	96 e9       	ldi	r25, 0x96	; 150
    11d2:	11 c0       	rjmp	.+34     	; 0x11f6 <__floatsisf+0x6a>
    11d4:	77 23       	and	r23, r23
    11d6:	21 f0       	breq	.+8      	; 0x11e0 <__floatsisf+0x54>
    11d8:	9e e8       	ldi	r25, 0x8E	; 142
    11da:	87 2f       	mov	r24, r23
    11dc:	76 2f       	mov	r23, r22
    11de:	05 c0       	rjmp	.+10     	; 0x11ea <__floatsisf+0x5e>
    11e0:	66 23       	and	r22, r22
    11e2:	71 f0       	breq	.+28     	; 0x1200 <__floatsisf+0x74>
    11e4:	96 e8       	ldi	r25, 0x86	; 134
    11e6:	86 2f       	mov	r24, r22
    11e8:	70 e0       	ldi	r23, 0x00	; 0
    11ea:	60 e0       	ldi	r22, 0x00	; 0
    11ec:	2a f0       	brmi	.+10     	; 0x11f8 <__floatsisf+0x6c>
    11ee:	9a 95       	dec	r25
    11f0:	66 0f       	add	r22, r22
    11f2:	77 1f       	adc	r23, r23
    11f4:	88 1f       	adc	r24, r24
    11f6:	da f7       	brpl	.-10     	; 0x11ee <__floatsisf+0x62>
    11f8:	88 0f       	add	r24, r24
    11fa:	96 95       	lsr	r25
    11fc:	87 95       	ror	r24
    11fe:	97 f9       	bld	r25, 7
    1200:	08 95       	ret

00001202 <__fp_inf>:
    1202:	97 f9       	bld	r25, 7
    1204:	9f 67       	ori	r25, 0x7F	; 127
    1206:	80 e8       	ldi	r24, 0x80	; 128
    1208:	70 e0       	ldi	r23, 0x00	; 0
    120a:	60 e0       	ldi	r22, 0x00	; 0
    120c:	08 95       	ret

0000120e <__fp_nan>:
    120e:	9f ef       	ldi	r25, 0xFF	; 255
    1210:	80 ec       	ldi	r24, 0xC0	; 192
    1212:	08 95       	ret

00001214 <__fp_pscA>:
    1214:	00 24       	eor	r0, r0
    1216:	0a 94       	dec	r0
    1218:	16 16       	cp	r1, r22
    121a:	17 06       	cpc	r1, r23
    121c:	18 06       	cpc	r1, r24
    121e:	09 06       	cpc	r0, r25
    1220:	08 95       	ret

00001222 <__fp_pscB>:
    1222:	00 24       	eor	r0, r0
    1224:	0a 94       	dec	r0
    1226:	12 16       	cp	r1, r18
    1228:	13 06       	cpc	r1, r19
    122a:	14 06       	cpc	r1, r20
    122c:	05 06       	cpc	r0, r21
    122e:	08 95       	ret

00001230 <__fp_round>:
    1230:	09 2e       	mov	r0, r25
    1232:	03 94       	inc	r0
    1234:	00 0c       	add	r0, r0
    1236:	11 f4       	brne	.+4      	; 0x123c <__fp_round+0xc>
    1238:	88 23       	and	r24, r24
    123a:	52 f0       	brmi	.+20     	; 0x1250 <__fp_round+0x20>
    123c:	bb 0f       	add	r27, r27
    123e:	40 f4       	brcc	.+16     	; 0x1250 <__fp_round+0x20>
    1240:	bf 2b       	or	r27, r31
    1242:	11 f4       	brne	.+4      	; 0x1248 <__fp_round+0x18>
    1244:	60 ff       	sbrs	r22, 0
    1246:	04 c0       	rjmp	.+8      	; 0x1250 <__fp_round+0x20>
    1248:	6f 5f       	subi	r22, 0xFF	; 255
    124a:	7f 4f       	sbci	r23, 0xFF	; 255
    124c:	8f 4f       	sbci	r24, 0xFF	; 255
    124e:	9f 4f       	sbci	r25, 0xFF	; 255
    1250:	08 95       	ret

00001252 <__fp_split3>:
    1252:	57 fd       	sbrc	r21, 7
    1254:	90 58       	subi	r25, 0x80	; 128
    1256:	44 0f       	add	r20, r20
    1258:	55 1f       	adc	r21, r21
    125a:	59 f0       	breq	.+22     	; 0x1272 <__fp_splitA+0x10>
    125c:	5f 3f       	cpi	r21, 0xFF	; 255
    125e:	71 f0       	breq	.+28     	; 0x127c <__fp_splitA+0x1a>
    1260:	47 95       	ror	r20

00001262 <__fp_splitA>:
    1262:	88 0f       	add	r24, r24
    1264:	97 fb       	bst	r25, 7
    1266:	99 1f       	adc	r25, r25
    1268:	61 f0       	breq	.+24     	; 0x1282 <__fp_splitA+0x20>
    126a:	9f 3f       	cpi	r25, 0xFF	; 255
    126c:	79 f0       	breq	.+30     	; 0x128c <__fp_splitA+0x2a>
    126e:	87 95       	ror	r24
    1270:	08 95       	ret
    1272:	12 16       	cp	r1, r18
    1274:	13 06       	cpc	r1, r19
    1276:	14 06       	cpc	r1, r20
    1278:	55 1f       	adc	r21, r21
    127a:	f2 cf       	rjmp	.-28     	; 0x1260 <__fp_split3+0xe>
    127c:	46 95       	lsr	r20
    127e:	f1 df       	rcall	.-30     	; 0x1262 <__fp_splitA>
    1280:	08 c0       	rjmp	.+16     	; 0x1292 <__fp_splitA+0x30>
    1282:	16 16       	cp	r1, r22
    1284:	17 06       	cpc	r1, r23
    1286:	18 06       	cpc	r1, r24
    1288:	99 1f       	adc	r25, r25
    128a:	f1 cf       	rjmp	.-30     	; 0x126e <__fp_splitA+0xc>
    128c:	86 95       	lsr	r24
    128e:	71 05       	cpc	r23, r1
    1290:	61 05       	cpc	r22, r1
    1292:	08 94       	sec
    1294:	08 95       	ret

00001296 <__fp_zero>:
    1296:	e8 94       	clt

00001298 <__fp_szero>:
    1298:	bb 27       	eor	r27, r27
    129a:	66 27       	eor	r22, r22
    129c:	77 27       	eor	r23, r23
    129e:	cb 01       	movw	r24, r22
    12a0:	97 f9       	bld	r25, 7
    12a2:	08 95       	ret

000012a4 <__mulsf3>:
    12a4:	0b d0       	rcall	.+22     	; 0x12bc <__mulsf3x>
    12a6:	c4 cf       	rjmp	.-120    	; 0x1230 <__fp_round>
    12a8:	b5 df       	rcall	.-150    	; 0x1214 <__fp_pscA>
    12aa:	28 f0       	brcs	.+10     	; 0x12b6 <__mulsf3+0x12>
    12ac:	ba df       	rcall	.-140    	; 0x1222 <__fp_pscB>
    12ae:	18 f0       	brcs	.+6      	; 0x12b6 <__mulsf3+0x12>
    12b0:	95 23       	and	r25, r21
    12b2:	09 f0       	breq	.+2      	; 0x12b6 <__mulsf3+0x12>
    12b4:	a6 cf       	rjmp	.-180    	; 0x1202 <__fp_inf>
    12b6:	ab cf       	rjmp	.-170    	; 0x120e <__fp_nan>
    12b8:	11 24       	eor	r1, r1
    12ba:	ee cf       	rjmp	.-36     	; 0x1298 <__fp_szero>

000012bc <__mulsf3x>:
    12bc:	ca df       	rcall	.-108    	; 0x1252 <__fp_split3>
    12be:	a0 f3       	brcs	.-24     	; 0x12a8 <__mulsf3+0x4>

000012c0 <__mulsf3_pse>:
    12c0:	95 9f       	mul	r25, r21
    12c2:	d1 f3       	breq	.-12     	; 0x12b8 <__mulsf3+0x14>
    12c4:	95 0f       	add	r25, r21
    12c6:	50 e0       	ldi	r21, 0x00	; 0
    12c8:	55 1f       	adc	r21, r21
    12ca:	62 9f       	mul	r22, r18
    12cc:	f0 01       	movw	r30, r0
    12ce:	72 9f       	mul	r23, r18
    12d0:	bb 27       	eor	r27, r27
    12d2:	f0 0d       	add	r31, r0
    12d4:	b1 1d       	adc	r27, r1
    12d6:	63 9f       	mul	r22, r19
    12d8:	aa 27       	eor	r26, r26
    12da:	f0 0d       	add	r31, r0
    12dc:	b1 1d       	adc	r27, r1
    12de:	aa 1f       	adc	r26, r26
    12e0:	64 9f       	mul	r22, r20
    12e2:	66 27       	eor	r22, r22
    12e4:	b0 0d       	add	r27, r0
    12e6:	a1 1d       	adc	r26, r1
    12e8:	66 1f       	adc	r22, r22
    12ea:	82 9f       	mul	r24, r18
    12ec:	22 27       	eor	r18, r18
    12ee:	b0 0d       	add	r27, r0
    12f0:	a1 1d       	adc	r26, r1
    12f2:	62 1f       	adc	r22, r18
    12f4:	73 9f       	mul	r23, r19
    12f6:	b0 0d       	add	r27, r0
    12f8:	a1 1d       	adc	r26, r1
    12fa:	62 1f       	adc	r22, r18
    12fc:	83 9f       	mul	r24, r19
    12fe:	a0 0d       	add	r26, r0
    1300:	61 1d       	adc	r22, r1
    1302:	22 1f       	adc	r18, r18
    1304:	74 9f       	mul	r23, r20
    1306:	33 27       	eor	r19, r19
    1308:	a0 0d       	add	r26, r0
    130a:	61 1d       	adc	r22, r1
    130c:	23 1f       	adc	r18, r19
    130e:	84 9f       	mul	r24, r20
    1310:	60 0d       	add	r22, r0
    1312:	21 1d       	adc	r18, r1
    1314:	82 2f       	mov	r24, r18
    1316:	76 2f       	mov	r23, r22
    1318:	6a 2f       	mov	r22, r26
    131a:	11 24       	eor	r1, r1
    131c:	9f 57       	subi	r25, 0x7F	; 127
    131e:	50 40       	sbci	r21, 0x00	; 0
    1320:	8a f0       	brmi	.+34     	; 0x1344 <__mulsf3_pse+0x84>
    1322:	e1 f0       	breq	.+56     	; 0x135c <__mulsf3_pse+0x9c>
    1324:	88 23       	and	r24, r24
    1326:	4a f0       	brmi	.+18     	; 0x133a <__mulsf3_pse+0x7a>
    1328:	ee 0f       	add	r30, r30
    132a:	ff 1f       	adc	r31, r31
    132c:	bb 1f       	adc	r27, r27
    132e:	66 1f       	adc	r22, r22
    1330:	77 1f       	adc	r23, r23
    1332:	88 1f       	adc	r24, r24
    1334:	91 50       	subi	r25, 0x01	; 1
    1336:	50 40       	sbci	r21, 0x00	; 0
    1338:	a9 f7       	brne	.-22     	; 0x1324 <__mulsf3_pse+0x64>
    133a:	9e 3f       	cpi	r25, 0xFE	; 254
    133c:	51 05       	cpc	r21, r1
    133e:	70 f0       	brcs	.+28     	; 0x135c <__mulsf3_pse+0x9c>
    1340:	60 cf       	rjmp	.-320    	; 0x1202 <__fp_inf>
    1342:	aa cf       	rjmp	.-172    	; 0x1298 <__fp_szero>
    1344:	5f 3f       	cpi	r21, 0xFF	; 255
    1346:	ec f3       	brlt	.-6      	; 0x1342 <__mulsf3_pse+0x82>
    1348:	98 3e       	cpi	r25, 0xE8	; 232
    134a:	dc f3       	brlt	.-10     	; 0x1342 <__mulsf3_pse+0x82>
    134c:	86 95       	lsr	r24
    134e:	77 95       	ror	r23
    1350:	67 95       	ror	r22
    1352:	b7 95       	ror	r27
    1354:	f7 95       	ror	r31
    1356:	e7 95       	ror	r30
    1358:	9f 5f       	subi	r25, 0xFF	; 255
    135a:	c1 f7       	brne	.-16     	; 0x134c <__mulsf3_pse+0x8c>
    135c:	fe 2b       	or	r31, r30
    135e:	88 0f       	add	r24, r24
    1360:	91 1d       	adc	r25, r1
    1362:	96 95       	lsr	r25
    1364:	87 95       	ror	r24
    1366:	97 f9       	bld	r25, 7
    1368:	08 95       	ret

0000136a <strcpy>:
    136a:	fb 01       	movw	r30, r22
    136c:	dc 01       	movw	r26, r24
    136e:	01 90       	ld	r0, Z+
    1370:	0d 92       	st	X+, r0
    1372:	00 20       	and	r0, r0
    1374:	e1 f7       	brne	.-8      	; 0x136e <strcpy+0x4>
    1376:	08 95       	ret

00001378 <strstr>:
    1378:	fb 01       	movw	r30, r22
    137a:	51 91       	ld	r21, Z+
    137c:	55 23       	and	r21, r21
    137e:	a9 f0       	breq	.+42     	; 0x13aa <strstr+0x32>
    1380:	bf 01       	movw	r22, r30
    1382:	dc 01       	movw	r26, r24
    1384:	4d 91       	ld	r20, X+
    1386:	45 17       	cp	r20, r21
    1388:	41 11       	cpse	r20, r1
    138a:	e1 f7       	brne	.-8      	; 0x1384 <strstr+0xc>
    138c:	59 f4       	brne	.+22     	; 0x13a4 <strstr+0x2c>
    138e:	cd 01       	movw	r24, r26
    1390:	01 90       	ld	r0, Z+
    1392:	00 20       	and	r0, r0
    1394:	49 f0       	breq	.+18     	; 0x13a8 <strstr+0x30>
    1396:	4d 91       	ld	r20, X+
    1398:	40 15       	cp	r20, r0
    139a:	41 11       	cpse	r20, r1
    139c:	c9 f3       	breq	.-14     	; 0x1390 <strstr+0x18>
    139e:	fb 01       	movw	r30, r22
    13a0:	41 11       	cpse	r20, r1
    13a2:	ef cf       	rjmp	.-34     	; 0x1382 <strstr+0xa>
    13a4:	81 e0       	ldi	r24, 0x01	; 1
    13a6:	90 e0       	ldi	r25, 0x00	; 0
    13a8:	01 97       	sbiw	r24, 0x01	; 1
    13aa:	08 95       	ret

000013ac <sprintf>:
    13ac:	ae e0       	ldi	r26, 0x0E	; 14
    13ae:	b0 e0       	ldi	r27, 0x00	; 0
    13b0:	ec ed       	ldi	r30, 0xDC	; 220
    13b2:	f9 e0       	ldi	r31, 0x09	; 9
    13b4:	0c 94 7e 0c 	jmp	0x18fc	; 0x18fc <__prologue_saves__+0x1c>
    13b8:	0d 89       	ldd	r16, Y+21	; 0x15
    13ba:	1e 89       	ldd	r17, Y+22	; 0x16
    13bc:	86 e0       	ldi	r24, 0x06	; 6
    13be:	8c 83       	std	Y+4, r24	; 0x04
    13c0:	1a 83       	std	Y+2, r17	; 0x02
    13c2:	09 83       	std	Y+1, r16	; 0x01
    13c4:	8f ef       	ldi	r24, 0xFF	; 255
    13c6:	9f e7       	ldi	r25, 0x7F	; 127
    13c8:	9e 83       	std	Y+6, r25	; 0x06
    13ca:	8d 83       	std	Y+5, r24	; 0x05
    13cc:	ae 01       	movw	r20, r28
    13ce:	47 5e       	subi	r20, 0xE7	; 231
    13d0:	5f 4f       	sbci	r21, 0xFF	; 255
    13d2:	6f 89       	ldd	r22, Y+23	; 0x17
    13d4:	78 8d       	ldd	r23, Y+24	; 0x18
    13d6:	ce 01       	movw	r24, r28
    13d8:	01 96       	adiw	r24, 0x01	; 1
    13da:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <vfprintf>
    13de:	ef 81       	ldd	r30, Y+7	; 0x07
    13e0:	f8 85       	ldd	r31, Y+8	; 0x08
    13e2:	e0 0f       	add	r30, r16
    13e4:	f1 1f       	adc	r31, r17
    13e6:	10 82       	st	Z, r1
    13e8:	2e 96       	adiw	r28, 0x0e	; 14
    13ea:	e4 e0       	ldi	r30, 0x04	; 4
    13ec:	0c 94 9a 0c 	jmp	0x1934	; 0x1934 <__epilogue_restores__+0x1c>

000013f0 <vfprintf>:
    13f0:	ac e0       	ldi	r26, 0x0C	; 12
    13f2:	b0 e0       	ldi	r27, 0x00	; 0
    13f4:	ee ef       	ldi	r30, 0xFE	; 254
    13f6:	f9 e0       	ldi	r31, 0x09	; 9
    13f8:	0c 94 70 0c 	jmp	0x18e0	; 0x18e0 <__prologue_saves__>
    13fc:	7c 01       	movw	r14, r24
    13fe:	6b 01       	movw	r12, r22
    1400:	8a 01       	movw	r16, r20
    1402:	fc 01       	movw	r30, r24
    1404:	17 82       	std	Z+7, r1	; 0x07
    1406:	16 82       	std	Z+6, r1	; 0x06
    1408:	83 81       	ldd	r24, Z+3	; 0x03
    140a:	81 ff       	sbrs	r24, 1
    140c:	bd c1       	rjmp	.+890    	; 0x1788 <vfprintf+0x398>
    140e:	ce 01       	movw	r24, r28
    1410:	01 96       	adiw	r24, 0x01	; 1
    1412:	4c 01       	movw	r8, r24
    1414:	f7 01       	movw	r30, r14
    1416:	93 81       	ldd	r25, Z+3	; 0x03
    1418:	f6 01       	movw	r30, r12
    141a:	93 fd       	sbrc	r25, 3
    141c:	85 91       	lpm	r24, Z+
    141e:	93 ff       	sbrs	r25, 3
    1420:	81 91       	ld	r24, Z+
    1422:	6f 01       	movw	r12, r30
    1424:	88 23       	and	r24, r24
    1426:	09 f4       	brne	.+2      	; 0x142a <vfprintf+0x3a>
    1428:	ab c1       	rjmp	.+854    	; 0x1780 <vfprintf+0x390>
    142a:	85 32       	cpi	r24, 0x25	; 37
    142c:	39 f4       	brne	.+14     	; 0x143c <vfprintf+0x4c>
    142e:	93 fd       	sbrc	r25, 3
    1430:	85 91       	lpm	r24, Z+
    1432:	93 ff       	sbrs	r25, 3
    1434:	81 91       	ld	r24, Z+
    1436:	6f 01       	movw	r12, r30
    1438:	85 32       	cpi	r24, 0x25	; 37
    143a:	29 f4       	brne	.+10     	; 0x1446 <vfprintf+0x56>
    143c:	b7 01       	movw	r22, r14
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <fputc>
    1444:	e7 cf       	rjmp	.-50     	; 0x1414 <vfprintf+0x24>
    1446:	51 2c       	mov	r5, r1
    1448:	31 2c       	mov	r3, r1
    144a:	20 e0       	ldi	r18, 0x00	; 0
    144c:	20 32       	cpi	r18, 0x20	; 32
    144e:	a0 f4       	brcc	.+40     	; 0x1478 <vfprintf+0x88>
    1450:	8b 32       	cpi	r24, 0x2B	; 43
    1452:	69 f0       	breq	.+26     	; 0x146e <vfprintf+0x7e>
    1454:	30 f4       	brcc	.+12     	; 0x1462 <vfprintf+0x72>
    1456:	80 32       	cpi	r24, 0x20	; 32
    1458:	59 f0       	breq	.+22     	; 0x1470 <vfprintf+0x80>
    145a:	83 32       	cpi	r24, 0x23	; 35
    145c:	69 f4       	brne	.+26     	; 0x1478 <vfprintf+0x88>
    145e:	20 61       	ori	r18, 0x10	; 16
    1460:	2c c0       	rjmp	.+88     	; 0x14ba <vfprintf+0xca>
    1462:	8d 32       	cpi	r24, 0x2D	; 45
    1464:	39 f0       	breq	.+14     	; 0x1474 <vfprintf+0x84>
    1466:	80 33       	cpi	r24, 0x30	; 48
    1468:	39 f4       	brne	.+14     	; 0x1478 <vfprintf+0x88>
    146a:	21 60       	ori	r18, 0x01	; 1
    146c:	26 c0       	rjmp	.+76     	; 0x14ba <vfprintf+0xca>
    146e:	22 60       	ori	r18, 0x02	; 2
    1470:	24 60       	ori	r18, 0x04	; 4
    1472:	23 c0       	rjmp	.+70     	; 0x14ba <vfprintf+0xca>
    1474:	28 60       	ori	r18, 0x08	; 8
    1476:	21 c0       	rjmp	.+66     	; 0x14ba <vfprintf+0xca>
    1478:	27 fd       	sbrc	r18, 7
    147a:	27 c0       	rjmp	.+78     	; 0x14ca <vfprintf+0xda>
    147c:	30 ed       	ldi	r19, 0xD0	; 208
    147e:	38 0f       	add	r19, r24
    1480:	3a 30       	cpi	r19, 0x0A	; 10
    1482:	78 f4       	brcc	.+30     	; 0x14a2 <vfprintf+0xb2>
    1484:	26 ff       	sbrs	r18, 6
    1486:	06 c0       	rjmp	.+12     	; 0x1494 <vfprintf+0xa4>
    1488:	fa e0       	ldi	r31, 0x0A	; 10
    148a:	5f 9e       	mul	r5, r31
    148c:	30 0d       	add	r19, r0
    148e:	11 24       	eor	r1, r1
    1490:	53 2e       	mov	r5, r19
    1492:	13 c0       	rjmp	.+38     	; 0x14ba <vfprintf+0xca>
    1494:	8a e0       	ldi	r24, 0x0A	; 10
    1496:	38 9e       	mul	r3, r24
    1498:	30 0d       	add	r19, r0
    149a:	11 24       	eor	r1, r1
    149c:	33 2e       	mov	r3, r19
    149e:	20 62       	ori	r18, 0x20	; 32
    14a0:	0c c0       	rjmp	.+24     	; 0x14ba <vfprintf+0xca>
    14a2:	8e 32       	cpi	r24, 0x2E	; 46
    14a4:	21 f4       	brne	.+8      	; 0x14ae <vfprintf+0xbe>
    14a6:	26 fd       	sbrc	r18, 6
    14a8:	6b c1       	rjmp	.+726    	; 0x1780 <vfprintf+0x390>
    14aa:	20 64       	ori	r18, 0x40	; 64
    14ac:	06 c0       	rjmp	.+12     	; 0x14ba <vfprintf+0xca>
    14ae:	8c 36       	cpi	r24, 0x6C	; 108
    14b0:	11 f4       	brne	.+4      	; 0x14b6 <vfprintf+0xc6>
    14b2:	20 68       	ori	r18, 0x80	; 128
    14b4:	02 c0       	rjmp	.+4      	; 0x14ba <vfprintf+0xca>
    14b6:	88 36       	cpi	r24, 0x68	; 104
    14b8:	41 f4       	brne	.+16     	; 0x14ca <vfprintf+0xda>
    14ba:	f6 01       	movw	r30, r12
    14bc:	93 fd       	sbrc	r25, 3
    14be:	85 91       	lpm	r24, Z+
    14c0:	93 ff       	sbrs	r25, 3
    14c2:	81 91       	ld	r24, Z+
    14c4:	6f 01       	movw	r12, r30
    14c6:	81 11       	cpse	r24, r1
    14c8:	c1 cf       	rjmp	.-126    	; 0x144c <vfprintf+0x5c>
    14ca:	98 2f       	mov	r25, r24
    14cc:	9f 7d       	andi	r25, 0xDF	; 223
    14ce:	95 54       	subi	r25, 0x45	; 69
    14d0:	93 30       	cpi	r25, 0x03	; 3
    14d2:	28 f4       	brcc	.+10     	; 0x14de <vfprintf+0xee>
    14d4:	0c 5f       	subi	r16, 0xFC	; 252
    14d6:	1f 4f       	sbci	r17, 0xFF	; 255
    14d8:	ff e3       	ldi	r31, 0x3F	; 63
    14da:	f9 83       	std	Y+1, r31	; 0x01
    14dc:	0d c0       	rjmp	.+26     	; 0x14f8 <vfprintf+0x108>
    14de:	83 36       	cpi	r24, 0x63	; 99
    14e0:	31 f0       	breq	.+12     	; 0x14ee <vfprintf+0xfe>
    14e2:	83 37       	cpi	r24, 0x73	; 115
    14e4:	71 f0       	breq	.+28     	; 0x1502 <vfprintf+0x112>
    14e6:	83 35       	cpi	r24, 0x53	; 83
    14e8:	09 f0       	breq	.+2      	; 0x14ec <vfprintf+0xfc>
    14ea:	5b c0       	rjmp	.+182    	; 0x15a2 <vfprintf+0x1b2>
    14ec:	22 c0       	rjmp	.+68     	; 0x1532 <vfprintf+0x142>
    14ee:	f8 01       	movw	r30, r16
    14f0:	80 81       	ld	r24, Z
    14f2:	89 83       	std	Y+1, r24	; 0x01
    14f4:	0e 5f       	subi	r16, 0xFE	; 254
    14f6:	1f 4f       	sbci	r17, 0xFF	; 255
    14f8:	44 24       	eor	r4, r4
    14fa:	43 94       	inc	r4
    14fc:	51 2c       	mov	r5, r1
    14fe:	54 01       	movw	r10, r8
    1500:	15 c0       	rjmp	.+42     	; 0x152c <vfprintf+0x13c>
    1502:	38 01       	movw	r6, r16
    1504:	f2 e0       	ldi	r31, 0x02	; 2
    1506:	6f 0e       	add	r6, r31
    1508:	71 1c       	adc	r7, r1
    150a:	f8 01       	movw	r30, r16
    150c:	a0 80       	ld	r10, Z
    150e:	b1 80       	ldd	r11, Z+1	; 0x01
    1510:	26 ff       	sbrs	r18, 6
    1512:	03 c0       	rjmp	.+6      	; 0x151a <vfprintf+0x12a>
    1514:	65 2d       	mov	r22, r5
    1516:	70 e0       	ldi	r23, 0x00	; 0
    1518:	02 c0       	rjmp	.+4      	; 0x151e <vfprintf+0x12e>
    151a:	6f ef       	ldi	r22, 0xFF	; 255
    151c:	7f ef       	ldi	r23, 0xFF	; 255
    151e:	c5 01       	movw	r24, r10
    1520:	2c 87       	std	Y+12, r18	; 0x0c
    1522:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <strnlen>
    1526:	2c 01       	movw	r4, r24
    1528:	83 01       	movw	r16, r6
    152a:	2c 85       	ldd	r18, Y+12	; 0x0c
    152c:	2f 77       	andi	r18, 0x7F	; 127
    152e:	22 2e       	mov	r2, r18
    1530:	17 c0       	rjmp	.+46     	; 0x1560 <vfprintf+0x170>
    1532:	38 01       	movw	r6, r16
    1534:	f2 e0       	ldi	r31, 0x02	; 2
    1536:	6f 0e       	add	r6, r31
    1538:	71 1c       	adc	r7, r1
    153a:	f8 01       	movw	r30, r16
    153c:	a0 80       	ld	r10, Z
    153e:	b1 80       	ldd	r11, Z+1	; 0x01
    1540:	26 ff       	sbrs	r18, 6
    1542:	03 c0       	rjmp	.+6      	; 0x154a <vfprintf+0x15a>
    1544:	65 2d       	mov	r22, r5
    1546:	70 e0       	ldi	r23, 0x00	; 0
    1548:	02 c0       	rjmp	.+4      	; 0x154e <vfprintf+0x15e>
    154a:	6f ef       	ldi	r22, 0xFF	; 255
    154c:	7f ef       	ldi	r23, 0xFF	; 255
    154e:	c5 01       	movw	r24, r10
    1550:	2c 87       	std	Y+12, r18	; 0x0c
    1552:	0e 94 ca 0b 	call	0x1794	; 0x1794 <strnlen_P>
    1556:	2c 01       	movw	r4, r24
    1558:	2c 85       	ldd	r18, Y+12	; 0x0c
    155a:	20 68       	ori	r18, 0x80	; 128
    155c:	22 2e       	mov	r2, r18
    155e:	83 01       	movw	r16, r6
    1560:	23 fc       	sbrc	r2, 3
    1562:	1b c0       	rjmp	.+54     	; 0x159a <vfprintf+0x1aa>
    1564:	83 2d       	mov	r24, r3
    1566:	90 e0       	ldi	r25, 0x00	; 0
    1568:	48 16       	cp	r4, r24
    156a:	59 06       	cpc	r5, r25
    156c:	b0 f4       	brcc	.+44     	; 0x159a <vfprintf+0x1aa>
    156e:	b7 01       	movw	r22, r14
    1570:	80 e2       	ldi	r24, 0x20	; 32
    1572:	90 e0       	ldi	r25, 0x00	; 0
    1574:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <fputc>
    1578:	3a 94       	dec	r3
    157a:	f4 cf       	rjmp	.-24     	; 0x1564 <vfprintf+0x174>
    157c:	f5 01       	movw	r30, r10
    157e:	27 fc       	sbrc	r2, 7
    1580:	85 91       	lpm	r24, Z+
    1582:	27 fe       	sbrs	r2, 7
    1584:	81 91       	ld	r24, Z+
    1586:	5f 01       	movw	r10, r30
    1588:	b7 01       	movw	r22, r14
    158a:	90 e0       	ldi	r25, 0x00	; 0
    158c:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <fputc>
    1590:	31 10       	cpse	r3, r1
    1592:	3a 94       	dec	r3
    1594:	f1 e0       	ldi	r31, 0x01	; 1
    1596:	4f 1a       	sub	r4, r31
    1598:	51 08       	sbc	r5, r1
    159a:	41 14       	cp	r4, r1
    159c:	51 04       	cpc	r5, r1
    159e:	71 f7       	brne	.-36     	; 0x157c <vfprintf+0x18c>
    15a0:	e5 c0       	rjmp	.+458    	; 0x176c <vfprintf+0x37c>
    15a2:	84 36       	cpi	r24, 0x64	; 100
    15a4:	11 f0       	breq	.+4      	; 0x15aa <vfprintf+0x1ba>
    15a6:	89 36       	cpi	r24, 0x69	; 105
    15a8:	39 f5       	brne	.+78     	; 0x15f8 <vfprintf+0x208>
    15aa:	f8 01       	movw	r30, r16
    15ac:	27 ff       	sbrs	r18, 7
    15ae:	07 c0       	rjmp	.+14     	; 0x15be <vfprintf+0x1ce>
    15b0:	60 81       	ld	r22, Z
    15b2:	71 81       	ldd	r23, Z+1	; 0x01
    15b4:	82 81       	ldd	r24, Z+2	; 0x02
    15b6:	93 81       	ldd	r25, Z+3	; 0x03
    15b8:	0c 5f       	subi	r16, 0xFC	; 252
    15ba:	1f 4f       	sbci	r17, 0xFF	; 255
    15bc:	08 c0       	rjmp	.+16     	; 0x15ce <vfprintf+0x1de>
    15be:	60 81       	ld	r22, Z
    15c0:	71 81       	ldd	r23, Z+1	; 0x01
    15c2:	88 27       	eor	r24, r24
    15c4:	77 fd       	sbrc	r23, 7
    15c6:	80 95       	com	r24
    15c8:	98 2f       	mov	r25, r24
    15ca:	0e 5f       	subi	r16, 0xFE	; 254
    15cc:	1f 4f       	sbci	r17, 0xFF	; 255
    15ce:	2f 76       	andi	r18, 0x6F	; 111
    15d0:	b2 2e       	mov	r11, r18
    15d2:	97 ff       	sbrs	r25, 7
    15d4:	09 c0       	rjmp	.+18     	; 0x15e8 <vfprintf+0x1f8>
    15d6:	90 95       	com	r25
    15d8:	80 95       	com	r24
    15da:	70 95       	com	r23
    15dc:	61 95       	neg	r22
    15de:	7f 4f       	sbci	r23, 0xFF	; 255
    15e0:	8f 4f       	sbci	r24, 0xFF	; 255
    15e2:	9f 4f       	sbci	r25, 0xFF	; 255
    15e4:	20 68       	ori	r18, 0x80	; 128
    15e6:	b2 2e       	mov	r11, r18
    15e8:	2a e0       	ldi	r18, 0x0A	; 10
    15ea:	30 e0       	ldi	r19, 0x00	; 0
    15ec:	a4 01       	movw	r20, r8
    15ee:	0e 94 12 0c 	call	0x1824	; 0x1824 <__ultoa_invert>
    15f2:	a8 2e       	mov	r10, r24
    15f4:	a8 18       	sub	r10, r8
    15f6:	44 c0       	rjmp	.+136    	; 0x1680 <vfprintf+0x290>
    15f8:	85 37       	cpi	r24, 0x75	; 117
    15fa:	29 f4       	brne	.+10     	; 0x1606 <vfprintf+0x216>
    15fc:	2f 7e       	andi	r18, 0xEF	; 239
    15fe:	b2 2e       	mov	r11, r18
    1600:	2a e0       	ldi	r18, 0x0A	; 10
    1602:	30 e0       	ldi	r19, 0x00	; 0
    1604:	25 c0       	rjmp	.+74     	; 0x1650 <vfprintf+0x260>
    1606:	f2 2f       	mov	r31, r18
    1608:	f9 7f       	andi	r31, 0xF9	; 249
    160a:	bf 2e       	mov	r11, r31
    160c:	8f 36       	cpi	r24, 0x6F	; 111
    160e:	c1 f0       	breq	.+48     	; 0x1640 <vfprintf+0x250>
    1610:	18 f4       	brcc	.+6      	; 0x1618 <vfprintf+0x228>
    1612:	88 35       	cpi	r24, 0x58	; 88
    1614:	79 f0       	breq	.+30     	; 0x1634 <vfprintf+0x244>
    1616:	b4 c0       	rjmp	.+360    	; 0x1780 <vfprintf+0x390>
    1618:	80 37       	cpi	r24, 0x70	; 112
    161a:	19 f0       	breq	.+6      	; 0x1622 <vfprintf+0x232>
    161c:	88 37       	cpi	r24, 0x78	; 120
    161e:	21 f0       	breq	.+8      	; 0x1628 <vfprintf+0x238>
    1620:	af c0       	rjmp	.+350    	; 0x1780 <vfprintf+0x390>
    1622:	2f 2f       	mov	r18, r31
    1624:	20 61       	ori	r18, 0x10	; 16
    1626:	b2 2e       	mov	r11, r18
    1628:	b4 fe       	sbrs	r11, 4
    162a:	0d c0       	rjmp	.+26     	; 0x1646 <vfprintf+0x256>
    162c:	8b 2d       	mov	r24, r11
    162e:	84 60       	ori	r24, 0x04	; 4
    1630:	b8 2e       	mov	r11, r24
    1632:	09 c0       	rjmp	.+18     	; 0x1646 <vfprintf+0x256>
    1634:	24 ff       	sbrs	r18, 4
    1636:	0a c0       	rjmp	.+20     	; 0x164c <vfprintf+0x25c>
    1638:	9f 2f       	mov	r25, r31
    163a:	96 60       	ori	r25, 0x06	; 6
    163c:	b9 2e       	mov	r11, r25
    163e:	06 c0       	rjmp	.+12     	; 0x164c <vfprintf+0x25c>
    1640:	28 e0       	ldi	r18, 0x08	; 8
    1642:	30 e0       	ldi	r19, 0x00	; 0
    1644:	05 c0       	rjmp	.+10     	; 0x1650 <vfprintf+0x260>
    1646:	20 e1       	ldi	r18, 0x10	; 16
    1648:	30 e0       	ldi	r19, 0x00	; 0
    164a:	02 c0       	rjmp	.+4      	; 0x1650 <vfprintf+0x260>
    164c:	20 e1       	ldi	r18, 0x10	; 16
    164e:	32 e0       	ldi	r19, 0x02	; 2
    1650:	f8 01       	movw	r30, r16
    1652:	b7 fe       	sbrs	r11, 7
    1654:	07 c0       	rjmp	.+14     	; 0x1664 <vfprintf+0x274>
    1656:	60 81       	ld	r22, Z
    1658:	71 81       	ldd	r23, Z+1	; 0x01
    165a:	82 81       	ldd	r24, Z+2	; 0x02
    165c:	93 81       	ldd	r25, Z+3	; 0x03
    165e:	0c 5f       	subi	r16, 0xFC	; 252
    1660:	1f 4f       	sbci	r17, 0xFF	; 255
    1662:	06 c0       	rjmp	.+12     	; 0x1670 <vfprintf+0x280>
    1664:	60 81       	ld	r22, Z
    1666:	71 81       	ldd	r23, Z+1	; 0x01
    1668:	80 e0       	ldi	r24, 0x00	; 0
    166a:	90 e0       	ldi	r25, 0x00	; 0
    166c:	0e 5f       	subi	r16, 0xFE	; 254
    166e:	1f 4f       	sbci	r17, 0xFF	; 255
    1670:	a4 01       	movw	r20, r8
    1672:	0e 94 12 0c 	call	0x1824	; 0x1824 <__ultoa_invert>
    1676:	a8 2e       	mov	r10, r24
    1678:	a8 18       	sub	r10, r8
    167a:	fb 2d       	mov	r31, r11
    167c:	ff 77       	andi	r31, 0x7F	; 127
    167e:	bf 2e       	mov	r11, r31
    1680:	b6 fe       	sbrs	r11, 6
    1682:	0b c0       	rjmp	.+22     	; 0x169a <vfprintf+0x2aa>
    1684:	2b 2d       	mov	r18, r11
    1686:	2e 7f       	andi	r18, 0xFE	; 254
    1688:	a5 14       	cp	r10, r5
    168a:	50 f4       	brcc	.+20     	; 0x16a0 <vfprintf+0x2b0>
    168c:	b4 fe       	sbrs	r11, 4
    168e:	0a c0       	rjmp	.+20     	; 0x16a4 <vfprintf+0x2b4>
    1690:	b2 fc       	sbrc	r11, 2
    1692:	08 c0       	rjmp	.+16     	; 0x16a4 <vfprintf+0x2b4>
    1694:	2b 2d       	mov	r18, r11
    1696:	2e 7e       	andi	r18, 0xEE	; 238
    1698:	05 c0       	rjmp	.+10     	; 0x16a4 <vfprintf+0x2b4>
    169a:	7a 2c       	mov	r7, r10
    169c:	2b 2d       	mov	r18, r11
    169e:	03 c0       	rjmp	.+6      	; 0x16a6 <vfprintf+0x2b6>
    16a0:	7a 2c       	mov	r7, r10
    16a2:	01 c0       	rjmp	.+2      	; 0x16a6 <vfprintf+0x2b6>
    16a4:	75 2c       	mov	r7, r5
    16a6:	24 ff       	sbrs	r18, 4
    16a8:	0d c0       	rjmp	.+26     	; 0x16c4 <vfprintf+0x2d4>
    16aa:	fe 01       	movw	r30, r28
    16ac:	ea 0d       	add	r30, r10
    16ae:	f1 1d       	adc	r31, r1
    16b0:	80 81       	ld	r24, Z
    16b2:	80 33       	cpi	r24, 0x30	; 48
    16b4:	11 f4       	brne	.+4      	; 0x16ba <vfprintf+0x2ca>
    16b6:	29 7e       	andi	r18, 0xE9	; 233
    16b8:	09 c0       	rjmp	.+18     	; 0x16cc <vfprintf+0x2dc>
    16ba:	22 ff       	sbrs	r18, 2
    16bc:	06 c0       	rjmp	.+12     	; 0x16ca <vfprintf+0x2da>
    16be:	73 94       	inc	r7
    16c0:	73 94       	inc	r7
    16c2:	04 c0       	rjmp	.+8      	; 0x16cc <vfprintf+0x2dc>
    16c4:	82 2f       	mov	r24, r18
    16c6:	86 78       	andi	r24, 0x86	; 134
    16c8:	09 f0       	breq	.+2      	; 0x16cc <vfprintf+0x2dc>
    16ca:	73 94       	inc	r7
    16cc:	23 fd       	sbrc	r18, 3
    16ce:	13 c0       	rjmp	.+38     	; 0x16f6 <vfprintf+0x306>
    16d0:	20 ff       	sbrs	r18, 0
    16d2:	06 c0       	rjmp	.+12     	; 0x16e0 <vfprintf+0x2f0>
    16d4:	5a 2c       	mov	r5, r10
    16d6:	73 14       	cp	r7, r3
    16d8:	18 f4       	brcc	.+6      	; 0x16e0 <vfprintf+0x2f0>
    16da:	53 0c       	add	r5, r3
    16dc:	57 18       	sub	r5, r7
    16de:	73 2c       	mov	r7, r3
    16e0:	73 14       	cp	r7, r3
    16e2:	68 f4       	brcc	.+26     	; 0x16fe <vfprintf+0x30e>
    16e4:	b7 01       	movw	r22, r14
    16e6:	80 e2       	ldi	r24, 0x20	; 32
    16e8:	90 e0       	ldi	r25, 0x00	; 0
    16ea:	2c 87       	std	Y+12, r18	; 0x0c
    16ec:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <fputc>
    16f0:	73 94       	inc	r7
    16f2:	2c 85       	ldd	r18, Y+12	; 0x0c
    16f4:	f5 cf       	rjmp	.-22     	; 0x16e0 <vfprintf+0x2f0>
    16f6:	73 14       	cp	r7, r3
    16f8:	10 f4       	brcc	.+4      	; 0x16fe <vfprintf+0x30e>
    16fa:	37 18       	sub	r3, r7
    16fc:	01 c0       	rjmp	.+2      	; 0x1700 <vfprintf+0x310>
    16fe:	31 2c       	mov	r3, r1
    1700:	24 ff       	sbrs	r18, 4
    1702:	12 c0       	rjmp	.+36     	; 0x1728 <vfprintf+0x338>
    1704:	b7 01       	movw	r22, r14
    1706:	80 e3       	ldi	r24, 0x30	; 48
    1708:	90 e0       	ldi	r25, 0x00	; 0
    170a:	2c 87       	std	Y+12, r18	; 0x0c
    170c:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <fputc>
    1710:	2c 85       	ldd	r18, Y+12	; 0x0c
    1712:	22 ff       	sbrs	r18, 2
    1714:	17 c0       	rjmp	.+46     	; 0x1744 <vfprintf+0x354>
    1716:	21 ff       	sbrs	r18, 1
    1718:	03 c0       	rjmp	.+6      	; 0x1720 <vfprintf+0x330>
    171a:	88 e5       	ldi	r24, 0x58	; 88
    171c:	90 e0       	ldi	r25, 0x00	; 0
    171e:	02 c0       	rjmp	.+4      	; 0x1724 <vfprintf+0x334>
    1720:	88 e7       	ldi	r24, 0x78	; 120
    1722:	90 e0       	ldi	r25, 0x00	; 0
    1724:	b7 01       	movw	r22, r14
    1726:	0c c0       	rjmp	.+24     	; 0x1740 <vfprintf+0x350>
    1728:	82 2f       	mov	r24, r18
    172a:	86 78       	andi	r24, 0x86	; 134
    172c:	59 f0       	breq	.+22     	; 0x1744 <vfprintf+0x354>
    172e:	21 fd       	sbrc	r18, 1
    1730:	02 c0       	rjmp	.+4      	; 0x1736 <vfprintf+0x346>
    1732:	80 e2       	ldi	r24, 0x20	; 32
    1734:	01 c0       	rjmp	.+2      	; 0x1738 <vfprintf+0x348>
    1736:	8b e2       	ldi	r24, 0x2B	; 43
    1738:	27 fd       	sbrc	r18, 7
    173a:	8d e2       	ldi	r24, 0x2D	; 45
    173c:	b7 01       	movw	r22, r14
    173e:	90 e0       	ldi	r25, 0x00	; 0
    1740:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <fputc>
    1744:	a5 14       	cp	r10, r5
    1746:	38 f4       	brcc	.+14     	; 0x1756 <vfprintf+0x366>
    1748:	b7 01       	movw	r22, r14
    174a:	80 e3       	ldi	r24, 0x30	; 48
    174c:	90 e0       	ldi	r25, 0x00	; 0
    174e:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <fputc>
    1752:	5a 94       	dec	r5
    1754:	f7 cf       	rjmp	.-18     	; 0x1744 <vfprintf+0x354>
    1756:	aa 94       	dec	r10
    1758:	f4 01       	movw	r30, r8
    175a:	ea 0d       	add	r30, r10
    175c:	f1 1d       	adc	r31, r1
    175e:	80 81       	ld	r24, Z
    1760:	b7 01       	movw	r22, r14
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <fputc>
    1768:	a1 10       	cpse	r10, r1
    176a:	f5 cf       	rjmp	.-22     	; 0x1756 <vfprintf+0x366>
    176c:	33 20       	and	r3, r3
    176e:	09 f4       	brne	.+2      	; 0x1772 <vfprintf+0x382>
    1770:	51 ce       	rjmp	.-862    	; 0x1414 <vfprintf+0x24>
    1772:	b7 01       	movw	r22, r14
    1774:	80 e2       	ldi	r24, 0x20	; 32
    1776:	90 e0       	ldi	r25, 0x00	; 0
    1778:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <fputc>
    177c:	3a 94       	dec	r3
    177e:	f6 cf       	rjmp	.-20     	; 0x176c <vfprintf+0x37c>
    1780:	f7 01       	movw	r30, r14
    1782:	86 81       	ldd	r24, Z+6	; 0x06
    1784:	97 81       	ldd	r25, Z+7	; 0x07
    1786:	02 c0       	rjmp	.+4      	; 0x178c <vfprintf+0x39c>
    1788:	8f ef       	ldi	r24, 0xFF	; 255
    178a:	9f ef       	ldi	r25, 0xFF	; 255
    178c:	2c 96       	adiw	r28, 0x0c	; 12
    178e:	e2 e1       	ldi	r30, 0x12	; 18
    1790:	0c 94 8c 0c 	jmp	0x1918	; 0x1918 <__epilogue_restores__>

00001794 <strnlen_P>:
    1794:	fc 01       	movw	r30, r24
    1796:	05 90       	lpm	r0, Z+
    1798:	61 50       	subi	r22, 0x01	; 1
    179a:	70 40       	sbci	r23, 0x00	; 0
    179c:	01 10       	cpse	r0, r1
    179e:	d8 f7       	brcc	.-10     	; 0x1796 <strnlen_P+0x2>
    17a0:	80 95       	com	r24
    17a2:	90 95       	com	r25
    17a4:	8e 0f       	add	r24, r30
    17a6:	9f 1f       	adc	r25, r31
    17a8:	08 95       	ret

000017aa <strnlen>:
    17aa:	fc 01       	movw	r30, r24
    17ac:	61 50       	subi	r22, 0x01	; 1
    17ae:	70 40       	sbci	r23, 0x00	; 0
    17b0:	01 90       	ld	r0, Z+
    17b2:	01 10       	cpse	r0, r1
    17b4:	d8 f7       	brcc	.-10     	; 0x17ac <strnlen+0x2>
    17b6:	80 95       	com	r24
    17b8:	90 95       	com	r25
    17ba:	8e 0f       	add	r24, r30
    17bc:	9f 1f       	adc	r25, r31
    17be:	08 95       	ret

000017c0 <fputc>:
    17c0:	0f 93       	push	r16
    17c2:	1f 93       	push	r17
    17c4:	cf 93       	push	r28
    17c6:	df 93       	push	r29
    17c8:	18 2f       	mov	r17, r24
    17ca:	09 2f       	mov	r16, r25
    17cc:	eb 01       	movw	r28, r22
    17ce:	8b 81       	ldd	r24, Y+3	; 0x03
    17d0:	81 fd       	sbrc	r24, 1
    17d2:	03 c0       	rjmp	.+6      	; 0x17da <fputc+0x1a>
    17d4:	8f ef       	ldi	r24, 0xFF	; 255
    17d6:	9f ef       	ldi	r25, 0xFF	; 255
    17d8:	20 c0       	rjmp	.+64     	; 0x181a <fputc+0x5a>
    17da:	82 ff       	sbrs	r24, 2
    17dc:	10 c0       	rjmp	.+32     	; 0x17fe <fputc+0x3e>
    17de:	4e 81       	ldd	r20, Y+6	; 0x06
    17e0:	5f 81       	ldd	r21, Y+7	; 0x07
    17e2:	2c 81       	ldd	r18, Y+4	; 0x04
    17e4:	3d 81       	ldd	r19, Y+5	; 0x05
    17e6:	42 17       	cp	r20, r18
    17e8:	53 07       	cpc	r21, r19
    17ea:	7c f4       	brge	.+30     	; 0x180a <fputc+0x4a>
    17ec:	e8 81       	ld	r30, Y
    17ee:	f9 81       	ldd	r31, Y+1	; 0x01
    17f0:	9f 01       	movw	r18, r30
    17f2:	2f 5f       	subi	r18, 0xFF	; 255
    17f4:	3f 4f       	sbci	r19, 0xFF	; 255
    17f6:	39 83       	std	Y+1, r19	; 0x01
    17f8:	28 83       	st	Y, r18
    17fa:	10 83       	st	Z, r17
    17fc:	06 c0       	rjmp	.+12     	; 0x180a <fputc+0x4a>
    17fe:	e8 85       	ldd	r30, Y+8	; 0x08
    1800:	f9 85       	ldd	r31, Y+9	; 0x09
    1802:	81 2f       	mov	r24, r17
    1804:	09 95       	icall
    1806:	89 2b       	or	r24, r25
    1808:	29 f7       	brne	.-54     	; 0x17d4 <fputc+0x14>
    180a:	2e 81       	ldd	r18, Y+6	; 0x06
    180c:	3f 81       	ldd	r19, Y+7	; 0x07
    180e:	2f 5f       	subi	r18, 0xFF	; 255
    1810:	3f 4f       	sbci	r19, 0xFF	; 255
    1812:	3f 83       	std	Y+7, r19	; 0x07
    1814:	2e 83       	std	Y+6, r18	; 0x06
    1816:	81 2f       	mov	r24, r17
    1818:	90 2f       	mov	r25, r16
    181a:	df 91       	pop	r29
    181c:	cf 91       	pop	r28
    181e:	1f 91       	pop	r17
    1820:	0f 91       	pop	r16
    1822:	08 95       	ret

00001824 <__ultoa_invert>:
    1824:	fa 01       	movw	r30, r20
    1826:	aa 27       	eor	r26, r26
    1828:	28 30       	cpi	r18, 0x08	; 8
    182a:	51 f1       	breq	.+84     	; 0x1880 <__ultoa_invert+0x5c>
    182c:	20 31       	cpi	r18, 0x10	; 16
    182e:	81 f1       	breq	.+96     	; 0x1890 <__ultoa_invert+0x6c>
    1830:	e8 94       	clt
    1832:	6f 93       	push	r22
    1834:	6e 7f       	andi	r22, 0xFE	; 254
    1836:	6e 5f       	subi	r22, 0xFE	; 254
    1838:	7f 4f       	sbci	r23, 0xFF	; 255
    183a:	8f 4f       	sbci	r24, 0xFF	; 255
    183c:	9f 4f       	sbci	r25, 0xFF	; 255
    183e:	af 4f       	sbci	r26, 0xFF	; 255
    1840:	b1 e0       	ldi	r27, 0x01	; 1
    1842:	3e d0       	rcall	.+124    	; 0x18c0 <__ultoa_invert+0x9c>
    1844:	b4 e0       	ldi	r27, 0x04	; 4
    1846:	3c d0       	rcall	.+120    	; 0x18c0 <__ultoa_invert+0x9c>
    1848:	67 0f       	add	r22, r23
    184a:	78 1f       	adc	r23, r24
    184c:	89 1f       	adc	r24, r25
    184e:	9a 1f       	adc	r25, r26
    1850:	a1 1d       	adc	r26, r1
    1852:	68 0f       	add	r22, r24
    1854:	79 1f       	adc	r23, r25
    1856:	8a 1f       	adc	r24, r26
    1858:	91 1d       	adc	r25, r1
    185a:	a1 1d       	adc	r26, r1
    185c:	6a 0f       	add	r22, r26
    185e:	71 1d       	adc	r23, r1
    1860:	81 1d       	adc	r24, r1
    1862:	91 1d       	adc	r25, r1
    1864:	a1 1d       	adc	r26, r1
    1866:	20 d0       	rcall	.+64     	; 0x18a8 <__ultoa_invert+0x84>
    1868:	09 f4       	brne	.+2      	; 0x186c <__ultoa_invert+0x48>
    186a:	68 94       	set
    186c:	3f 91       	pop	r19
    186e:	2a e0       	ldi	r18, 0x0A	; 10
    1870:	26 9f       	mul	r18, r22
    1872:	11 24       	eor	r1, r1
    1874:	30 19       	sub	r19, r0
    1876:	30 5d       	subi	r19, 0xD0	; 208
    1878:	31 93       	st	Z+, r19
    187a:	de f6       	brtc	.-74     	; 0x1832 <__ultoa_invert+0xe>
    187c:	cf 01       	movw	r24, r30
    187e:	08 95       	ret
    1880:	46 2f       	mov	r20, r22
    1882:	47 70       	andi	r20, 0x07	; 7
    1884:	40 5d       	subi	r20, 0xD0	; 208
    1886:	41 93       	st	Z+, r20
    1888:	b3 e0       	ldi	r27, 0x03	; 3
    188a:	0f d0       	rcall	.+30     	; 0x18aa <__ultoa_invert+0x86>
    188c:	c9 f7       	brne	.-14     	; 0x1880 <__ultoa_invert+0x5c>
    188e:	f6 cf       	rjmp	.-20     	; 0x187c <__ultoa_invert+0x58>
    1890:	46 2f       	mov	r20, r22
    1892:	4f 70       	andi	r20, 0x0F	; 15
    1894:	40 5d       	subi	r20, 0xD0	; 208
    1896:	4a 33       	cpi	r20, 0x3A	; 58
    1898:	18 f0       	brcs	.+6      	; 0x18a0 <__ultoa_invert+0x7c>
    189a:	49 5d       	subi	r20, 0xD9	; 217
    189c:	31 fd       	sbrc	r19, 1
    189e:	40 52       	subi	r20, 0x20	; 32
    18a0:	41 93       	st	Z+, r20
    18a2:	02 d0       	rcall	.+4      	; 0x18a8 <__ultoa_invert+0x84>
    18a4:	a9 f7       	brne	.-22     	; 0x1890 <__ultoa_invert+0x6c>
    18a6:	ea cf       	rjmp	.-44     	; 0x187c <__ultoa_invert+0x58>
    18a8:	b4 e0       	ldi	r27, 0x04	; 4
    18aa:	a6 95       	lsr	r26
    18ac:	97 95       	ror	r25
    18ae:	87 95       	ror	r24
    18b0:	77 95       	ror	r23
    18b2:	67 95       	ror	r22
    18b4:	ba 95       	dec	r27
    18b6:	c9 f7       	brne	.-14     	; 0x18aa <__ultoa_invert+0x86>
    18b8:	00 97       	sbiw	r24, 0x00	; 0
    18ba:	61 05       	cpc	r22, r1
    18bc:	71 05       	cpc	r23, r1
    18be:	08 95       	ret
    18c0:	9b 01       	movw	r18, r22
    18c2:	ac 01       	movw	r20, r24
    18c4:	0a 2e       	mov	r0, r26
    18c6:	06 94       	lsr	r0
    18c8:	57 95       	ror	r21
    18ca:	47 95       	ror	r20
    18cc:	37 95       	ror	r19
    18ce:	27 95       	ror	r18
    18d0:	ba 95       	dec	r27
    18d2:	c9 f7       	brne	.-14     	; 0x18c6 <__ultoa_invert+0xa2>
    18d4:	62 0f       	add	r22, r18
    18d6:	73 1f       	adc	r23, r19
    18d8:	84 1f       	adc	r24, r20
    18da:	95 1f       	adc	r25, r21
    18dc:	a0 1d       	adc	r26, r0
    18de:	08 95       	ret

000018e0 <__prologue_saves__>:
    18e0:	2f 92       	push	r2
    18e2:	3f 92       	push	r3
    18e4:	4f 92       	push	r4
    18e6:	5f 92       	push	r5
    18e8:	6f 92       	push	r6
    18ea:	7f 92       	push	r7
    18ec:	8f 92       	push	r8
    18ee:	9f 92       	push	r9
    18f0:	af 92       	push	r10
    18f2:	bf 92       	push	r11
    18f4:	cf 92       	push	r12
    18f6:	df 92       	push	r13
    18f8:	ef 92       	push	r14
    18fa:	ff 92       	push	r15
    18fc:	0f 93       	push	r16
    18fe:	1f 93       	push	r17
    1900:	cf 93       	push	r28
    1902:	df 93       	push	r29
    1904:	cd b7       	in	r28, 0x3d	; 61
    1906:	de b7       	in	r29, 0x3e	; 62
    1908:	ca 1b       	sub	r28, r26
    190a:	db 0b       	sbc	r29, r27
    190c:	0f b6       	in	r0, 0x3f	; 63
    190e:	f8 94       	cli
    1910:	de bf       	out	0x3e, r29	; 62
    1912:	0f be       	out	0x3f, r0	; 63
    1914:	cd bf       	out	0x3d, r28	; 61
    1916:	09 94       	ijmp

00001918 <__epilogue_restores__>:
    1918:	2a 88       	ldd	r2, Y+18	; 0x12
    191a:	39 88       	ldd	r3, Y+17	; 0x11
    191c:	48 88       	ldd	r4, Y+16	; 0x10
    191e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1920:	6e 84       	ldd	r6, Y+14	; 0x0e
    1922:	7d 84       	ldd	r7, Y+13	; 0x0d
    1924:	8c 84       	ldd	r8, Y+12	; 0x0c
    1926:	9b 84       	ldd	r9, Y+11	; 0x0b
    1928:	aa 84       	ldd	r10, Y+10	; 0x0a
    192a:	b9 84       	ldd	r11, Y+9	; 0x09
    192c:	c8 84       	ldd	r12, Y+8	; 0x08
    192e:	df 80       	ldd	r13, Y+7	; 0x07
    1930:	ee 80       	ldd	r14, Y+6	; 0x06
    1932:	fd 80       	ldd	r15, Y+5	; 0x05
    1934:	0c 81       	ldd	r16, Y+4	; 0x04
    1936:	1b 81       	ldd	r17, Y+3	; 0x03
    1938:	aa 81       	ldd	r26, Y+2	; 0x02
    193a:	b9 81       	ldd	r27, Y+1	; 0x01
    193c:	ce 0f       	add	r28, r30
    193e:	d1 1d       	adc	r29, r1
    1940:	0f b6       	in	r0, 0x3f	; 63
    1942:	f8 94       	cli
    1944:	de bf       	out	0x3e, r29	; 62
    1946:	0f be       	out	0x3f, r0	; 63
    1948:	cd bf       	out	0x3d, r28	; 61
    194a:	ed 01       	movw	r28, r26
    194c:	08 95       	ret

0000194e <_exit>:
    194e:	f8 94       	cli

00001950 <__stop_program>:
    1950:	ff cf       	rjmp	.-2      	; 0x1950 <__stop_program>
